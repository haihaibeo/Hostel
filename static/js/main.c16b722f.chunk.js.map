{"version":3,"sources":["API.ts","Components/HomeComponents/PropertyTypeList.tsx","Components/NavComponents/PickRangeDay.tsx","Components/NavComponents/PopDetail.tsx","Components/NavComponents/SearchBar.tsx","Images/HomeBG.webp","ColorModeSwitcher.tsx","logo.svg","Logo.tsx","Contexts/AuthContext.tsx","Components/LoginForm.tsx","Components/NavComponents/Navbar.tsx","Pages/HomePage.tsx","Components/SingleRoomComponents/MyRoomBadge.tsx","Pages/SingleRoom.tsx","Pages/ErrorPage.tsx","Components/FilterComponents/RoomCard.tsx","Components/FilterComponents/RoomCardList.tsx","Pages/RoomsPage.tsx","Components/NavComponents/Footer.tsx","Pages/ProfilePage.tsx","Pages/PublishRoomPage.tsx","Pages/PreviewRoomPage.tsx","Pages/RegisterHostPage.tsx","App.tsx","index.tsx"],"names":["API_URL","axAuth","axios","create","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","status","console","log","removeItem","Promise","reject","postRoom","data","method","url","authenticate","req","post","email","password","register","confirmPassword","fetchPropertiesView","typeId","query","a","resolve","setTimeout","get","params","city","from","to","guestNum","childrenNum","fetchCities","fetch","res","json","fetchPropertyTypes","fetchPropertyById","id","fetchUserReservation","toggleLike","roomId","settings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","swipeToSlide","responsive","breakpoint","PropertyType","type","history","children","useHistory","alignItems","p","onClick","push","pathname","state","hasArrow","placement","aria-label","label","description","openDelay","maxW","maxH","minH","width","height","src","thumbnailImg","objectFit","mt","fontWeight","as","lineHeight","isTruncated","propertyType","color","fontSize","count","PropertyTypeList","useQuery","staleTime","isError","isFetching","map","d","key","getDatesBetween","Date","now","fromDate","toDate","datesBtw","start","setDate","getDate","getDateCheckOutOnly","schedules","reservedDates","r","getNextPossibleDate","day","nextDay","undefined","forEach","rFrom","defaultDate","enteredTo","PickRangeDay","updateDate","toast","useToast","React","useState","setState","disabled","before","disabledDates","i","length","dayOff","getDisabledDates","disabledDays","setDisabledDays","useEffect","isSelectingFirstDay","isBeforeFirstDay","DateUtils","isDayBefore","handleResetClick","selected","modifiers","end","checkoutOnly","alignSelf","flexDir","numberOfMonths","fromMonth","onDayClick","today","duration","s","after","onDayMouseEnter","selectedDays","justifyContent","toLocaleDateString","PopDetail","guest","updatePeople","maxGuest","style","backdropFilter","align","spacing","mr","border","borderColor","variant","borderRadius","mx","isDisabled","SearchBar","props","cities","isLoading","form","search","updateSearch","display","lg","pointerEvents","list","placeholder","size","onChange","e","target","value","c","cityName","cityId","closeOnBlur","w","_focusVisible","px","flexWrap","bgColor","useColorModeValue","bg","adult","minW","ml","onClickSearch","ColorModeSwitcher","toggleColorMode","useColorMode","text","SwitchIcon","FaMoon","FaSun","marginLeft","icon","spin","keyframes","Logo","forwardRef","ref","animation","usePrefersReducedMotion","img","boxSize","logo","AuthContext","createContext","AuthProvider","setIsLoading","user","setUser","setToken","useQueryClient","tokenStorage","validateToken","then","logoutAsync","decodedUser","jwtDecode","name","roles","mutateLogin","useMutation","onSuccess","setItem","onError","message","onSettled","mutateRegister","messages","msg","title","isClosable","loginAsync","mutate","registerAsync","Provider","updateToken","LoginForm","initRef","fromUrl","isRegistering","remember","loginForm","setLoginForm","emailError","setEmailError","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","test","validateEmail","confirmedPassword","authContext","useContext","isInvalid","htmlFor","isRequired","trim","my","minLength","in","checked","rounded","replace","textStyle","Navbar","auth","loginFormModal","useDisclosure","useRef","setIsRegistering","becomehostColor","useLocation","marginBottom","base","sm","onOpen","isOpen","onClose","motionPreset","isCentered","initialFocusRef","pb","Button","rightIcon","RouterLink","includes","HomePage","setSearch","background","BG","pt","fontFamily","textShadow","mb","ReactLink","defaultRoomBadges","MyRoomBadge","setIcon","badge","setBadge","foundBadge","find","b","RiUserStarLine","RiStarLine","alignContent","m","FloatingForm","room","bookInfo","feeCollapse","nightCount","setNightCount","checkPricing","bookFromDate","bookToDate","propertyId","fetchPricing","price","toDateString","formattedPrice","fontStyle","Array","fill","_","Math","round","totalStar","totalReview","colorRendering","borderTopLeftRadius","borderTopRightRadius","daysOff","borderBottomRadius","colorScheme","textDecoration","pricePerNight","cleaningFee","serviceFee","discountPercent","discount","totalCost","badges","defaultRoom","thumbnailUrl","images","thumbnailAlt","introduction","location","services","roomBadges","defaultOwner","profileImageUrl","SingleRoom","initRoom","setRoom","setBookInfo","owner","setOwner","didLike","setDidLike","slug","useParams","retry","rs","liked","mutateLike","leftIcon","overflow","gap","h","templateRows","templateColumns","slice","image","colSpan","rowSpan","loading","boxShadow","top","float","position","zIndex","borderWidth","letterSpacing","textTransform","md","ErrorPage","flexDirection","textAlign","maxWidth","RoomCard","isSaved","LinkReact","fit","fallback","alt","transition","_hover","transform","textOverflow","substring","justifySelf","RoomCardList","rooms","columns","index","QueryTag","tagProps","RoomsPage","URLSearchParams","searchBoxColor","setType","queryKeys","refetch","remove","gridGap","Footer","href","cursor","ReviewModal","modalProps","starHover","setStarHover","starReview","setStarReview","starColor","_focus","onMouseOver","onMouseLeave","Reservations","boxprops","reviewModal","gridTemplateColumns","total","timeCreated","reservationStatus","paymentStatus","toLowerCase","orientation","property","flex","reservationId","propId","UserLikesProperties","refetchOnMount","Notifications","ProfilePage","view","FaUserShield","ServiceDisplay","pr","opacity","isOn","isChecked","toggle","PublishRoomPage","countries","setCountries","countryId","deleteHash","propTypeId","introdution","refundPercent","number","streetName","breakfast","kitchen","parking","pet","wifi","pricing","basePrice","indexes","Set","has","countryName","add","getUniqeCountries","resCities","resTypes","publish","err","handleImagesInput","files","formData","FormData","append","catch","delHash","required","rt","rows","filter","ct","addressDesc","multiple","accept","minChildWidth","spacingX","spacingY","min","max","step","onChangeEnd","percent","parseInt","JSON","stringify","preventDefault","handlePublish","PreviewRoomPage","parse","SuccessAlert","RegisterHostPage","alert","handleRegisterClick","justifyItems","myTheme","extendTheme","components","defaultProps","queryClient","QueryClient","defaultOptions","queries","App","loadingRef","current","complete","staticStart","basename","theme","QueryClientProvider","client","exact","path","component","LoginPage","render","AuthRoute","rest","RoleRoute","haystack","needles","n","ifContainsAll","ScrollToTop","window","scrollTo","ReactDOM","initialColorMode","document","getElementById"],"mappings":"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","file":"static/js/main.c16b722f.chunk.js","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\n\r\n// export const API_URL = \"http://localhost:44344\";\r\nexport const API_URL = process.env.NODE_ENV === \"development\" ? \"http://localhost:44344\" : \"https://nicehostel.herokuapp.com\";\r\nconst API_IMAGE_UPLOADER_URL = \"https://api.imgur.com/3/upload\";\r\nconst API_IMAGE_CLIENT_ID = \"30ca2ca5dd1f71d\";\r\n// const API_IMAGE_CLIENT_SECRET = \"5e497c2ba20ff36c20aa512366ddee25300c56e1\";\r\n\r\nexport const axAuth = axios.create();\r\n\r\naxAuth.interceptors.request.use((config) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n\r\n    return config;\r\n})\r\n\r\naxAuth.interceptors.response.use((response) => {\r\n    return response;\r\n}, function (error) {\r\n    if (error.response.status === 401) {\r\n        console.log('unauthorized, logging out ...');\r\n        localStorage.removeItem(\"token\");\r\n    }\r\n    // else if(error.response.status === 404){\r\n    //     return Promise.reject(\"Connection error\")\r\n    // }\r\n    return Promise.reject(error.response);\r\n});\r\n\r\n// axios.interceptors.request.use((req) => {\r\n//     req.headers.Authorization = `Client-ID : ${API_IMAGE_CLIENT_ID}`\r\n//     return req;\r\n// })\r\n\r\ntype ReviewRequest = {\r\n    comment?: string;\r\n    reviewStar: number;\r\n    \r\n}\r\nexport const postReview = () => {\r\n\r\n}\r\n\r\nexport const postRoom = (data: PublishRoomState) => {\r\n    return axAuth({\r\n        method: \"POST\",\r\n        url: API_URL + \"/api/properties/\",\r\n        data: data,\r\n    })\r\n}\r\n\r\nexport const postImage = (data : any) => axAuth({\r\n    method: \"post\",\r\n    url: API_IMAGE_UPLOADER_URL,\r\n    data: data,\r\n    headers: {\r\n        'Content-Type' : 'multipart/form-data',\r\n    },\r\n})\r\n\r\nexport const deleteImage = (delHash: string) => axAuth({\r\n    method: \"DELETE\",\r\n    url: `https://api.imgur.com/3/image/${delHash}`,\r\n})\r\n\r\nexport const authenticate = (req: LoginRequest) => {\r\n    return axAuth.post<UserResponse>(API_URL + \"/api/user/authenticate\", {\r\n            \"email\": req.email,\r\n            \"password\": req.password\r\n        });\r\n}\r\n\r\nexport const registerHost = () => axAuth.post<UserResponse>(API_URL + \"/api/user/register-host\");\r\n\r\nexport const register = (req: RegisterRequest) =>{\r\n    return axios.post<UserResponse>(API_URL + \"/api/user/register-user\", {\r\n        \"email\": req.email,\r\n        \"password\": req.password,\r\n        \"confirmPassword\": req.confirmPassword\r\n    })\r\n}\r\n\r\nexport const fetchPropertiesView = async (typeId: string | undefined, query: SearchQuery) => {\r\n    await new Promise(resolve => setTimeout(resolve, 500));\r\n    let URI = `/api/properties`;\r\n    console.log(query);\r\n    return axios.get<RoomCard[]>(API_URL + URI,{\r\n        params: {\r\n            typeId : typeId,\r\n            city: query.city,\r\n            from: query.from,\r\n            to: query.to,\r\n            guestNum : query.guestNum,\r\n            childrenNum: query.childrenNum,\r\n        }\r\n    });\r\n}\r\n\r\nexport const fetchCities = async () => {\r\n    // const res = await ax({\r\n    //     method: \"GET\",\r\n    //     url: URL + \"api/city\",\r\n    //     timeout: 5000\r\n    // });\r\n    // return res;\r\n    const res = await fetch(API_URL + \"/api/cities\");\r\n    const data = res.json();\r\n    return data;\r\n}\r\n\r\nexport const fetchPropertyTypes = async () => {\r\n    const res = await fetch(API_URL + \"/api/propertytypes\");\r\n    const data: PropertyTypeType[] = await res.json();\r\n    return data;\r\n}\r\n\r\nexport const fetchPropertyById = async (id: string) => {\r\n    return axAuth.get(API_URL + \"/api/properties/\" + id);\r\n}\r\n\r\nexport const fetchPropertiesSaved = () => {\r\n    return axAuth.get<RoomCard[]>(API_URL + \"/api/properties/saved\");\r\n}\r\n\r\nexport const fetchUserReservation = async () => {\r\n    return axAuth.get<Reservation[]>(API_URL + \"/api/reservations/user\");\r\n}\r\n\r\nexport const fetchPricing = (bookInfo: BookingInfo) => {\r\n    console.log(bookInfo);\r\n    return axios.get<CheckPricingResponse>(API_URL + \"/api/reservations/check-pricing\",{\r\n        params: {\r\n            fromDate: bookInfo.bookFromDate,\r\n            toDate: bookInfo.bookToDate,\r\n            propertyId: bookInfo.roomId,\r\n            guestNum: bookInfo.guest,\r\n            childrenNum: bookInfo.children\r\n        }\r\n    })\r\n}\r\n\r\ninterface ToggleLikeProps {\r\n    roomId: string,\r\n    token: string,\r\n}\r\n\r\ntype ToggleLikeResponse = {\r\n    liked: boolean\r\n}\r\n\r\nexport const toggleLike = ({roomId, token}: ToggleLikeProps) => {\r\n    return axAuth.post<ToggleLikeResponse>(`${API_URL}/api/likes/${roomId}`,{},{\r\n        headers:{\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    });\r\n}\r\n\r\nexport const validateToken = (token: string) => {\r\n    return fetch(`${API_URL}/api/user/validate-token`, {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n}","import { Box, Flex, Grid, Link as ChakraLink, Spacer, VStack, Image, Tooltip, Button } from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport Slider, { Settings } from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { isError, useQuery } from 'react-query';\r\nimport { fetchPropertyTypes } from '../../API';\r\n\r\nvar settings: Settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 1,\r\n    initialSlide: 0,\r\n    swipeToSlide: true,\r\n    responsive: [\r\n        {\r\n            breakpoint: 1024,\r\n            settings: {\r\n                slidesToShow: 4,\r\n                slidesToScroll: 1,\r\n                infinite: true,\r\n                dots: true\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 600,\r\n            settings: {\r\n                slidesToShow: 3,\r\n                slidesToScroll: 1,\r\n                initialSlide: 2\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 480,\r\n            settings: {\r\n                slidesToShow: 1,\r\n                slidesToScroll: 1\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\nconst PropertyTypeList = () => {\r\n    const { data, isError, isFetching } = useQuery<unknown, unknown, PropertyTypeType[]>(\"propertypeList\", fetchPropertyTypes, {\r\n        staleTime: 1000 * 60 * 10\r\n    });\r\n\r\n    if (isFetching) console.log(\"refetching prop\")\r\n\r\n    if (isError) return <Box>Something's wrong</Box>\r\n    return (\r\n        <div>\r\n            <Slider {...settings}>\r\n                {data?.map((d, key) => <PropertyType type={d} key={key} />)}\r\n            </Slider>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype PropertyTypeProps = {\r\n    type: PropertyTypeType;\r\n}\r\n\r\n\r\n\r\nconst PropertyType: React.FC<PropertyTypeProps> = ({ type, children }) => {\r\n    const history = useHistory();\r\n\r\n    const handlePropTypeClick = () => {\r\n        history.push({\r\n            pathname: \"/rooms\",\r\n            state: {\r\n                type: type\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <VStack alignItems=\"start\" p=\"4\">\r\n            <ChakraLink onClick={handlePropTypeClick}>\r\n                <Tooltip hasArrow placement=\"top\" aria-label={\"tooltips\"} label={type.description} openDelay={500}>\r\n                    <Box>\r\n                        <Box maxW=\"sm\" maxH=\"sm\" minH=\"100px\">\r\n                            <Image width=\"inherit\" height=\"inherit\" src={type.thumbnailImg} objectFit=\"cover\"></Image>\r\n                        </Box>\r\n\r\n                        <Box\r\n                            mt=\"1\"\r\n                            fontWeight=\"semibold\"\r\n                            as=\"h4\"\r\n                            lineHeight=\"tight\"\r\n                            isTruncated\r\n                        >\r\n                            {type.propertyType}\r\n                        </Box>\r\n                    </Box>\r\n                </Tooltip>\r\n            </ChakraLink>\r\n            <Box color=\"gray.500\" fontSize=\"md\">\r\n                {type.count + \" \" + type.propertyType + \"\"}\r\n            </Box>\r\n        </VStack>\r\n    )\r\n}\r\n\r\nexport default PropertyTypeList;","import { Box, Button, Center, Flex, useColorModeValue, useToast } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport DayPicker from 'react-day-picker';\r\nimport { DateUtils } from \"react-day-picker\";\r\nimport 'react-day-picker/lib/style.css';\r\n\r\nconst today = new Date(Date.now());\r\n\r\ntype PropertySchedule = {\r\n    reservedDates?: {\r\n        fromDate: string;\r\n        toDate: string;\r\n    }[],\r\n\r\n    dayOff?: Date[];\r\n}\r\n\r\nconst defaultSchedules: PropertySchedule = {\r\n    reservedDates: [\r\n        {\r\n            fromDate: \"2021-04-19\",\r\n            toDate: \"2021-04-21\"\r\n        },\r\n        {\r\n            fromDate: \"2021-04-21\",\r\n            toDate: \"2021-04-24\"\r\n        },\r\n        {\r\n            fromDate: \"2021-04-30\",\r\n            toDate: \"2021-05-01\"\r\n        }\r\n    ],\r\n}\r\n\r\nexport const getDatesBetween = (fromDate: string, toDate: string) => {\r\n    const from = new Date(fromDate);\r\n    const to = new Date(toDate);\r\n    let datesBtw: Date[] = [];\r\n    let start = from;\r\n    start.setDate(start.getDate() + 1);\r\n\r\n    while (start.getDate() < to.getDate()) {\r\n        datesBtw.push(new Date(start));\r\n        start.setDate(start.getDate() + 1);\r\n    }\r\n    return datesBtw;\r\n}\r\n\r\nconst getDisabledDates = (schedules?: PropertySchedule) => {\r\n    let disabledDates: Date[] = [];\r\n\r\n    if (schedules?.reservedDates) {\r\n        for (let i = 0; i < schedules.reservedDates.length; i++) {\r\n            disabledDates.push(...getDatesBetween(schedules.reservedDates[i].fromDate, schedules.reservedDates[i].toDate))\r\n        }\r\n    }\r\n\r\n    if (schedules?.dayOff) disabledDates.push(...schedules.dayOff);\r\n    return disabledDates;\r\n}\r\n\r\nconst getDateCheckOutOnly = (schedules?: PropertySchedule) => {\r\n    return schedules?.reservedDates?.map(r => new Date(r.fromDate));\r\n}\r\n\r\nconst getNextPossibleDate = (day: Date, schedules?: PropertySchedule) => {\r\n    let nextDay: Date | undefined = undefined;\r\n\r\n    if (schedules?.reservedDates) {\r\n        schedules.reservedDates.forEach(r => {\r\n            const rFrom = new Date(r.fromDate);\r\n\r\n            if (rFrom > day) {\r\n                if (!nextDay) nextDay = rFrom;\r\n                else if (rFrom <= nextDay) nextDay = rFrom;\r\n            }\r\n        })\r\n    }\r\n    if (nextDay !== day) return nextDay;\r\n    return null;\r\n}\r\n\r\ntype PickRangeDayState = {\r\n    from?: Date;\r\n    to?: Date;\r\n    enteredTo?: Date; // keep track of the last day for mouseEnter\r\n}\r\n\r\ntype PickRangeDayProps = {\r\n    from?: Date,\r\n    to?: Date,\r\n    updateDate: (from?: Date, to?: Date) => void,\r\n    schedules?: PropertySchedule\r\n}\r\n\r\nconst defaultDate: PickRangeDayState = {\r\n    from: undefined,\r\n    to: undefined,\r\n    enteredTo: undefined\r\n}\r\n\r\nconst PickRangeDay: React.FC<PickRangeDayProps> = ({ from, to, updateDate, schedules }) => {\r\n    const toast = useToast();\r\n    const [state, setState] = React.useState<PickRangeDayState>({ from: from, to: to });\r\n\r\n    const disabled = [\r\n        {\r\n            before: new Date(Date.now())\r\n        },\r\n        ...getDisabledDates(schedules),\r\n    ]\r\n\r\n    const [disabledDays, setDisabledDays] = React.useState(disabled)\r\n\r\n    React.useEffect(() => {\r\n        if (state.from && state.to || (!state.from && !state.to)) {\r\n            updateDate(state.from, state.to);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [state.from, state.to]);\r\n\r\n    const isSelectingFirstDay = (day: Date, from?: Date, to?: Date) => {\r\n        const isBeforeFirstDay = from && DateUtils.isDayBefore(day, from);\r\n        const isRangeSelected = from && to;\r\n        return !from || isBeforeFirstDay || isRangeSelected;\r\n    }\r\n\r\n    const handleDayMouseEnter = (day: Date) => {\r\n        const { from, to } = state;\r\n        if (!isSelectingFirstDay(day, from, to)) {\r\n            setState(s => ({\r\n                ...s,\r\n                enteredTo: day,\r\n            }));\r\n        }\r\n    }\r\n\r\n    const handleDayClick = (day: Date, modifiers: any) => {\r\n        if (modifiers.disabled) return;\r\n\r\n        const today = new Date(Date.now());\r\n        if (day < today) return;\r\n        const { from, to } = state;\r\n        if (from && to && day >= from && day <= to) {\r\n            handleResetClick();\r\n            return;\r\n        }\r\n        // if selecting first day, recalculate disabled days to this chosen day\r\n        if (isSelectingFirstDay(day, from, to)) {\r\n            if (modifiers.checkoutOnly) {\r\n                toast({\r\n                    status: \"info\",\r\n                    description: \"Check out only!\",\r\n                    duration: 3000\r\n                })\r\n                return;\r\n            }\r\n            setDisabledDays((s) => ({ ...s, before: day, after: getNextPossibleDate(day, schedules) }))\r\n\r\n            setState({\r\n                from: day,\r\n                to: undefined,\r\n                enteredTo: undefined,\r\n            });\r\n        }\r\n        // else, set every things back to normal\r\n        else {\r\n            setDisabledDays(disabled);\r\n            // prevent from = to\r\n            if (state.from?.getDate() === day.getDate()) {\r\n                setState({\r\n                    from: undefined,\r\n                    to: undefined,\r\n                    enteredTo: undefined,\r\n                });\r\n                return;\r\n            }\r\n            setState(s => ({\r\n                ...s,\r\n                to: day,\r\n                enteredTo: day,\r\n            }));\r\n        }\r\n    }\r\n\r\n    const handleResetClick = () => {\r\n        setState(defaultDate);\r\n    }\r\n\r\n    const selected = [state.from, { from: state.from, to: state.enteredTo }];\r\n\r\n\r\n    const modifiers = {\r\n        start: state.from,\r\n        end: state.enteredTo,\r\n        checkoutOnly: getDateCheckOutOnly(schedules),\r\n    }\r\n\r\n    return (\r\n        <Box alignSelf=\"stretch\">\r\n            <Flex alignItems=\"stretch\" flexDir=\"column\">\r\n                <DayPicker\r\n                    numberOfMonths={2}\r\n                    fromMonth={state.from}\r\n                    modifiers={modifiers as any}\r\n                    onDayClick={handleDayClick}\r\n                    disabledDays={disabledDays}\r\n                    onDayMouseEnter={handleDayMouseEnter}\r\n                    selectedDays={selected as any}>\r\n                </DayPicker>\r\n            </Flex>\r\n            <Flex justifyContent=\"center\" alignItems=\"center\">\r\n                {!state.from && !state.to && 'Please select the first day.'}\r\n                {state.from && !state.to && 'Please select the last day.'}\r\n                {state.from &&\r\n                    state.to &&\r\n                    `Selected from ${state.from.toLocaleDateString()} to\r\n                ${state.to.toLocaleDateString()}`}{' '}\r\n                {state.from && state.to && (\r\n                    <Button onClick={handleResetClick}>\r\n                        Reset\r\n                    </Button>\r\n                )}\r\n            </Flex>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default PickRangeDay;","import { Box, Flex, VStack, Text, Spacer, Square, Button, StackDivider } from '@chakra-ui/react';\r\nimport React from 'react';\r\n\r\ntype PopDetailState = {\r\n    guest: number;\r\n    children: number;\r\n}\r\n\r\ninterface PopDetailProps extends PopDetailState {\r\n    updatePeople: (guest: number, children: number) => void;\r\n    maxGuest?: number;\r\n}\r\n\r\nconst PopDetail: React.FC<PopDetailProps> = ({ guest, children, updatePeople, maxGuest }) => {\r\n    return (\r\n        <Box p=\"4\" style={{ backdropFilter: \"blur(5px)\" }}>\r\n            <VStack align=\"stretch\" spacing={4}>\r\n                <Flex alignItems=\"center\">\r\n                    <Text mr=\"auto\" fontSize=\"md\">Guests</Text>\r\n                    <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                        <Button variant=\"ghost\" borderRadius=\"0\" disabled={guest <= 0}\r\n                            onClick={() => updatePeople(--guest, children)}>-</Button>\r\n                    </Square>\r\n                    <Text mx=\"4\" fontSize=\"md\">{guest}</Text>\r\n                    <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                        <Button variant=\"ghost\" borderRadius=\"0\"\r\n                            disabled={maxGuest !== undefined && guest >= maxGuest}\r\n                            onClick={() => updatePeople(++guest, children)}>+</Button>\r\n                    </Square>\r\n                </Flex>\r\n                <Flex alignItems=\"center\">\r\n                    <Text mr=\"auto\" fontSize=\"md\">Children</Text>\r\n                    <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                        <Button variant=\"ghost\" borderRadius=\"0\" disabled={children <= 0 ? true : false}\r\n                            onClick={() => updatePeople(guest, --children)}>-</Button>\r\n                    </Square>\r\n                    <Text mx=\"4\" fontSize=\"md\">{children}</Text>\r\n                    <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                        <Button variant=\"ghost\" borderRadius=\"0\"\r\n                            isDisabled={children >= 5}\r\n                            onClick={() => updatePeople(guest, ++children)}>+</Button>\r\n                    </Square>\r\n                </Flex>\r\n            </VStack>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default PopDetail;","import { Box, Button, Center, Flex, Input, InputGroup, InputLeftElement, InputRightElement, Popover, PopoverContent, PopoverTrigger, Portal, Spinner, useColorModeValue } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport { BsSearch } from 'react-icons/bs';\r\nimport { useQuery } from 'react-query';\r\nimport { Redirect, useHistory } from 'react-router';\r\nimport { fetchCities } from '../../API';\r\n// import 'react-day-picker/lib/style.css';\r\nimport PickRangeDay from './PickRangeDay';\r\nimport PopDetail from './PopDetail';\r\n\r\nexport type CityResponse = {\r\n    cityName: string;\r\n    cityId: string;\r\n    countryName: string;\r\n    countryId: string;\r\n}\r\n\r\ntype SearchBarProps = {\r\n    search: SearchQuery;\r\n    isLoading?: boolean;\r\n    updateSearch?: (search: SearchQuery) => void;\r\n    onClickSearch?: () => void;\r\n}\r\n\r\nconst defaultValue: SearchQuery = {\r\n    guestNum: 0,\r\n    childrenNum: 0,\r\n}\r\n\r\n\r\nconst SearchBar = (props: SearchBarProps) => {\r\n    const { data: cities, isLoading, status } = useQuery<unknown, unknown, CityResponse[]>(\"cities\", fetchCities, {\r\n        staleTime: 1000 * 60 * 10\r\n    });\r\n    const history = useHistory();\r\n\r\n    const { search: form } = props;\r\n\r\n    React.useEffect(() => {\r\n        if (props.updateSearch) {\r\n            console.log(\"update form\")\r\n            props.updateSearch(form);\r\n        }\r\n    }, [form])\r\n\r\n    // if (isLoading) return <>loading...</>;\r\n\r\n    const UpdateDate = (from?: Date, to?: Date) => {\r\n        if (props.updateSearch) {\r\n            props?.updateSearch({\r\n                ...props.search,\r\n                from: from,\r\n                to: to\r\n            });\r\n        }\r\n    }\r\n\r\n    const UpdatePeople = (adult: number, children: number) => {\r\n        if (props.updateSearch) {\r\n            props?.updateSearch({\r\n                ...props.search,\r\n                guestNum: adult,\r\n                childrenNum: children\r\n            });\r\n        }\r\n    }\r\n\r\n    const UpdateCity = (city: string) => {\r\n        if (props.updateSearch) {\r\n            props?.updateSearch({\r\n                ...props.search,\r\n                city: city\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleSearchClick = () => {\r\n        history.push({\r\n            pathname: \"/rooms\",\r\n            state: {\r\n                search: props.search\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box p=\"2\" border=\"1px\" borderColor=\"yellow.400\" style={{ backdropFilter: \"blur(5px)\" }}>\r\n            <Flex display={{ lg: \"flex\" }} alignItems=\"center\">\r\n                <InputGroup>\r\n                    <InputLeftElement pointerEvents=\"none\" children={<BsSearch />} />\r\n                    <Input list=\"datalist-cities\" placeholder=\"City\" size=\"lg\" borderRadius=\"0\"\r\n                        onChange={(e) => UpdateCity(e.target.value)}\r\n                        value={props.search.city}\r\n                    />\r\n                    {isLoading ? <InputRightElement children={<Spinner alignSelf=\"center\" />}></InputRightElement> :\r\n                        <datalist id=\"datalist-cities\">\r\n                            {cities?.map(c => {\r\n                                return <option key={c.cityId} value={c.cityName} />\r\n                            })}\r\n                        </datalist>\r\n                    }\r\n                </InputGroup>\r\n                <Popover closeOnBlur={true}>\r\n                    <PopoverTrigger>\r\n                        <Button variant=\"outline\" w={[\"100%\", \"100%\", \"100%\", \"150%\"]}\r\n                            size=\"lg\" _focusVisible={{ border: \"0\" }} borderRadius=\"0\" px=\"2\">\r\n                            {form?.from?.toLocaleDateString() || \"From\"} - {form?.to?.toLocaleDateString() || \"To\"}\r\n                        </Button>\r\n                    </PopoverTrigger>\r\n                    <Portal>\r\n                        <PopoverContent\r\n                            flexWrap=\"nowrap\" alignItems=\"center\" style={{ backdropFilter: \"blur(5px)\" }}\r\n                            w=\"550px\" borderRadius=\"0\"\r\n                            bgColor={useColorModeValue(\"gray.100\", \"gray.800\")}\r\n                        >\r\n                            <PickRangeDay updateDate={UpdateDate} />\r\n                        </PopoverContent>\r\n                    </Portal>\r\n                </Popover>\r\n                <Popover>\r\n                    <PopoverTrigger>\r\n                        <Button variant=\"outline\" w={[\"100%\", \"100%\", \"100%\", \"150%\"]} size=\"lg\"\r\n                            borderRadius=\"0\" px=\"2\"\r\n                        >\r\n                            {form.guestNum + ' guests - ' + form.childrenNum + ' children'}\r\n                        </Button>\r\n                    </PopoverTrigger>\r\n                    <Portal>\r\n                        <PopoverContent flexWrap=\"nowrap\" borderRadius=\"0\" bg=\"inherit\"\r\n                            bgColor={useColorModeValue(\"gray.100\", \"gray.800\")}\r\n                        >\r\n                            <PopDetail updatePeople={UpdatePeople} guest={form.guestNum!} children={form.childrenNum!}></PopDetail>\r\n                        </PopoverContent>\r\n                    </Portal>\r\n                </Popover>\r\n                <Button alignSelf=\"center\" size=\"lg\" minW=\"100px\" ml={[0, 0, 0, 2]}\r\n                    onClick={props.onClickSearch ? props.onClickSearch : handleSearchClick}\r\n                    isLoading={props.isLoading}\r\n                    mt={[2, 2, 2, 0]} w={[\"100%\", \"100%\", \"100%\", \"30%\"]} borderRadius=\"0\">\r\n                    Search\r\n                </Button>\r\n            </Flex>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","export default __webpack_public_path__ + \"static/media/HomeBG.c3c3859c.webp\";","import * as React from \"react\"\r\nimport {\r\n  useColorMode,\r\n  useColorModeValue,\r\n  IconButton,\r\n  IconButtonProps,\r\n} from \"@chakra-ui/react\"\r\nimport { FaMoon, FaSun } from \"react-icons/fa\"\r\n\r\ntype ColorModeSwitcherProps = Omit<IconButtonProps, \"aria-label\">\r\n\r\nexport const ColorModeSwitcher: React.FC<ColorModeSwitcherProps> = (props) => {\r\n  const { toggleColorMode } = useColorMode()\r\n  const text = useColorModeValue(\"dark\", \"light\")\r\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun)\r\n\r\n  return (\r\n    <IconButton\r\n      size=\"md\"\r\n      fontSize=\"lg\"\r\n      variant=\"ghost\"\r\n      color=\"current\"\r\n      marginLeft=\"2\"\r\n      onClick={toggleColorMode}\r\n      icon={<SwitchIcon />}\r\n      aria-label={`Switch to ${text} mode`}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.314a949b.svg\";","import * as React from \"react\"\r\nimport {\r\n  chakra,\r\n  keyframes,\r\n  ImageProps,\r\n  forwardRef,\r\n  usePrefersReducedMotion,\r\n} from \"@chakra-ui/react\"\r\nimport logo from \"./logo.svg\"\r\n\r\nconst spin = keyframes`\r\n  from { transform: rotate(0deg); }\r\n  to { transform: rotate(360deg); }\r\n`\r\n\r\nexport const Logo = forwardRef<ImageProps, \"img\">((props, ref) => {\r\n  const prefersReducedMotion = usePrefersReducedMotion()\r\n\r\n  const animation = prefersReducedMotion\r\n    ? undefined\r\n    : `${spin} infinite 20s linear`\r\n\r\n  return <chakra.img animation={animation} boxSize=\"30px\" src={logo} ref={ref} {...props} />\r\n})\r\n","import { useToast } from '@chakra-ui/toast';\r\nimport { AxiosResponse } from 'axios';\r\nimport jwtDecode, { JwtPayload } from 'jwt-decode';\r\nimport React from 'react';\r\nimport { useMutation, useQueryClient } from 'react-query';\r\nimport { authenticate, register, validateToken } from '../API';\r\n\r\ninterface UserTokenPayload extends JwtPayload {\r\n    roles: string[] | string;\r\n    email: string;\r\n    name: string;\r\n}\r\n\r\ntype AuthContextStates = {\r\n    loginAsync: (request: LoginRequest) => any\r\n    registerAsync: (request: RegisterRequest) => any\r\n    logoutAsync: () => Promise<void>;\r\n    updateToken: (token: string) => void;\r\n    user?: UserResponse;\r\n    isLoading: boolean;\r\n}\r\n\r\nexport const AuthContext = React.createContext<AuthContextStates>({} as AuthContextStates);\r\n\r\nexport const AuthProvider: React.FC = ({ children }) => {\r\n    const [isLoading, setIsLoading] = React.useState<boolean>(false);\r\n    const [user, setUser] = React.useState<UserResponse | undefined>(undefined);\r\n    const [token, setToken] = React.useState(localStorage.getItem(\"token\"));\r\n\r\n    const queryClient = useQueryClient();\r\n\r\n    const toast = useToast();\r\n\r\n    /**\r\n     * Check for token in localStorage\r\n     */\r\n    React.useEffect(() => {\r\n        const tokenStorage = localStorage.getItem(\"token\");\r\n        if (tokenStorage) {\r\n            validateToken(tokenStorage).then(res => {\r\n                console.log(\"validating...\")\r\n                if (res.status !== 200) return logoutAsync(\"Token expired\");\r\n            })\r\n            setToken(tokenStorage);\r\n        }\r\n    }, [])\r\n\r\n    /**\r\n     * If token changes, update user and axios.interceptor\r\n     */\r\n    React.useEffect(() => {\r\n        if (token) {\r\n            const decodedUser = jwtDecode<UserTokenPayload>(token);\r\n            setUser({\r\n                email: decodedUser.email,\r\n                name: decodedUser.name,\r\n                roles: decodedUser.roles,\r\n                token: token\r\n            })\r\n        }\r\n    }, [token]);\r\n\r\n    const updateToken = (token: string) => {\r\n        setToken(token);\r\n    }\r\n\r\n\r\n    // TODO: fix token validation\r\n    // const validation = useQuery([\"validateToken\", user?.token], () => {\r\n    //     if (user?.token) return validateToken(user?.token)\r\n    // }, {\r\n    //     refetchInterval: 1000 * 60,\r\n    //     staleTime: 1000 * 60 * 60 * 24,\r\n    //     onSuccess: () => {\r\n    //         axios.interceptors.request.use((config) => {\r\n    //             if (user?.token) {\r\n    //                 config.headers.Authorization = `Bearer ${user.token}`;\r\n    //             }\r\n    //             return config;\r\n    //         }, (e) => {\r\n    //             return Promise.reject(e);\r\n    //         })\r\n    //     }\r\n    // })\r\n\r\n    const mutateLogin = useMutation<AxiosResponse<UserResponse>, any, LoginRequest>(authenticate, {\r\n        onSuccess: (res) => {\r\n            setToken(res.data.token);\r\n            localStorage.setItem(\"token\", res.data.token);\r\n            toast({ description: \"Logged in successfully\", status: \"success\", duration: 3000 });\r\n        },\r\n        onError: (res) => { toast({ description: res.data.message, status: \"error\", duration: 3000 }) },\r\n        onSettled: () => setIsLoading(false)\r\n    })\r\n\r\n    const mutateRegister = useMutation<AxiosResponse<UserResponse>, any, RegisterRequest>(register, {\r\n        onSuccess: (res) => {\r\n            // setUser(res.data);\r\n            setToken(res.data.token);\r\n            localStorage.setItem(\"token\", res.data.token);\r\n            toast({ description: \"Logged in successfully\", status: \"success\", duration: 3000 });\r\n        },\r\n        onError: (res) => {\r\n            console.log(res.data);\r\n            for (let i = 0; i < res.data.messages.length; i++) {\r\n                toast({ description: res.data.messages[i], status: \"error\", duration: 3000 })\r\n            }\r\n        },\r\n        onSettled: () => setIsLoading(false)\r\n    })\r\n\r\n    const logoutAsync = async (msg?: string) => {\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        setUser(undefined);\r\n        setToken(null);\r\n        localStorage.removeItem(\"token\");\r\n        toast({\r\n            title: msg ? msg : \"Logged out successfully!\",\r\n            isClosable: true,\r\n            duration: 3000,\r\n            status: \"success\"\r\n        })\r\n        await new Promise(resolve => setTimeout(resolve, 500));\r\n    }\r\n\r\n    const loginAsync = async (request: LoginRequest) => {\r\n        setIsLoading(true);\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        try {\r\n            mutateLogin.mutate(request);\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n        finally {\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    const registerAsync = async (request: RegisterRequest) => {\r\n        setIsLoading(true);\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        try {\r\n            mutateRegister.mutate(request);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        finally {\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            loginAsync: loginAsync,\r\n            logoutAsync: logoutAsync,\r\n            updateToken: updateToken,\r\n            isLoading: isLoading,\r\n            user: user,\r\n            registerAsync: registerAsync\r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}","import { Box, FormControl, FormLabel, Input, Button, Checkbox, FormErrorMessage, chakra, useDisclosure, Collapse } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport { FaArrowRight } from 'react-icons/fa';\r\nimport { useHistory } from 'react-router';\r\nimport { AuthContext } from '../Contexts/AuthContext';\r\n\r\ntype LoginFormProps = {\r\n    initRef?: React.RefObject<HTMLInputElement>;\r\n    fromUrl?: string;\r\n    isRegistering: boolean;\r\n}\r\n\r\ntype FormState = {\r\n    email?: string;\r\n    password?: string;\r\n    confirmedPassword?: string;\r\n    remember: boolean;\r\n    isRegistering: boolean;\r\n}\r\n\r\nfunction validateEmail(email: string | undefined) {\r\n    if (!email) return false;\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n}\r\n\r\n\r\nconst LoginForm: React.FC<LoginFormProps> = ({ initRef, fromUrl, isRegistering }) => {\r\n    const history = useHistory();\r\n\r\n    const [loginForm, setLoginForm] = React.useState<FormState>({\r\n        remember: false,\r\n        isRegistering: isRegistering\r\n    });\r\n\r\n    const [emailError, setEmailError] = React.useState(false);\r\n    const [passwordError, setPasswordError] = React.useState(false);\r\n    const [confirmPasswordError, setConfirmPasswordError] = React.useState(false);\r\n\r\n    const validateForm = (email: string | undefined, password: string | undefined) => {\r\n        if (validateEmail(email)) {\r\n            setEmailError(false);\r\n        } else setEmailError(true);\r\n        if (password === \"\") {\r\n            setPasswordError(true)\r\n        } else setPasswordError(false);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        validateForm(loginForm.email, loginForm.password);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [loginForm.email, loginForm.password])\r\n\r\n    React.useEffect(() => {\r\n        if (loginForm.isRegistering && loginForm.confirmedPassword === loginForm.password) {\r\n            console.log(loginForm.password);\r\n            console.log(loginForm.confirmedPassword);\r\n\r\n            setConfirmPasswordError(false);\r\n            console.log(confirmPasswordError);\r\n        } else setConfirmPasswordError(true);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [loginForm.confirmedPassword, loginForm.isRegistering, loginForm.password])\r\n\r\n    const authContext = React.useContext(AuthContext);\r\n\r\n    const handleLogin = () => {\r\n        authContext.loginAsync(loginForm);\r\n        if (fromUrl) history.replace(fromUrl);\r\n    }\r\n\r\n    const handleRegister = () => {\r\n        authContext.registerAsync({ email: loginForm.email, password: loginForm.password, confirmPassword: loginForm.confirmedPassword });\r\n        if (fromUrl) history.replace(fromUrl);\r\n    }\r\n\r\n    const toggleMode = () => {\r\n        setLoginForm((s) => ({\r\n            ...s,\r\n            isRegistering: !s.isRegistering\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <chakra.form d=\"flex\" flexDir=\"column\">\r\n            <FormControl isInvalid={emailError}>\r\n                <FormLabel htmlFor=\"email\">Email</FormLabel>\r\n                <Input placeholder=\"Enter your email\" id=\"email\" isInvalid={emailError} ref={initRef} variant=\"filled\" size=\"lg\" type=\"email\"\r\n                    value={loginForm.email} isRequired\r\n                    onChange={(e) => setLoginForm(s => ({\r\n                        ...s,\r\n                        email: e.target.value.trim()\r\n                    }))}></Input>\r\n                <FormErrorMessage>{\"Email not correct\"}</FormErrorMessage>\r\n            </FormControl>\r\n\r\n            <FormControl isInvalid={passwordError}>\r\n                <FormLabel htmlFor=\"password\" my=\"2\">Password</FormLabel>\r\n                <Input placeholder=\"Enter your password\" id=\"password\" isInvalid={passwordError} variant=\"filled\" size=\"lg\" type=\"password\"\r\n                    value={loginForm.password} minLength={1} isRequired\r\n                    onChange={(e) => setLoginForm(s => ({\r\n                        ...s,\r\n                        password: e.target.value\r\n                    }))}></Input>\r\n            </FormControl>\r\n\r\n            <Collapse in={loginForm.isRegistering}>\r\n                <FormControl isInvalid={confirmPasswordError}>\r\n                    <FormLabel htmlFor=\"confirm-password\" my=\"2\">Confirm Password</FormLabel>\r\n                    <Input placeholder=\"Confirm your password\" id=\"confirm-password\" isInvalid={confirmPasswordError} variant=\"filled\" size=\"lg\" type=\"password\"\r\n                        value={loginForm.confirmedPassword} minLength={1} isRequired\r\n                        onChange={(e) => setLoginForm(s => ({\r\n                            ...s,\r\n                            confirmedPassword: e.target.value\r\n                        }))}></Input>\r\n                </FormControl>\r\n                <FormErrorMessage>{\"Password does not match\"}</FormErrorMessage>\r\n            </Collapse>\r\n\r\n            <Checkbox size=\"lg\" checked={loginForm.remember} mt=\"2\"\r\n                onChange={(e) => setLoginForm(s => ({ ...s, remember: e.target.checked }))}>\r\n                Remember me\r\n                </Checkbox>\r\n\r\n            <Button my=\"3\" w=\"30%\" rounded=\"full\" type=\"submit\" alignSelf=\"center\" title=\"Login\"\r\n                isLoading={authContext.isLoading}\r\n                isDisabled={loginForm.isRegistering ? emailError || passwordError || confirmPasswordError : emailError || passwordError}\r\n                onClick={!loginForm.isRegistering ? handleLogin : handleRegister}>\r\n                <FaArrowRight />\r\n            </Button>\r\n\r\n            <Button variant=\"link\" alignSelf=\"center\" textStyle=\"\" onClick={() => toggleMode()}>{!loginForm.isRegistering ? \"Register your account!\" : \"Or login instead!\"}</Button >\r\n        </chakra.form>\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import React, { FC } from 'react';\r\nimport { Box, BoxProps, Button, Center, DarkMode, Flex, Heading, HStack, Menu, MenuButton, MenuDivider, MenuItem, MenuList, Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay, Spacer, useColorModeValue, useDisclosure } from '@chakra-ui/react';\r\nimport { ColorModeSwitcher } from '../../ColorModeSwitcher';\r\nimport { Logo } from \"../../Logo\";\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport { AuthContext } from '../../Contexts/AuthContext';\r\nimport { BsBell, BsBookmark, BsBoxArrowDown, BsCalendar, BsChevronDown, BsHouse, BsLock, BsPerson } from 'react-icons/bs';\r\nimport LoginForm from '../LoginForm';\r\n\r\nconst Navbar: FC<BoxProps> = ({ ...props }) => {\r\n    const auth = React.useContext(AuthContext);\r\n    const loginFormModal = useDisclosure();\r\n    const initRef = React.useRef<HTMLInputElement>(null);\r\n    const [isRegistering, setIsRegistering] = React.useState(false);\r\n\r\n    // check if we are at homepage, then do a bit of theme modification\r\n    const { pathname } = useLocation();\r\n    const bgColorMenuWhenHome = useColorModeValue(\"gray.800\", \"gray.800\");\r\n    const colorMenuWhenHome = useColorModeValue(\"white\", \"white\");\r\n\r\n    const becomehostColor = useColorModeValue(\"cyan.200\", \"blue.400\");\r\n\r\n    return (\r\n        <Box marginBottom={[\"5%\"]} {...props}>\r\n            <Flex justifyContent=\"center\" alignItems=\"center\">\r\n                <RouterLink to=\"/\">\r\n                    <HStack spacing={4}>\r\n                        <Center>\r\n                            <Logo />\r\n                        </Center>\r\n                        <Heading size=\"md\" display={{ base: \"none\", sm: \"block\" }}>NiceHostels.com</Heading>\r\n                    </HStack>\r\n                </RouterLink>\r\n                <Spacer />\r\n                <HStack spacing={4}>\r\n                    <ColorModeSwitcher />\r\n                    {auth.user === undefined ?\r\n                        <>\r\n                            <Button variant=\"ghost\" onClick={() => { loginFormModal.onOpen(); setIsRegistering(false); }}>Login</Button>\r\n                            <Modal isOpen={loginFormModal.isOpen} onClose={loginFormModal.onClose} size=\"xl\" motionPreset=\"slideInBottom\" isCentered initialFocusRef={initRef}>\r\n                                <ModalOverlay />\r\n\r\n                                <ModalContent>\r\n                                    <ModalHeader>{isRegistering ? \"Sign up new account\" : \"Login\"}</ModalHeader>\r\n                                    <ModalCloseButton />\r\n                                    <ModalBody pb=\"2\">\r\n                                        <LoginForm initRef={initRef} isRegistering={isRegistering}></LoginForm>\r\n                                    </ModalBody>\r\n                                </ModalContent>\r\n                            </Modal>\r\n                            <Button variant=\"ghost\" onClick={() => { loginFormModal.onOpen(); setIsRegistering(true); }}>Register</Button>\r\n                        </> :\r\n                        <>\r\n                            <Menu>\r\n                                <MenuButton as={Button} variant=\"ghost\" rightIcon={<BsChevronDown />}>\r\n                                    {auth.user.name}\r\n                                </MenuButton>\r\n                                <MenuList>\r\n                                    <MenuItem as={RouterLink} to=\"/profile?view=likes\">\r\n                                        <Box mr={\"3\"}><BsBookmark /></Box>\r\n                                        Saved rooms\r\n                                    </MenuItem>\r\n                                    <MenuItem as={RouterLink} to=\"/profile?view=reservations\">\r\n                                        <Box mr={\"3\"}><BsCalendar /></Box>\r\n                                        Your Reservations\r\n                                    </MenuItem>\r\n                                    <MenuItem as={RouterLink} to=\"/profile?view=notifications\">\r\n                                        <Box mr=\"3\"><BsBell /></Box>\r\n                                        Notifications\r\n                                    </MenuItem>\r\n                                    <MenuDivider />\r\n                                    {auth.user.roles?.includes(\"Owner\") ?\r\n                                        <>\r\n                                            <MenuItem as={RouterLink} to=\"/user/publish\">\r\n                                                <Box mr=\"3\"><BsLock /></Box>\r\n                                        Host your property\r\n                                        </MenuItem>\r\n                                            <MenuItem as={RouterLink} to=\"/user/publish\">\r\n                                                <Box mr=\"3\"><BsHouse /></Box>\r\n                                        Your properties\r\n                                        </MenuItem>\r\n                                        </>\r\n                                        :\r\n                                        <MenuItem bg={becomehostColor} as={RouterLink} to=\"/user/register-host\">\r\n                                            <Box mr=\"3\"><BsLock /></Box>\r\n                                        Become a host\r\n                                        </MenuItem>\r\n                                    }\r\n                                    <MenuItem as={RouterLink} to=\"/\">\r\n                                        <Box mr=\"3\"><BsPerson /></Box>\r\n                                        Account\r\n                                    </MenuItem>\r\n                                    <MenuDivider />\r\n                                    <MenuItem onClick={() => auth.logoutAsync()}>\r\n                                        <Box mr=\"3\"><BsBoxArrowDown /></Box>\r\n                                        Log Out\r\n                                    </MenuItem>\r\n                                </MenuList>\r\n                            </Menu>\r\n                        </>\r\n                    }\r\n                </HStack>\r\n            </Flex>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react'\r\nimport PropertyTypeList from '../Components/HomeComponents/PropertyTypeList'\r\nimport SearchBar from '../Components/NavComponents/SearchBar';\r\nimport { Box, DarkMode, HStack, Spacer, Link } from \"@chakra-ui/react\"\r\nimport BG from \"../Images/HomeBG.webp\";\r\nimport Navbar from '../Components/NavComponents/Navbar';\r\nimport { Link as ReactLink } from 'react-router-dom';\r\nimport { BsArrowRight } from 'react-icons/bs';\r\n\r\n\r\nconst HomePage = () => {\r\n    const px = \"10%\";\r\n    const [search, setSearch] = React.useState<SearchQuery>({ childrenNum: 0, guestNum: 0 });\r\n    const updateSearch = (search: SearchQuery) => {\r\n        setSearch(search)\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <Box minH={[\"50vh\", \"75vh\", \"85vh\"]} style={{ background: \"url('\" + BG + \"') center/cover\", }} color=\"white\">\r\n                <Box px={px} pt=\"5\">\r\n                    <Navbar></Navbar>\r\n                    <DarkMode>\r\n                        <SearchBar search={search} updateSearch={updateSearch} />\r\n                    </DarkMode>\r\n                    <Box as=\"h1\" fontFamily=\"mono\" textShadow=\"gray 2px 2px 2px\" color=\"whiteAlpha.600\" fontWeight=\"bold\" fontSize={[\"3xl\", \"4xl\", \"6xl\", \"8xl\"]}\r\n                        mt={[\"5vh\", \"10vh\", \"20vh\", \"30vh\"]}>EXPLORE AROUND</Box>\r\n                </Box>\r\n            </Box>\r\n            <Box px={px} mt=\"10\">\r\n                <HStack>\r\n                    <Box as=\"h2\" fontWeight=\"bold\" fontSize=\"4xl\" mb=\"5\">\r\n                        LIVE ANYWHERE\r\n                    </Box>\r\n                    <Spacer />\r\n                    <Link as={ReactLink} to={\"/rooms\"} d={\"flex\"} flexDir=\"row\" alignItems=\"center\">All properties <Box ml=\"2\"><BsArrowRight /></Box></Link>\r\n                </HStack>\r\n                <PropertyTypeList></PropertyTypeList>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\nexport default HomePage;","import { Box, Icon, HStack, VStack, Center } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport { IconType } from 'react-icons'\r\nimport { RiStarLine, RiUserStarLine } from \"react-icons/ri\";\r\n\r\ntype MyRoomBadgeProps = {\r\n    id: string;\r\n}\r\n\r\nconst MyRoomBadge: React.FC<MyRoomBadgeProps> = ({ id }) => {\r\n    const [icon, setIcon] = React.useState<IconType>();\r\n    const [badge, setBadge] = React.useState<RoomBadge>();\r\n\r\n    React.useEffect(() => {\r\n        let foundBadge = defaultRoomBadges.find(b => b.id === id);\r\n        setBadge(foundBadge);\r\n        switch (id) {\r\n            case \"1\":\r\n                setIcon(RiUserStarLine);\r\n                break;\r\n\r\n            default:\r\n                setIcon(RiStarLine);\r\n                break;\r\n        }\r\n    }, [id])\r\n\r\n    return (\r\n        <HStack alignContent=\"center\" spacing=\"0\" mb=\"2\">\r\n            <Icon d=\"flex\" boxSize=\"10\" alignItems=\"center\" justifyContent=\"center\" mt=\"2\" ml=\"2\">{icon}</Icon>\r\n            <VStack alignItems=\"start\" spacing=\"0\">\r\n                <Box as=\"h4\" fontSize=\"md\" fontWeight=\"semibold\">{badge?.title}</Box>\r\n                <Box as=\"h5\" fontSize=\"sm\" m=\"0\">{badge?.description}</Box>\r\n            </VStack>\r\n        </HStack>\r\n    )\r\n}\r\n\r\nexport const defaultRoomBadges: RoomBadge[] = [\r\n    {\r\n        id: \"1\",\r\n        title: \"Helpful owner\",\r\n        description: \"Owner provides best services\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        title: \"Extra clean\",\r\n        description: \"Owner follows our strict policies of enhanced clealiness\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        title: \"Not smoking\",\r\n        description: \"Owner does not allow smoking inside\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        title: \"Free cancelation\",\r\n        description: \"You can cancel with full refund in 24 hours\"\r\n    }\r\n]\r\n\r\nexport default MyRoomBadge;","import { Box, Button, Divider, Grid, GridItem, Spacer, Image, Popover, PopoverContent, PopoverTrigger, HStack, Flex, VStack, Avatar, useToast, useDisclosure, Collapse, Tooltip, Spinner } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport { BsStarFill, BsStar, BsHeart, BsHeartFill } from 'react-icons/bs';\r\nimport { useMutation, useQuery } from 'react-query';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { fetchPricing, fetchPropertyById, toggleLike } from '../API';\r\nimport PickRangeDay, { getDatesBetween } from '../Components/NavComponents/PickRangeDay';\r\nimport PopDetail from '../Components/NavComponents/PopDetail';\r\nimport MyRoomBadge, { defaultRoomBadges } from '../Components/SingleRoomComponents/MyRoomBadge';\r\nimport { AuthContext } from '../Contexts/AuthContext';\r\n\r\ntype SlugProps = {\r\n    slug: string;\r\n}\r\n\r\ntype SingleRoomProps = {\r\n    initRoom: Room;\r\n}\r\n\r\ntype OwnerInfo = {\r\n    id: string;\r\n    name: string;\r\n    profileImageUrl?: string;\r\n}\r\n\r\nconst SingleRoom: React.FC<SingleRoomProps> = ({ initRoom, children }) => {\r\n    const auth = React.useContext(AuthContext);\r\n\r\n    const [room, setRoom] = React.useState(defaultRoom);\r\n    const [bookInfo, setBookInfo] = React.useState<BookingInfo>({ guest: 0, children: 0, roomId: room.id });\r\n    const [owner, setOwner] = React.useState<OwnerInfo>();\r\n    const [didLike, setDidLike] = React.useState(false);\r\n\r\n    const { slug } = useParams<SlugProps>();\r\n    const toast = useToast();\r\n\r\n    const { data, isError, error, isLoading } = useQuery([\"property\", slug],\r\n        () => {\r\n            return fetchPropertyById(slug);\r\n        },\r\n        {\r\n            // staleTime: 1000 * 60 * 3,\r\n            retry: 2,\r\n            onError: (error) => {\r\n                console.log(error);\r\n            },\r\n            onSuccess: (rs) => {\r\n                console.log(rs.data);\r\n                if (rs.data.liked) setDidLike(rs.data.liked);\r\n                setRoom({ ...rs.data, roomBadges: badges });\r\n            },\r\n            onSettled: () => {\r\n            }\r\n        });\r\n\r\n    const mutateLike = useMutation(toggleLike, {\r\n        onSuccess: (res) => {\r\n            setDidLike(res.data.liked);\r\n            toast({\r\n                description: res.data.liked ? \"Saved room\" : \"Removed from wishlist\",\r\n                status: \"info\",\r\n                duration: 1000\r\n            });\r\n        },\r\n        onError: (error) => console.log(error)\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        setOwner(defaultOwner);\r\n    }, [])\r\n\r\n    const updateDate = (from?: Date, to?: Date) => {\r\n        setBookInfo(s => ({\r\n            ...s,\r\n            bookFromDate: from,\r\n            bookToDate: to\r\n        }));\r\n    }\r\n\r\n    const updatePeople = (adult: number, children: number) => {\r\n        setBookInfo((s) => ({\r\n            ...s,\r\n            guest: adult,\r\n            children: children,\r\n        }));\r\n    }\r\n\r\n    const handleLike = () => {\r\n        if (!auth.user) {\r\n            toast({\r\n                description: \"Login is required\",\r\n                status: \"info\",\r\n                duration: 1000\r\n            });\r\n            return;\r\n        }\r\n        mutateLike.mutate({ roomId: room.id, token: auth.user.token })\r\n    }\r\n\r\n    // if (isError) {\r\n    //     return <Box>{\"Something 's wrong\"}</Box>\r\n    // }\r\n\r\n    if (data) return (\r\n        <Box>\r\n            <Divider my=\"5\" />\r\n            {/* title */}\r\n            <Box as=\"h2\" fontSize=\"3xl\" fontWeight=\"semibold\">{room.name}</Box>\r\n\r\n            {/* rating, location, like button */}\r\n            <Box d=\"flex\" mt=\"1\" flexDir={{ base: \"column\", sm: \"row\" }}>\r\n                <Box d=\"flex\" alignItems=\"start\">\r\n                    <Box d=\"flex\" flexDir={{ base: \"column\", sm: \"row\" }}>\r\n                        <Box d=\"flex\" flexDir={{ base: \"row\" }}>\r\n                            {Array(5).fill(\"\").map((_, i) => {\r\n                                return (i < Math.round(room.totalStar / room.totalReview) ? <BsStarFill key={i} colorRendering=\"teal.400\" /> : <BsStar key={i} />)\r\n                            })}\r\n                        </Box>\r\n                        <Box as=\"span\" ml=\"2\" color=\"gray.500\">{room.totalReview} reviews</Box>\r\n                    </Box>\r\n                    <Spacer />\r\n                    <Link to=\"/\">\r\n                        <Button variant=\"link\">\r\n                            <Box mx=\"4\">&bull;</Box>\r\n                            {room.location}\r\n                        </Button>\r\n                    </Link>\r\n                </Box>\r\n\r\n                <Spacer />\r\n\r\n                <Button alignSelf=\"start\" variant=\"ghost\" size=\"sm\"\r\n                    onClick={() => handleLike()}\r\n                    leftIcon={(!didLike || !auth.user) ? <BsHeart /> : <BsHeartFill color=\"red\" />}>Like</Button>\r\n            </Box>\r\n\r\n            {/* image display */}\r\n            <Box borderRadius=\"lg\" overflow=\"hidden\" mt=\"4\">\r\n                <Grid gap=\"2\" h=\"40%\" maxH=\"450px\" objectFit=\"cover\"\r\n                    templateRows=\"repeat(2, 1fr)\"\r\n                    templateColumns=\"repeat(4, 1fr)\">\r\n                    {room.images.slice(0, 5).map((image, i) => {\r\n                        return (\r\n                            <GridItem key={i} colSpan={i === 0 ? 2 : 1} rowSpan={i === 0 ? 2 : 1} overflow=\"hidden\" >\r\n                                <Image src={image.url} h=\"auto\" height=\"100%\" w=\"100%\" objectFit=\"cover\" loading=\"lazy\"></Image>\r\n                            </GridItem>\r\n                        )\r\n                    })}\r\n                </Grid>\r\n            </Box>\r\n\r\n            {/* info  */}\r\n            <Box mt=\"4\" d={[\"flex\", \"flex\", \"flex\", \"block\"]} flexDir=\"column-reverse\">\r\n                {/* floating form */}\r\n                <Box w={[\"100%\", \"100%\", \"100%\", \"35%\"]} boxShadow=\"2xl\" mt={{ base: \"4\", lg: \"0\" }} top=\"30%\" float={{ lg: \"right\" }} position={{ lg: \"sticky\" }}\r\n                    borderRadius=\"lg\"\r\n                    display=\"inline-flex\" flexDir=\"column\" zIndex={1} borderWidth=\"thin\"\r\n                    p=\"4\" alignContent=\"center\" justifyContent=\"center\">\r\n                    <FloatingForm room={room} bookInfo={bookInfo} updateDate={updateDate} updatePeople={updatePeople} />\r\n                </Box>\r\n                {/* Detail information about this room */}\r\n                <Box height=\"1000px\" w={[\"100%\", \"100%\", \"100%\", \"60%\"]}>\r\n                    {/* name, avatar */}\r\n                    <Flex alignItems=\"center\">\r\n                        <VStack alignItems=\"start\">\r\n                            <Box as=\"h1\" fontSize=\"2xl\" fontWeight=\"semibold\" >{\"Owner: \" + owner?.name}</Box>\r\n                            <HStack>\r\n                                {room.services.map((s, i) => {\r\n                                    return (\r\n                                        <Box\r\n                                            key={i}\r\n                                            color=\"gray.500\"\r\n                                            fontWeight=\"semibold\"\r\n                                            letterSpacing=\"wide\"\r\n                                            fontSize=\"xs\"\r\n                                            textTransform=\"uppercase\"\r\n                                            ml=\"2\"\r\n                                            isTruncated\r\n                                        >{s} {room.services[room.services.length - 1] !== s && <>&bull;</>} </Box>\r\n                                    )\r\n                                })}\r\n                            </HStack>\r\n                        </VStack>\r\n\r\n                        <Spacer />\r\n                        <Avatar name={owner?.name} src={owner?.profileImageUrl}></Avatar>\r\n                    </Flex>\r\n                    <Divider my=\"3\" />\r\n\r\n                    {/* room badges */}\r\n                    {room.roomBadges?.map((b, i) => {\r\n                        return <MyRoomBadge id={b.id} key={i}></MyRoomBadge>\r\n                    })}\r\n                    <Divider my=\"3\" />\r\n\r\n                    {/* room introduction */}\r\n                    <Box as=\"h5\" fontWeight=\"semibold\" fontSize=\"2xl\">More about room</Box>\r\n                    <Box as=\"p\">{room.introduction}</Box>\r\n                    <Divider my=\"3\" />\r\n\r\n                    {/* another datepicker here */}\r\n                    <Box w=\"100%\" display={{ md: \"none\", lg: \"block\" }}>\r\n                        <PickRangeDay schedules={{ reservedDates: room.reservedDates, dayOff: room.daysOff }} updateDate={updateDate} />\r\n                    </Box>\r\n                    <Divider my=\"3\" />\r\n\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n    return <></>\r\n}\r\n\r\ntype FloatingFormProps = {\r\n    room: Room;\r\n    bookInfo: BookingInfo;\r\n    updatePeople: (adult: number, children: number) => void;\r\n    updateDate: (from?: Date | undefined, to?: Date | undefined) => void;\r\n}\r\n\r\n\r\n// TODO: Lazily fetch reservation info when pop over open\r\nconst FloatingForm: React.FC<FloatingFormProps> = ({ room, bookInfo, updateDate, updatePeople }) => {\r\n    const auth = React.useContext(AuthContext);\r\n    const feeCollapse = useDisclosure();\r\n    const [nightCount, setNightCount] = React.useState<number>(0);\r\n    const toast = useToast();\r\n\r\n    const checkPricing = useQuery([\"pricing\", bookInfo], () => {\r\n        if (bookInfo.roomId && bookInfo.bookFromDate && bookInfo.bookToDate) {\r\n            return fetchPricing(bookInfo)\r\n        }\r\n    }, {\r\n        onSuccess: (data) => console.log(data?.data),\r\n        staleTime: 1000 * 60\r\n    })\r\n\r\n    const handleCheckout = () => {\r\n        if (!auth.user) toast({\r\n            description: \"Login is required\",\r\n            status: \"info\",\r\n            isClosable: true\r\n        })\r\n    }\r\n\r\n    let price = checkPricing.data?.data;\r\n\r\n    React.useEffect(() => {\r\n        if (bookInfo.bookFromDate && bookInfo.bookToDate) {\r\n            setNightCount(getDatesBetween(bookInfo.bookFromDate.toDateString(), bookInfo.bookToDate.toDateString()).length + 1)\r\n            return feeCollapse.onOpen();\r\n        }\r\n        return feeCollapse.onClose();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [bookInfo.bookFromDate, bookInfo.bookToDate])\r\n\r\n    return (\r\n        <Box display=\"inline-flex\" flexDir=\"column\" alignContent=\"center\" justifyContent=\"center\">\r\n            <Flex alignItems=\"baseline\">\r\n                <Box as=\"h2\" fontFamily=\"mono\" fontSize=\"3xl\" fontWeight=\"semibold\">{room.formattedPrice + \"$ \"}\r\n                </Box>\r\n                <Box as=\"span\" color=\"gray.500\" fontStyle=\"italic\">\r\n                    / per night\r\n                </Box>\r\n                <Spacer />\r\n                <Box d=\"flex\" alignItems=\"center\">\r\n                    {Array(5).fill(\"\").map((_, i) => {\r\n                        return (i < Math.round(room.totalStar / room.totalReview) ? <BsStarFill key={i} colorRendering=\"teal.400\" /> : <BsStar key={i} />)\r\n                    })}\r\n                </Box>\r\n            </Flex>\r\n\r\n            {/* Pop over */}\r\n            <Box mt=\"4\">\r\n                <Popover closeOnBlur={true}>\r\n                    <PopoverTrigger>\r\n                        <HStack spacing=\"0\">\r\n                            <Button variant=\"outline\" borderTopLeftRadius=\"lg\"\r\n                                size=\"lg\" w=\"100%\"\r\n                                _focusVisible={{ border: \"0\" }}\r\n                                borderRadius=\"0\">\r\n                                {bookInfo?.bookFromDate?.toLocaleDateString() || \"From\"}\r\n                            </Button>\r\n                            <Button variant=\"outline\" borderTopRightRadius=\"lg\"\r\n                                size=\"lg\" w=\"100%\"\r\n                                _focusVisible={{ border: \"0\" }}\r\n                                borderRadius=\"0\">\r\n                                {bookInfo?.bookToDate?.toLocaleDateString() || \"To\"}\r\n                            </Button>\r\n                        </HStack>\r\n                    </PopoverTrigger>\r\n                    <PopoverContent flexWrap=\"nowrap\" alignItems=\"center\" w=\"550px\"\r\n                        style={{ backdropFilter: \"blur(5px)\" }}\r\n                        borderRadius=\"0\" bg=\"inherit\"\r\n                        bgColor=\"rgba(66, 153, 225, 0.5)\"\r\n                    >\r\n                        <PickRangeDay schedules={{ reservedDates: room.reservedDates, dayOff: room.daysOff }} updateDate={updateDate} />\r\n                    </PopoverContent>\r\n                </Popover>\r\n                <Popover>\r\n                    <PopoverTrigger>\r\n                        <Button variant=\"outline\" w=\"100%\" size=\"lg\" borderRadius=\"0\" borderBottomRadius=\"lg\" px=\"2\">{bookInfo.guest + ' guests - ' + bookInfo.children + ' children'}</Button>\r\n                    </PopoverTrigger>\r\n                    <PopoverContent flexWrap=\"nowrap\" borderRadius=\"0\" bg=\"inherit\"\r\n                        bgColor=\"rgba(66, 153, 225, 0.5)\"\r\n                    >\r\n                        <PopDetail updatePeople={updatePeople} guest={bookInfo.guest} children={bookInfo.children} maxGuest={room.maxGuest}></PopDetail>\r\n                    </PopoverContent>\r\n                </Popover>\r\n            </Box>\r\n\r\n            <Button variant=\"solid\" colorScheme=\"green\" alignSelf=\"stretch\" mt=\"4\"\r\n                isDisabled={!feeCollapse.isOpen}\r\n                onClick={handleCheckout}\r\n            >\r\n                {!feeCollapse.isOpen ? \"Choose dates to see detail\" : \"Proceed checkout\"}\r\n            </Button>\r\n            <Box alignSelf=\"center\" my=\"2\" fontWeight=\"thin\" fontStyle=\"oblique\">You won't be charged yet</Box>\r\n\r\n            {/* Fee details */}\r\n            <Collapse in={feeCollapse.isOpen}>\r\n                <Box fontSize=\"lg\">\r\n                    <Flex alignItems=\"baseline\">\r\n                        <Tooltip label={nightCount && `You are currently booking ${price?.nightCount} night(s)`}\r\n                            placement=\"left\" hasArrow>\r\n                            <Box fontWeight=\"light\" textDecoration=\"underline\">{room.formattedPrice}$ x {price?.nightCount} nights</Box>\r\n                        </Tooltip>\r\n                        <Spacer />\r\n                        {checkPricing.isLoading ? <Spinner /> :\r\n                            <Box fontFamily=\"mono\" >{price && `${price?.pricePerNight * price?.nightCount} $`}</Box>\r\n                        }\r\n                    </Flex>\r\n                    <Flex alignItems=\"baseline\">\r\n                        <Tooltip label=\"The owner keeps your place in highest cleanliness\" placement=\"left\" hasArrow>\r\n                            <Box fontWeight=\"light\" textDecoration=\"underline\">Cleaning fee</Box>\r\n                        </Tooltip>\r\n                        <Spacer />\r\n                        {checkPricing.isLoading ? <Spinner /> :\r\n                            <Box fontFamily=\"mono\">{price?.cleaningFee} $</Box>\r\n                        }\r\n                    </Flex>\r\n                    <Flex alignItems=\"baseline\">\r\n                        <Tooltip label=\"This helps us run our platform and offer services like 24/7 support on your trip. It includes VAT.\" placement=\"left\" hasArrow>\r\n                            <Box fontWeight=\"light\" textDecoration=\"underline\">Service fee</Box>\r\n                        </Tooltip>\r\n                        <Spacer />\r\n                        {checkPricing.isLoading ? <Spinner /> :\r\n                            <Box fontFamily=\"mono\">{price?.serviceFee} $</Box>\r\n                        }\r\n                    </Flex>\r\n                    <Flex alignItems=\"baseline\">\r\n                        <Tooltip label=\"We offer you discount based on your reservation!\" placement=\"left\" hasArrow>\r\n                            <Box fontWeight=\"light\" textDecoration=\"underline\">\r\n                                Discount\r\n                                <Box as=\"span\" textDecoration=\"none\" mx=\"2\">\r\n                                    {price ? price.discountPercent + \"%\" : \"0%\"}\r\n                                </Box>\r\n                            </Box>\r\n                        </Tooltip>\r\n                        <Spacer />\r\n                        {checkPricing.isLoading ? <Spinner /> :\r\n                            <Box fontFamily=\"mono\">{price?.discount} $</Box>\r\n                        }\r\n                    </Flex>\r\n                    <Divider my=\"2\" colorScheme=\"green\" variant=\"dashed\" />\r\n                    <Flex fontWeight=\"black\" fontSize=\"3xl\">\r\n                        <Box fontFamily=\"mono\">Total</Box>\r\n                        <Spacer />\r\n                        {checkPricing.isLoading ? <Spinner /> :\r\n                            <Box fontFamily=\"mono\">{price?.totalCost} $</Box>\r\n                        }\r\n                    </Flex>\r\n                </Box>\r\n            </Collapse>\r\n        </Box>\r\n    )\r\n}\r\n\r\nconst badges: RoomBadge[] = defaultRoomBadges;\r\n\r\nconst defaultRoom: Room = {\r\n    id: \"1\",\r\n    name: \"Crystal palace\",\r\n    thumbnailUrl: \"https://bit.ly/2Z4KKcF\",\r\n    maxGuest: 1,\r\n    images: [\r\n        { url: \"https://picsum.photos/1100/1000\" },\r\n        { url: \"https://picsum.photos/700/1200\" },\r\n        { url: \"https://picsum.photos/1000/1000\" },\r\n        { url: \"https://picsum.photos/1200/1000\" },\r\n        { url: \"https://picsum.photos/1100/900\" }\r\n    ],\r\n    thumbnailAlt: \"rear view house with pool\",\r\n    introduction: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum congue eros id ligula porta, id fermentum ligula semper. Pellentesque eget pulvinar justo. Phasellus eu risus dolor. Aliquam mollis urna vel lectus ornare, nec ultricies augue gravida. Nunc dignissim diam vel massa cursus condimentum. Nulla pharetra molestie nunc, ac hendrerit felis posuere a. Sed finibus magna ut nibh luctus, ac dapibus mauris cursus. Sed eu porttitor lacus. Nulla venenatis erat quis orci consectetur efficitur. Phasellus nisl nisl, luctus et sapien nec, dictum feugiat felis. Nam nec ullamcorper mi, eu vulputate justo. Nullam nibh ipsum, dictum at commodo nec, molestie et ipsum. Aliquam sit amet tincidunt augue, sit amet consectetur mi.\",\r\n    description: \"Best place in town\",\r\n    location: \"Dark side, the moon\",\r\n    totalReview: 4,\r\n    totalStar: 19,\r\n    formattedPrice: 2021.00,\r\n    services: [\"Pet\", \"Kitchen\", \"Breakfast\", \"Wifi\"],\r\n    roomBadges: badges,\r\n    serviceFee: 0.00,\r\n    cleaningFee: 40.00\r\n}\r\n\r\n\r\n\r\nconst defaultOwner: OwnerInfo = {\r\n    id: \"1234\",\r\n    name: \"Ivanov Ivan Ivanovich\",\r\n    profileImageUrl: \"https://scontent-arn2-1.xx.fbcdn.net/v/t1.6435-9/168934405_1649568108574870_2922711241924143290_n.jpg?_nc_cat=103&ccb=1-3&_nc_sid=09cbfe&_nc_ohc=NE0y-9oTNT4AX_6yZvA&_nc_ht=scontent-arn2-1.xx&oh=4a47294ccdbae32c261080108427acd1&oe=6096A09B\"\r\n}\r\n\r\nexport default SingleRoom;","import { Alert, AlertDescription, AlertIcon, AlertTitle, Box } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport { useLocation } from 'react-router'\r\n\r\ntype ErrorLocationState = {\r\n    message: string;\r\n}\r\n\r\nconst ErrorPage = () => {\r\n    const location = useLocation<ErrorLocationState>();\r\n    if (location.state) {\r\n        const { message } = location.state;\r\n        return <Alert\r\n            status=\"error\"\r\n            variant=\"subtle\"\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            textAlign=\"center\"\r\n            height=\"200px\"\r\n        >\r\n            <AlertIcon boxSize=\"40px\" mr={0} />\r\n            <AlertTitle mt={4} mb={1} fontSize=\"lg\">\r\n                {message}\r\n            </AlertTitle>\r\n            <AlertDescription maxWidth=\"md\">\r\n                Look like you have some problems! Contact us for more info!\r\n                </AlertDescription>\r\n        </Alert>\r\n    }\r\n    return (\r\n        <Alert\r\n            status=\"info\"\r\n            variant=\"subtle\"\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            textAlign=\"center\"\r\n            height=\"200px\"\r\n        >\r\n            <AlertIcon boxSize=\"40px\" mr={0} />\r\n            <AlertTitle mt={4} mb={1} fontSize=\"lg\">\r\n                Not Found!\r\n            </AlertTitle>\r\n            <AlertDescription maxWidth=\"md\">\r\n                The page you are looking does not exist or was deleted\r\n                </AlertDescription>\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default ErrorPage;","import { Badge, Box, Image, LinkOverlay, Text, Link, BoxProps, useColorModeValue, Spacer, Center } from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport { BsStar, BsStarFill } from 'react-icons/bs';\r\nimport { Link as LinkReact } from 'react-router-dom';\r\n\r\ntype RoomCardProps = {\r\n    room: RoomCard;\r\n    isSaved: boolean;\r\n}\r\n\r\nconst RoomCard = ({ room, isSaved, ...props }: RoomCardProps & BoxProps) => {\r\n    return (\r\n        <Box borderWidth=\"1px\" borderRadius=\"lg\" {...props} bg={useColorModeValue(\"gray.100\", \"gray.900\")} d=\"flex\" flexDir=\"column\">\r\n            <Link as={LinkReact} to={\"/rooms/\" + room.id} >\r\n                <Box minH=\"200px\" maxH=\"300px\" overflow=\"hidden\">\r\n                    <Image src={room.thumbnailUrl}\r\n                        objectFit=\"cover\" fit=\"cover\"\r\n                        fallback={<Box bgColor=\"gray\" color=\"gray\" />}\r\n                        alt={room.thumbnailAlt} overflow=\"hidden\"\r\n                        style={{ transition: \"ease 0.5s\" }}\r\n                        _hover={{ transform: \"scale(1.1)\" }} />\r\n                </Box>\r\n            </Link>\r\n\r\n            <Spacer />\r\n\r\n            <Box p=\"4\" d=\"flex\" flexDir=\"column\">\r\n                {!isSaved &&\r\n                    <Box d=\"flex\" alignItems=\"baseline\">\r\n                        <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\r\n                            New\r\n                        </Badge>\r\n                        {room.services.map((s, key) => {\r\n                            return (\r\n                                <Box\r\n                                    key={key}\r\n                                    color=\"gray.500\"\r\n                                    fontWeight=\"semibold\"\r\n                                    letterSpacing=\"wide\"\r\n                                    fontSize=\"xs\"\r\n                                    textTransform=\"uppercase\"\r\n                                    ml=\"2\"\r\n                                    isTruncated\r\n                                >{s} {room.services[room.services.length - 1] !== s && <>&bull;</>} </Box>\r\n                            )\r\n                        })}\r\n                    </Box>\r\n                }\r\n                <Box\r\n                    mt=\"1\"\r\n                    fontWeight=\"semibold\"\r\n                    as=\"h4\"\r\n                    lineHeight=\"tight\"\r\n                >\r\n                    {room.name}\r\n                </Box>\r\n\r\n                {!isSaved &&\r\n                    <Box\r\n                        as={\"p\"}\r\n                        lineHeight=\"tight\"\r\n                        textOverflow=\"ellipsis\"\r\n                        overflow=\"hidden\"\r\n                    >\r\n                        {room.description.length > 100 ? room.description.substring(0, 100) + \"...\" : room.description}\r\n                    </Box>\r\n                }\r\n\r\n                <Box d='flex' flexWrap=\"wrap\" justifySelf=\"end\" alignItems=\"baseline\" flexDir=\"row\">\r\n                    <Box as=\"h4\" fontSize=\"3xl\">\r\n                        {room.formattedPrice + \"$\"}\r\n                    </Box>\r\n                    <Box as=\"span\" color=\"gray.500\" fontStyle=\"italic\">\r\n                        / per night\r\n                    </Box>\r\n\r\n                    <Box d=\"flex\" alignItems=\"center\" alignSelf=\"center\" ml=\"auto\">\r\n                        {Array(5).fill(\"\").map((_, i) => {\r\n                            return (i < Math.round(room.totalStar / room.totalReview) ? <BsStarFill key={i} colorRendering=\"teal.400\" /> : <BsStar key={i} />)\r\n                        })}\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default RoomCard;","import { SimpleGrid, Box } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport RoomCard from './RoomCard'\r\n\r\ntype RoomCardListProps = {\r\n    rooms?: RoomCard[];\r\n}\r\n\r\nconst RoomCardList: React.FC<RoomCardListProps> = ({ rooms }) => {\r\n    // rooms = defaultRooms;\r\n    if (!rooms || rooms.length === 0) return <Box>\r\n        Not found any room\r\n    </Box>\r\n\r\n    return (\r\n        <SimpleGrid spacing=\"8\" columns={[1, 1, 1, 2, 3]} >\r\n            {rooms && rooms.map((r, index) => {\r\n                return (\r\n                    <RoomCard key={r.id} room={r} isSaved={false}></RoomCard>\r\n                )\r\n            })}\r\n        </SimpleGrid>\r\n    )\r\n}\r\n\r\nconst defaultRoom: RoomCard = {\r\n    id: \"random-id-12321\",\r\n    name: \"Crystal palace\",\r\n    thumbnailUrl: \"https://picsum.photos/1100/1000?random=1\",\r\n    thumbnailAlt: \"rear view house with pool\",\r\n    description: \"Best place in townBest place in townBest place in townBest \",\r\n    location: \"Dark side, the moon\",\r\n    totalReview: 4,\r\n    totalStar: 23,\r\n    formattedPrice: 2021.00,\r\n    services: [\"Pet\", \"Kitchen\", \"Breakfast\", \"Wifi\"]\r\n}\r\n\r\nconst defaultRooms: Array<RoomCard> = [\r\n    { ...defaultRoom, thumbnailUrl: \"https://picsum.photos/1100/1000?random=1\" },\r\n    { ...defaultRoom, thumbnailUrl: \"https://picsum.photos/1100/1000?random=2\" },\r\n    { ...defaultRoom, thumbnailUrl: \"https://picsum.photos/1100/1000?random=3\" },\r\n    { ...defaultRoom, thumbnailUrl: \"https://picsum.photos/1100/1000?random=4\" },\r\n    { ...defaultRoom, thumbnailUrl: \"https://picsum.photos/1100/1000?random=5\" },\r\n]\r\nconst str = \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Delectus non laboriosam blanditiis ipsa voluptas assumenda earum fugiat vel nemo rem totam modi officiis corporis accusamus consectetur, soluta optio, quas maiores!\"\r\nexport default RoomCardList;","import { Box, CircularProgress, Divider, HStack, InputLeftAddon, NumberDecrementStepper, NumberIncrementStepper, NumberInput, NumberInputField, NumberInputStepper, Portal, Slider, SliderFilledTrack, SliderThumb, SliderTrack, Spinner, Tag, TagCloseButton, TagLabel, TagProps, useColorModeValue } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport { useQuery } from 'react-query';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { fetchPropertiesView } from '../API';\r\nimport RoomCardList from '../Components/FilterComponents/RoomCardList';\r\nimport SearchBar from '../Components/NavComponents/SearchBar';\r\nimport { MdGraphicEq } from \"react-icons/md\";\r\n\r\ntype RoomsPageLocationState = {\r\n    type?: PropertyTypeType;\r\n    search?: SearchQuery;\r\n}\r\n\r\n\r\nconst RoomsPage = () => {\r\n    const queryStr = new URLSearchParams(useLocation().search);\r\n    const searchBoxColor = useColorModeValue(\"gray.100\", \"gray.900\");\r\n\r\n    const location = useLocation<RoomsPageLocationState>();\r\n\r\n    const [search, setSearch] = React.useState<SearchQuery>({ childrenNum: 0, guestNum: 0 });\r\n    const [type, setType] = React.useState<PropertyTypeType>();\r\n\r\n    const updateSearch = (search: SearchQuery) => {\r\n        setSearch(search);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (location.state !== undefined && location.state.search) {\r\n            setSearch(location.state.search)\r\n        }\r\n        if (location.state !== undefined && location.state.type) {\r\n            setType(location.state.type);\r\n        }\r\n    }, [])\r\n\r\n    let queryKeys = [type?.id, search];\r\n\r\n    const { data, isLoading, error, refetch, remove } = useQuery([\"propertyView\", queryKeys], () => fetchPropertiesView(type?.id, search),\r\n        {\r\n            staleTime: 1000 * 60\r\n        });\r\n\r\n    if (error) {\r\n        return <>Error</>\r\n    }\r\n\r\n    return (\r\n        <Box d=\"flex\" flexDir=\"column\" gridGap=\"5\">\r\n            <Box position={{ lg: \"sticky\" }} top={0}\r\n                bgColor={searchBoxColor} d=\"flex\" flexDir=\"column\"\r\n                boxShadow=\"2xl\"\r\n                gridGap=\"5\" pb=\"5\"\r\n            >\r\n                <SearchBar search={search}\r\n                    updateSearch={updateSearch}\r\n                    isLoading={isLoading}\r\n                    onClickSearch={() => { remove(); refetch(); }}\r\n                />\r\n                <HStack>\r\n                    {/* type tag */}\r\n                    {type && <QueryTag label={\"Property type: \" + type.propertyType}\r\n                        onClose={() => { setType(undefined) }}\r\n                    />}\r\n\r\n                    {/* city tag */}\r\n                    {search.city && <QueryTag label={search.city}\r\n                        onClose={() => { setSearch(s => ({ ...s, city: \"\" })) }}\r\n                    />}\r\n\r\n                    {/* from date tag */}\r\n                    {search.from && <QueryTag label={\"From: \" + search.from.toLocaleDateString()}\r\n                        onClose={() => { setSearch(s => ({ ...s, from: undefined })) }}\r\n                    />}\r\n\r\n                    {/* to date tag */}\r\n                    {search.to && <QueryTag label={\"To: \" + search.to.toLocaleDateString()}\r\n                        onClose={() => { setSearch(s => ({ ...s, to: undefined })) }}\r\n                    />}\r\n\r\n                    {/* guest num tag */}\r\n                    {search.guestNum > 0 && <QueryTag label={search.guestNum + \" guests\"}\r\n                        onClose={() => { setSearch(s => ({ ...s, guestNum: 0 })) }}\r\n                    />}\r\n\r\n                    {/* children num tag */}\r\n                    {search.childrenNum > 0 && <QueryTag label={search.childrenNum + \" children\"}\r\n                        onClose={() => { setSearch(s => ({ ...s, childrenNum: 0 })) }}\r\n                    />}\r\n                </HStack>\r\n            </Box>\r\n            <Box as=\"h3\" mb=\"5\" fontSize=\"4xl\" fontWeight=\"bold\" >Find place that fits you most...</Box>\r\n            {isLoading ?\r\n                <Spinner color=\"green\" size=\"lg\" alignSelf=\"center\" />\r\n                :\r\n                <RoomCardList rooms={data?.data}></RoomCardList>\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\ntype QueryTagProps = {\r\n    label: string;\r\n    onClose: () => void;\r\n}\r\nconst QueryTag = (props: QueryTagProps & TagProps) => {\r\n    const { label, onClose, ...tagProps } = props;\r\n\r\n    return (\r\n        <Tag size=\"lg\" colorScheme=\"green\" {...tagProps}>\r\n            <TagLabel>\r\n                {props.label}\r\n            </TagLabel>\r\n            <TagCloseButton onClick={() => props.onClose()} />\r\n        </Tag>\r\n    );\r\n}\r\n\r\nexport default RoomsPage;","import { Box, BoxProps, Center, Divider } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport { BsHeartFill } from 'react-icons/bs';\r\n\r\nconst Footer: React.FC<BoxProps> = ({ children, ...props }) => {\r\n    return (\r\n        <Box mt=\"10\" mb=\"5\" {...props}>\r\n            <Divider mb=\"5\" boxShadow=\"lg\" />\r\n            <Center as=\"h4\">\r\n                {\"Made with\"}\r\n                <>&nbsp;</>\r\n                <Box as={\"a\"} href=\"\" cursor=\"default\">\r\n                    <BsHeartFill />\r\n                </Box>\r\n                <>&nbsp;</>\r\n                {\"by\"}\r\n                <>&nbsp;</>\r\n                <Box as=\"a\" href=\"https://github.com/haihaibeo\">Hai</Box>\r\n            </Center>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Footer;","import { Avatar, Box, BoxProps, Button, Divider, Flex, Grid, Icon, IconButton, ListItem, Modal, ModalBody, ModalContent, ModalHeader, ModalOverlay, ModalProps, SimpleGrid, Spacer, Textarea, UnorderedList, useColorModeValue, useDisclosure, VStack } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport { BsStar, BsStarFill } from 'react-icons/bs';\r\nimport { FaCheck, FaStar, FaUserShield } from 'react-icons/fa';\r\nimport { useQuery } from 'react-query';\r\nimport { useLocation } from 'react-router';\r\nimport { fetchPropertiesSaved, fetchUserReservation, toggleLike } from '../API';\r\nimport RoomCard from '../Components/FilterComponents/RoomCard';\r\nimport { AuthContext } from '../Contexts/AuthContext';\r\n\r\nconst useQueryParam = () => {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst ProfilePage = () => {\r\n    const { user } = React.useContext(AuthContext);\r\n\r\n    let query = useQueryParam();\r\n    let view = query.get(\"view\")?.toLowerCase();\r\n\r\n    return (\r\n        <Box d=\"flex\" flexDir={{ base: \"column\", md: \"row\" }}>\r\n            {/* LEFT */}\r\n            <Box w={{ base: \"100%\", md: \"25%\" }} minW=\"300px\">\r\n                <Box d=\"flex\" overflow=\"hidden\" borderWidth=\"1px\" borderRadius=\"lg\" p=\"4\" flexDir={{ base: \"row-reverse\", md: \"column\" }} spacing=\"2\">\r\n                    <VStack alignSelf=\"center\" justifySelf=\"start\">\r\n                        <Avatar name={user?.name} boxSize={{ base: \"20\", md: \"40\" }}></Avatar>\r\n                        <Button variant=\"link\" my=\"2\" fontSize=\"sm\">Update photo</Button>\r\n                    </VStack>\r\n\r\n                    <VStack alignItems=\"start\" spacing=\"2\">\r\n                        <Icon as={FaUserShield} boxSize=\"8\" />\r\n                        <Box as=\"h4\" fontWeight=\"bold\" fontSize=\"lg\" fontFamily=\"mono\">Identity verification</Box>\r\n                        <Box as=\"h4\">Show others you’re really you with the identity verification badge.</Box>\r\n\r\n                        <Divider />\r\n\r\n                        <Box as=\"h4\" fontWeight=\"bold\" fontSize=\"lg\" fontFamily=\"mono\">{user?.name + \" confirmed\"}</Box>\r\n                        <Box d=\"flex\" flexDir=\"row\" alignItems=\"baseline\">\r\n                            <FaCheck />\r\n                            <Box as=\"h4\" ml=\"4\">Email confirmed</Box>\r\n                        </Box>\r\n                        <Box d=\"flex\" flexDir=\"row\" alignItems=\"baseline\">\r\n                            <FaCheck />\r\n                            <Box as=\"h4\" ml=\"4\">Phone confirmed</Box>\r\n                        </Box>\r\n                    </VStack>\r\n                </Box>\r\n            </Box>\r\n\r\n            <Spacer minW=\"2\" />\r\n\r\n            {/* RIGHT */}\r\n            <Box w={{ base: \"100%\", md: \"65%\" }}>\r\n                {(view === \"likes\" || view == null) && <UserLikesProperties></UserLikesProperties>}\r\n                {view === \"notifications\" && <Notifications></Notifications>}\r\n                {view === \"reservations\" && <Reservations></Reservations>}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\ntype ReviewModalProps = {\r\n    reservationId: string;\r\n    propId: string;\r\n}\r\nconst ReviewModal = (modalProps: ModalProps & ReviewModalProps) => {\r\n    const [starHover, setStarHover] = React.useState(0);\r\n    const [starReview, setStarReview] = React.useState(0);\r\n    const starColor = useColorModeValue(\"red\", \"yellow\");\r\n\r\n    const { onClose } = modalProps;\r\n\r\n    return (\r\n        <Modal {...modalProps} onClose={() => { setStarReview(0); onClose(); }}>\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n                <ModalHeader>Write a review</ModalHeader>\r\n                <ModalBody>\r\n                    <Flex flexDir=\"column\" gridGap=\"2\">\r\n                        <Box>\r\n                            {Array(5).fill(5).map((_, index) => {\r\n                                return (\r\n                                    <IconButton variant=\"ghost\" aria-label=\"star\" key={index}\r\n                                        onClick={() => { setStarReview(index + 1) }}\r\n                                        _focus={{ borderWidth: \"1px\" }}\r\n                                        borderRadius=\"full\" onMouseOver={() => setStarHover(index + 1)} onMouseLeave={() => setStarHover(0)}\r\n                                        icon={starHover > index || starReview > index ? <BsStarFill color={starColor} /> : <BsStar />} />)\r\n                            })}\r\n                        </Box>\r\n                        <Textarea size=\"md\" placeholder=\"Please describe some of your thoughts\" />\r\n                        <Button ml=\"auto\" isDisabled={starReview <= 0}>Send</Button>\r\n                    </Flex>\r\n                </ModalBody>\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst Reservations = (boxprops: BoxProps) => {\r\n    const reviewModal = useDisclosure();\r\n    const auth = React.useContext(AuthContext)\r\n\r\n    const { data, error, isError } = useQuery([\"reservations\", auth.user?.token], fetchUserReservation, {\r\n        onSuccess: (res) => {\r\n            console.log(res);\r\n        },\r\n        retry: 2,\r\n        staleTime: 1000 * 60 * 2,\r\n    })\r\n\r\n    if (data?.data.length === 0) {\r\n        return <Box>\r\n            You don't have any reservations\r\n        </Box>\r\n    }\r\n\r\n    if (isError) return <Box>Something's wrong</Box>\r\n\r\n    return <Box>\r\n        <Flex gridGap=\"2\" flexDir=\"column\">\r\n            <Box as={\"h1\"} fontFamily={\"heading\"} fontWeight=\"bold\" fontSize=\"4xl\" mb=\"3\">Your reservations</Box>\r\n            {data?.data.map(d =>\r\n                <Box borderWidth=\"1px\" p=\"2\"\r\n                    style={{ transition: \"ease 0.3s\" }}\r\n                    _hover={{ transform: \"scale(1.02)\" }}\r\n                    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n                    bg={useColorModeValue('gray.100', 'gray.800')}\r\n                    borderRadius=\"10px\"\r\n                >\r\n                    <Flex key={d.id} w=\"100%\" flexDir=\"row\" gridGap=\"2\">\r\n                        <Flex w=\"100%\" flexDir=\"column\" gridGap=\"2\">\r\n                            <UnorderedList h=\"100%\">\r\n                                <Grid h=\"100%\" fontWeight=\"bold\" gridTemplateColumns={{ base: \"1fr\", md: \"1fr 1fr\" }} templateRows=\"auto\">\r\n                                    <ListItem><Box as=\"h3\">From Date: </Box></ListItem>\r\n                                    <Box fontWeight=\"light\">{d.fromDate}</Box>\r\n                                    <ListItem><Box as=\"h3\">To Date: </Box></ListItem>\r\n                                    <Box fontWeight=\"light\">{d.toDate}</Box>\r\n                                    <ListItem><Box as=\"h3\">Total Cost: </Box></ListItem>\r\n                                    <Box fontWeight=\"light\">{d.total}</Box>\r\n                                    <ListItem><Box as=\"h3\">Reserved from: </Box></ListItem>\r\n                                    <Box fontWeight=\"light\">{d.timeCreated}</Box>\r\n                                    <ListItem><Box as=\"h3\">Reservations Status: </Box></ListItem>\r\n                                    <Box fontWeight=\"light\">{d.reservationStatus}</Box>\r\n                                    <ListItem><Box as=\"h3\">Payment Status: </Box></ListItem>\r\n                                    <Box fontWeight=\"light\">{d.paymentStatus}</Box>\r\n                                </Grid>\r\n                            </UnorderedList>\r\n\r\n                            <Button colorScheme=\"green\" onClick={() => reviewModal.onOpen()}>Write a review</Button>\r\n\r\n                            <Button colorScheme=\"red\" isDisabled={d.reservationStatus.toLowerCase() !== \"on reserved\"}>Cancel reservation</Button>\r\n                        </Flex>\r\n                        <Box ml=\"auto\" >\r\n                            <Divider orientation=\"vertical\" borderColor=\"currentcolor\" />\r\n                        </Box>\r\n                        <RoomCard room={d.property} isSaved={true} flex='0 0 15em' borderWidth=\"0px\" />\r\n                    </Flex>\r\n                </Box>\r\n            )}\r\n            <ReviewModal isOpen={reviewModal.isOpen} isCentered onClose={reviewModal.onClose} reservationId=\"\" propId=\"\">\r\n            </ReviewModal>\r\n        </Flex>\r\n    </Box>\r\n}\r\n\r\nconst UserLikesProperties = () => {\r\n    const { data } = useQuery(\"propertiesLiked\", () => fetchPropertiesSaved(), {\r\n        onSuccess: (res) => {\r\n        },\r\n        refetchOnMount: \"always\",\r\n    })\r\n\r\n    if (data?.data.length === 0) return <Box>Looks like you didn't save any room</Box>\r\n\r\n    return (\r\n        <Box>\r\n            <Box as={\"h1\"} fontFamily={\"heading\"} fontWeight=\"bold\" fontSize=\"4xl\" mb=\"3\">Rooms that you saved</Box>\r\n            <SimpleGrid spacing=\"4\" columns={{ base: 1, lg: 2 }}>\r\n                {data?.data.map(r => <RoomCard room={r} key={r.id} isSaved={true} />)}\r\n            </SimpleGrid>\r\n        </Box>\r\n    );\r\n}\r\n\r\nconst Notifications: React.FC = () => {\r\n    return (\r\n        <Box>Notification</Box>\r\n    )\r\n}\r\n\r\nexport default ProfilePage;\r\n\r\nconst defaultRoom: RoomCard = {\r\n    id: \"random-id-12321\",\r\n    name: \"Crystal palace\",\r\n    thumbnailUrl: \"https://picsum.photos/1100/1000?random=1\",\r\n    thumbnailAlt: \"rear view house with pool\",\r\n    description: \"Best place in townBest place in townBest place in townBest \",\r\n    location: \"Dark side, the moon\",\r\n    totalReview: 4,\r\n    totalStar: 23,\r\n    formattedPrice: 2021.00,\r\n    services: [\"Pet\", \"Kitchen\", \"Breakfast\", \"Wifi\"]\r\n}\r\n\r\nconst defaultRooms: Array<RoomCard> = [\r\n    { ...defaultRoom, thumbnailUrl: \"https://picsum.photos/1100/1000?random=1\" },\r\n    { ...defaultRoom, thumbnailUrl: \"https://picsum.photos/1100/1000?random=2\" },\r\n    { ...defaultRoom, thumbnailUrl: \"https://picsum.photos/1100/1000?random=3\" },\r\n    { ...defaultRoom, thumbnailUrl: \"https://picsum.photos/1100/1000?random=4\" },\r\n    { ...defaultRoom, thumbnailUrl: \"https://picsum.photos/1100/1000?random=5\" },\r\n]","import { FormControl, FormLabel } from '@chakra-ui/form-control';\r\nimport { Input } from '@chakra-ui/input';\r\nimport { Box, BoxProps, Divider, SimpleGrid, VStack, Link, Flex, Spacer } from '@chakra-ui/layout';\r\nimport { Button, chakra, IconButton, NumberInput, NumberInputField, Slider, SliderFilledTrack, SliderThumb, SliderTrack, Switch, useToast } from '@chakra-ui/react';\r\nimport { Select } from '@chakra-ui/select';\r\nimport { Textarea } from '@chakra-ui/textarea';\r\nimport React, { FC } from 'react'\r\nimport { FaMinus, FaPlus } from 'react-icons/fa';\r\nimport { useMutation, useQuery } from 'react-query';\r\nimport { Link as RouterLink, SwitchProps } from 'react-router-dom';\r\nimport { deleteImage, fetchCities, fetchPropertyTypes, postImage, postRoom } from '../API';\r\nimport { CityResponse } from '../Components/NavComponents/SearchBar';\r\n\r\n\r\ntype Country = {\r\n    id: string;\r\n    countryName: string;\r\n}\r\n\r\nconst getUniqeCountries = (res: CityResponse[]) => {\r\n    let countries: Country[] = [];\r\n    let indexes = new Set<string>();\r\n    for (let i of res) {\r\n        if (!indexes.has(i.countryId)) {\r\n            countries.push({ id: i.countryId, countryName: i.countryName });\r\n        }\r\n        indexes.add(i.countryId);\r\n    }\r\n    console.log(countries);\r\n    return countries;\r\n}\r\n\r\nconst PublishRoomPage: FC<BoxProps> = ({ ...props }) => {\r\n    const toast = useToast();\r\n    const [countries, setCountries] = React.useState<Country[]>();\r\n\r\n    const [room, setRoom] = React.useState<PublishRoomState>({\r\n        cityId: \"1\",\r\n        countryId: \"\",\r\n        description: \"Test description\",\r\n        images: [\r\n            {\r\n                url: \"url\",\r\n                alt: \"alt\",\r\n                deleteHash: \"delHash\"\r\n            }\r\n        ],\r\n        maxGuest: 0,\r\n        propTypeId: \"\",\r\n        introdution: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Architecto minus ad assumenda dignissimos. Perferendis optio est nam accusamus aliquid voluptas?\",\r\n        name: \"Lorem ipsum\",\r\n        refundPercent: 100,\r\n        number: \"12\",\r\n        streetName: \"Street asdfgg\",\r\n        services: {\r\n            breakfast: true,\r\n            kitchen: false,\r\n            parking: true,\r\n            pet: false,\r\n            wifi: true\r\n        },\r\n        pricing: {\r\n            basePrice: 250,\r\n            cleaningFee: 10,\r\n            serviceFee: 0\r\n        }\r\n    });\r\n\r\n    const { data: resCities, isLoading, status } = useQuery<unknown, unknown, CityResponse[]>(\"cities\", fetchCities, {\r\n        staleTime: 1000 * 60 * 10,\r\n        onSuccess: (res) => {\r\n            setCountries(getUniqeCountries(res));\r\n        }\r\n    });\r\n\r\n    const { data: resTypes, isError } = useQuery<unknown, unknown, PropertyTypeType[]>(\"propertypeList\", fetchPropertyTypes, {\r\n        staleTime: 1000 * 60 * 10\r\n    });\r\n\r\n    const publish = useMutation(postRoom, {\r\n        onSuccess: (res) => {\r\n            toast({ description: res.data, status: \"success\" })\r\n        },\r\n        onError: (err) => {\r\n            console.log(err);\r\n            toast({ description: \"Something's wrong\", status: \"error\" })\r\n        },\r\n    })\r\n\r\n    const handlePublish = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        e.preventDefault();\r\n        publish.mutate(room);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        return function cleanup() { localStorage.removeItem(\"previewRoom\"); }\r\n    }, [])\r\n\r\n    const handleImagesInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files != null) {\r\n            const files = Array.from(e.target.files);\r\n            const formData = new FormData();\r\n\r\n            formData.append(\"image\", files[0]);\r\n            postImage(formData).then((msg) => msg.data).catch(e => console.log(e));\r\n            deleteImage(\"\").then(msg => console.log(msg.data));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <chakra.form>\r\n            <Box d='flex' flexDir=\"column\" mt=\"10\" {...props}>\r\n                <VStack spacing=\"8\" w=\"75%\" alignSelf=\"center\">\r\n                    <Box as=\"h1\" fontSize=\"3xl\" fontWeight=\"bold\" alignSelf=\"start\">Publish your new property</Box>\r\n                    <Divider borderColor=\"currentcolor\" />\r\n\r\n                    {/* Property info */}\r\n                    <Box d={{ base: \"inline-block\", lg: \"flex\" }} flexDir=\"row\" w=\"100%\" fontWeight=\"medium\">\r\n                        <Box as=\"h2\" fontSize=\"lg\" w={{ base: \"100%\", lg: \"30%\" }} mb=\"5\">Property info</Box>\r\n\r\n                        <VStack alignItems=\"start\" w=\"100%\">\r\n                            <FormControl isRequired id=\"prop-name\">\r\n                                <FormLabel as=\"h2\" fontSize=\"md\">Property Name</FormLabel>\r\n                                <Input variant=\"filled\" required\r\n                                    value={room.name}\r\n                                    onChange={(e) => { setRoom((r) => ({ ...r, name: e.target.value })) }}\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl isRequired id=\"prop-type\">\r\n                                <FormLabel as=\"h2\" fontSize=\"md\">Property's Type</FormLabel>\r\n                                <Select variant=\"filled\" placeholder=\"--Choose your property type--\"\r\n                                    onChange={(e) => setRoom((r) => ({ ...r, propTypeId: e.target.value, cityId: \"\" }))}\r\n                                >\r\n                                    {resTypes?.map(rt => {\r\n                                        return <option value={rt.id} key={rt.id}>{rt.propertyType}</option>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl isRequired id=\"prop-description\">\r\n                                <FormLabel as=\"h2\" fontSize=\"md\">Description</FormLabel>\r\n                                <Input variant=\"filled\" required\r\n                                    value={room.description}\r\n                                    onChange={(e) => setRoom((r) => ({ ...r, description: e.target.value }))}\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl isRequired id=\"prop-introduction\">\r\n                                <FormLabel as=\"h2\" fontSize=\"md\">Introduction</FormLabel>\r\n                                <Textarea rows={4} required variant=\"filled\"\r\n                                    value={room.introdution}\r\n                                    onChange={(e) => setRoom((r) => ({ ...r, introdution: e.target.value }))}\r\n                                />\r\n                            </FormControl>\r\n                        </VStack>\r\n                    </Box>\r\n                    <Divider borderColor=\"currentcolor\" />\r\n\r\n                    {/* Location info */}\r\n                    <Box d={{ base: \"inline-block\", lg: \"flex\" }} flexDir=\"row\" w=\"100%\" fontWeight=\"medium\">\r\n                        <Box as=\"h2\" fontSize=\"lg\" w={{ base: \"100%\", lg: \"30%\" }} mb=\"5\">Location info</Box>\r\n                        <VStack alignItems=\"start\" w=\"100%\">\r\n                            <FormControl isRequired id=\"prop-country\">\r\n                                <FormLabel as=\"h2\" fontSize=\"md\">Country</FormLabel>\r\n                                <Select variant=\"filled\" placeholder=\"--Choose your country--\"\r\n                                    onChange={(e) => setRoom((r) => ({ ...r, countryId: e.target.value, cityId: \"\" }))}\r\n                                >\r\n                                    {countries?.map(c => {\r\n                                        return <option value={c.id} key={c.countryName}>{c.countryName}</option>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl isRequired id=\"prop-city\">\r\n                                <FormLabel as=\"h2\" fontSize=\"md\">City</FormLabel>\r\n                                <Select variant=\"filled\" placeholder=\"--Choose your city--\"\r\n                                    onChange={(e) => {\r\n                                        setRoom((r) => ({ ...r, cityId: e.target.value }))\r\n                                    }}\r\n                                >\r\n                                    {resCities?.filter(ct => ct.countryId === room.countryId).map(c => {\r\n                                        return <option value={c.cityId} key={c.cityId}>{c.cityName}</option>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <Flex gridGap=\"2\" w=\"100%\" flexDir={{ base: 'column', lg: \"row\" }}>\r\n                                <FormControl isRequired id=\"prop-street\" flex=\"0 1 60%\">\r\n                                    <FormLabel as=\"h2\" fontSize=\"md\">Street Name</FormLabel>\r\n                                    <Input required variant=\"filled\" value={room.streetName}\r\n                                        onChange={(e) => { setRoom((r) => ({ ...r, streetName: e.target.value })) }}\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl isRequired id=\"prop-number\" flex=\"0 1 40%\">\r\n                                    <FormLabel as=\"h2\" fontSize=\"md\">Property's number</FormLabel>\r\n                                    <Input required variant=\"filled\" value={room.number}\r\n                                        onChange={(e) => { setRoom((r) => ({ ...r, number: e.target.value })) }}\r\n                                    />\r\n                                </FormControl>\r\n                            </Flex>\r\n                            <FormControl id=\"prop-add-note\">\r\n                                <FormLabel as=\"h2\" fontSize=\"md\">Notes to client<Box as=\"span\" fontStyle=\"oblique\" fontWeight=\"light\">(optional)</Box></FormLabel>\r\n                                <Input variant=\"filled\" value={room.addressDesc}\r\n                                    onChange={(e) => { setRoom((r) => ({ ...r, addressDesc: e.target.value })) }}\r\n                                />\r\n                            </FormControl>\r\n                        </VStack>\r\n                    </Box>\r\n                    <Divider borderColor=\"currentcolor\" />\r\n\r\n                    {/* Images */}\r\n                    <Box d={{ base: \"inline-block\", lg: \"flex\" }} flexDir=\"row\" w=\"100%\" fontWeight=\"medium\" justifyContent=\"space-between\">\r\n                        <Box as=\"h2\" fontSize=\"lg\" w={{ base: \"100%\", lg: \"30%\" }} mb=\"5\" flexWrap=\"wrap\">\r\n                            <Box>Images</Box>\r\n                            <Box as=\"span\" fontStyle=\"oblique\" fontWeight=\"light\">{\" (At least 5 images)\"}</Box>\r\n                        </Box>\r\n                        <Input required variant=\"ghost\" type=\"file\" justifySelf=\"flex-end\" multiple accept=\"image/*\" onChange={(e) => handleImagesInput(e)} />\r\n                    </Box>\r\n                    <Divider borderColor=\"currentcolor\" />\r\n\r\n                    {/* Services */}\r\n                    <Box d={{ base: \"inline-block\", lg: \"flex\" }} flexDir=\"row\" w=\"100%\" fontWeight=\"medium\">\r\n                        <Box as=\"h2\" fontSize=\"lg\" w={{ base: \"100%\", lg: \"30%\" }} mb=\"5\">Services</Box>\r\n                        <Box w=\"100%\" >\r\n                            <SimpleGrid minChildWidth=\"12em\" spacingX=\"5rem\" spacingY=\"2\">\r\n                                <Flex gridGap=\"2\" alignItems=\"center\">\r\n                                    <Box as=\"h2\" fontSize=\"md\">\r\n                                        Max Guests\r\n                                </Box>\r\n                                    <Spacer />\r\n                                    <IconButton aria-label=\"Minus\" size=\"sm\" icon={<FaMinus />}\r\n                                        isDisabled={room.maxGuest <= 0}\r\n                                        onClick={() => setRoom((r) => ({ ...r, maxGuest: r.maxGuest-- }))}\r\n                                    />\r\n                                    <Box as=\"h3\" fontSize=\"md\" w=\"3ch\" textAlign=\"center\">\r\n                                        {room.maxGuest}\r\n                                    </Box>\r\n                                    <IconButton aria-label=\"Plus\" size=\"sm\" icon={<FaPlus />}\r\n                                        isDisabled={room.maxGuest >= 10}\r\n                                        onClick={() => setRoom((r) => ({ ...r, maxGuest: r.maxGuest++ }))}\r\n                                    />\r\n                                </Flex>\r\n                                <ServiceDisplay name=\"Wifi\"\r\n                                    isOn={room.services.wifi}\r\n                                    toggle={(checked) => { setRoom((r) => ({ ...r, services: ({ ...r.services, wifi: checked }) })) }}\r\n                                />\r\n                                <ServiceDisplay name=\"Kitchen\"\r\n                                    isOn={room.services.kitchen}\r\n                                    toggle={(checked) => { setRoom((r) => ({ ...r, services: ({ ...r.services, kitchen: checked }) })) }}\r\n                                />\r\n                                <ServiceDisplay name=\"Breakfast\"\r\n                                    isOn={room.services.breakfast}\r\n                                    toggle={(checked) => { setRoom((r) => ({ ...r, services: ({ ...r.services, breakfast: checked }) })) }}\r\n                                />\r\n                                <ServiceDisplay name=\"Pet Allow\"\r\n                                    isOn={room.services.pet}\r\n                                    toggle={(checked) => { setRoom((r) => ({ ...r, services: ({ ...r.services, pet: checked }) })) }}\r\n                                />\r\n                                <ServiceDisplay name=\"Free Parking\"\r\n                                    isOn={room.services.parking}\r\n                                    toggle={(checked) => { setRoom((r) => ({ ...r, services: ({ ...r.services, parking: checked }) })) }}\r\n                                />\r\n                            </SimpleGrid>\r\n                        </Box>\r\n                    </Box>\r\n                    <Divider borderColor=\"currentcolor\" />\r\n\r\n                    {/* Pricing */}\r\n                    <Box d={{ base: \"inline-block\", lg: \"flex\" }} flexDir=\"row\" w=\"100%\" fontWeight=\"medium\">\r\n                        <Box as=\"h2\" fontSize=\"lg\" w={{ base: \"100%\", lg: \"30%\" }} mb=\"5\">Pricing ($)</Box>\r\n                        <VStack alignItems=\"start\" w=\"100%\">\r\n                            <ServiceDisplay isOn={room.refundPercent === 100 ? true : false}\r\n                                name=\"Allow full refund\" size=\"lg\"\r\n                                toggle={(checked) => { setRoom((r) => ({ ...r, refundPercent: checked ? 100 : 80 })) }}\r\n                            />\r\n                            {room.refundPercent !== 100 &&\r\n                                <Box>\r\n                                    Amount refund: {room.refundPercent}%\r\n                                </Box>\r\n                            }\r\n                            <Slider value={room.refundPercent} min={0} max={100} step={5} colorScheme=\"blue\"\r\n                                onChangeEnd={(percent) => { setRoom((r) => ({ ...r, refundPercent: percent })) }}>\r\n                                <SliderTrack>\r\n                                    <SliderFilledTrack />\r\n                                </SliderTrack>\r\n                                <SliderThumb boxSize={6} />\r\n                            </Slider>\r\n                            <FormControl isRequired id=\"prop-price-base\" isInvalid={room.pricing.basePrice === 0 ? true : false}>\r\n                                <FormLabel opacity={room.pricing.basePrice === 0 ? 0.4 : 1} as=\"h2\" fontSize=\"md\">Base price</FormLabel>\r\n                                <NumberInput value={room.pricing.basePrice}\r\n                                    onChange={(price) => { setRoom((r) => ({ ...r, pricing: { ...r.pricing, basePrice: parseInt(price) | 0 } })) }}\r\n                                >\r\n                                    <NumberInputField variant=\"filled\" required />\r\n                                </NumberInput>\r\n                            </FormControl>\r\n                            <FormControl isRequired id=\"prop-price-cleaning\">\r\n                                <FormLabel opacity={room.pricing.cleaningFee === 0 ? 0.4 : 1} as=\"h2\" fontSize=\"md\">Cleaning fee</FormLabel>\r\n                                <NumberInput value={room.pricing.cleaningFee}\r\n                                    onChange={(price) => { setRoom((r) => ({ ...r, pricing: { ...r.pricing, cleaningFee: parseInt(price) | 0 } })) }}\r\n                                >\r\n                                    <NumberInputField variant=\"filled\" required />\r\n                                </NumberInput>\r\n                            </FormControl>\r\n                            <FormControl isRequired id=\"prop-price-service\">\r\n                                <FormLabel opacity={room.pricing.serviceFee === 0 ? 0.4 : 1} as=\"h2\" fontSize=\"md\">Service fee</FormLabel>\r\n                                <NumberInput value={room.pricing.serviceFee}\r\n                                    onChange={(price) => { setRoom((r) => ({ ...r, pricing: { ...r.pricing, serviceFee: parseInt(price) | 0 } })) }}\r\n                                >\r\n                                    <NumberInputField variant=\"filled\" required />\r\n                                </NumberInput>\r\n                            </FormControl>\r\n                        </VStack>\r\n                    </Box>\r\n\r\n                    <Box>\r\n                        <Link as={RouterLink} to=\"/room/preview\" _hover={{ textStyle: \"none\" }} target=\"_blank\" onClick={() => localStorage.setItem(\"previewRoom\", JSON.stringify(room))}>\r\n                            <Button variant=\"solid\" mr=\"10\" colorScheme=\"green\">\r\n                                See a preview\r\n                            </Button>\r\n                        </Link>\r\n\r\n                        <Button variant=\"solid\" type=\"submit\" colorScheme=\"blue\" onClick={(e) => handlePublish(e)}>\r\n                            Confirm\r\n                        </Button>\r\n                    </Box>\r\n                </VStack>\r\n            </Box>\r\n        </chakra.form>\r\n    );\r\n}\r\n\r\ninterface ServiceDisplayProps {\r\n    name: string;\r\n    id?: string;\r\n    isOn: boolean;\r\n    toggle: (checked: boolean) => void;\r\n}\r\n\r\nconst ServiceDisplay: React.FC<ServiceDisplayProps & SwitchProps> = (props) =>\r\n    <FormControl display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" pr=\"2\">\r\n        <FormLabel htmlFor={\"service_\" + props.name} mb=\"0\" opacity={props.isOn ? 1 : 0.4}>\r\n            {props.name}\r\n        </FormLabel>\r\n        <Switch id={\"service_\" + props.name} isChecked={props.isOn}\r\n            {...props}\r\n            onChange={(e) => { props.toggle(e.target.checked) }} />\r\n    </FormControl>\r\n\r\nexport default PublishRoomPage;","import React from 'react'\r\n\r\nconst PreviewRoomPage = () => {\r\n    const [room, setRoom] = React.useState<any>();\r\n    console.log(room);\r\n\r\n    React.useEffect(() => {\r\n        const room = localStorage.getItem(\"previewRoom\");\r\n        console.log(room)\r\n        if (room) setRoom(JSON.parse(room));\r\n\r\n        return function cleanup() {\r\n            localStorage.removeItem(\"previewRoom\");\r\n        }\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        console.log(room);\r\n    }, [room])\r\n\r\n    return <>Hello</>\r\n}\r\n\r\nexport default PreviewRoomPage;","import { Alert, AlertDescription, AlertIcon, AlertTitle, Box, Button, Collapse, useDisclosure, useToast } from '@chakra-ui/react'\r\nimport React, { useContext } from 'react'\r\nimport { registerHost } from '../API'\r\nimport { AuthContext } from '../Contexts/AuthContext'\r\n\r\nconst RegisterHostPage = () => {\r\n    const auth = useContext(AuthContext);\r\n    const toast = useToast();\r\n    const alert = useDisclosure();\r\n\r\n    const handleRegisterClick = () => {\r\n        alert.onOpen();\r\n        registerHost().then(res => {\r\n            console.log(res);\r\n            if (res.status === 200) {\r\n                localStorage.setItem(\"token\", res.data.token);\r\n                auth.updateToken(res.data.token);\r\n                toast({\r\n                    description: \"Congrat! You are eligible as a new host!\",\r\n                    status: \"success\"\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            toast({\r\n                description: err,\r\n                status: \"error\"\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box d=\"flex\" flexDir=\"column\" gridGap=\"2\" justifyItems=\"center\" justifyContent=\"center\">\r\n            <Button onClick={() => handleRegisterClick()}\r\n                colorScheme=\"green\" w=\"30ch\"\r\n                isDisabled={auth.user?.roles.includes(\"Owner\")}\r\n                alignSelf=\"center\"\r\n            >\r\n                {auth.user?.roles.includes(\"Owner\") ? \"You are already a host!\" : \"Register to become a host!\"}\r\n            </Button>\r\n            <Collapse in={alert.isOpen}>\r\n                <SuccessAlert></SuccessAlert>\r\n            </Collapse>\r\n        </Box>\r\n    )\r\n}\r\n\r\nconst SuccessAlert = () => <Alert\r\n    status=\"success\"\r\n    variant=\"subtle\"\r\n    flexDirection=\"column\"\r\n    alignItems=\"center\"\r\n    justifyContent=\"center\"\r\n    textAlign=\"center\"\r\n    height=\"200px\"\r\n>\r\n    <AlertIcon boxSize=\"40px\" mr={0} />\r\n    <AlertTitle mt={4} mb={1} fontSize=\"lg\">\r\n        Application submitted!\r\n                </AlertTitle>\r\n    <AlertDescription maxWidth=\"sm\">\r\n        Thanks for submitting your application. Our team will get back to you soon.\r\n                </AlertDescription>\r\n</Alert>\r\n\r\nexport default RegisterHostPage;","import * as React from \"react\"\r\nimport {\r\n  ChakraProvider,\r\n  Box,\r\n  extendTheme,\r\n} from \"@chakra-ui/react\"\r\nimport { HashRouter, Route, Switch, BrowserRouter, Redirect, RouteProps, useLocation, useHistory } from 'react-router-dom'\r\nimport HomePage from \"./Pages/HomePage\";\r\nimport SingleRoom from \"./Pages/SingleRoom\";\r\nimport ErrorPage from \"./Pages/ErrorPage\";\r\nimport RoomsPage from \"./Pages/RoomsPage\";\r\nimport \"./App.css\";\r\nimport { mode } from \"@chakra-ui/theme-tools\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Footer from \"./Components/NavComponents/Footer\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { AuthContext, AuthProvider } from \"./Contexts/AuthContext\";\r\nimport ProfilePage from \"./Pages/ProfilePage\";\r\nimport Navbar from \"./Components/NavComponents/Navbar\";\r\nimport PublishRoomPage from \"./Pages/PublishRoomPage\";\r\nimport LoginForm from \"./Components/LoginForm\";\r\nimport LoadingBar from \"react-top-loading-bar\";\r\nimport PreviewRoomPage from \"./Pages/PreviewRoomPage\";\r\nimport RegisterHostPage from \"./Pages/RegisterHostPage\";\r\nimport { axAuth } from \"./API\";\r\n// theme.components.Button.baseStyle.borderRadius = \"0\";\r\n\r\nconst myTheme = extendTheme({\r\n  components: {\r\n    Button: {\r\n      defaultProps: {\r\n      }\r\n    },\r\n  }\r\n})\r\n\r\nconst queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n\r\n    }\r\n  }\r\n});\r\n\r\n\r\nexport const App = () => {\r\n  const loadingRef = React.useRef<any>(null);\r\n  // loading bar will appear when a request is sended\r\n  // and disappear when get a response\r\n  // REMINDER: this is a fastest way to indicate top loading bar,\r\n  // but not in a very elegant way, should put it in a context and update manually in component\r\n  React.useEffect(() => {\r\n    loadingRef.current.complete();\r\n\r\n    axAuth.interceptors.request.use((config) => {\r\n      loadingRef.current.staticStart();\r\n      return config;\r\n    }, (e) => {\r\n      loadingRef.current.complete();\r\n      return Promise.reject(e);\r\n    })\r\n\r\n    axAuth.interceptors.response.use((config) => {\r\n      loadingRef.current.complete();\r\n      return config;\r\n    }, (e) => {\r\n      loadingRef.current.complete();\r\n      return Promise.reject(e);\r\n    })\r\n\r\n  }, [])\r\n  return (\r\n    <HashRouter basename=\"/\">\r\n      <ChakraProvider theme={myTheme}>\r\n        <QueryClientProvider client={queryClient}>\r\n          <Box d=\"flex\" flexDir=\"column\" minH=\"100vh\">\r\n            <AuthProvider>\r\n              <ScrollToTop />\r\n              <Box flex=\"1\">\r\n                <LoadingBar color=\"#f11946\" ref={loadingRef}></LoadingBar>\r\n                <Switch>\r\n                  <Route exact path=\"/\" >\r\n                    <HomePage />\r\n                  </Route>\r\n\r\n                  <Route component={LoginPage} exact path=\"/login\"\r\n                    render={({ location }) =>\r\n                      <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\r\n                    }\r\n                  />\r\n                  <Box mx=\"10%\" mt=\"5\">\r\n                    <Navbar></Navbar>\r\n                    <Switch>\r\n                      <Route exact path=\"/rooms/:slug\" component={SingleRoom} />\r\n                      <Route exact path=\"/rooms\" component={RoomsPage} />\r\n                      <Route exact path=\"/room/preview\" component={PreviewRoomPage} />\r\n                      <AuthRoute exact path=\"/profile\" component={ProfilePage}></AuthRoute>\r\n                      <RoleRoute roles={[\"Owner\"]} exact path=\"/user/publish\" component={PublishRoomPage}></RoleRoute>roles={[\"Owner\"]}\r\n                      <AuthRoute exact path=\"/user/register-host\" component={RegisterHostPage}></AuthRoute>\r\n                      <RoleRoute roles={[\"Admin\"]} exact path=\"/admin\"></RoleRoute>\r\n                      <Route component={ErrorPage} />\r\n                    </Switch>\r\n                  </Box>\r\n                </Switch>\r\n              </Box>\r\n            </AuthProvider>\r\n            <Box h=\"200px\"></Box>\r\n            {/* <Box position=\"relative\" left={0} bottom={0}> */}\r\n            <Footer as=\"footer\" />\r\n            {/* </Box> */}\r\n          </Box>\r\n\r\n        </QueryClientProvider>\r\n      </ChakraProvider>\r\n    </HashRouter>\r\n  )\r\n};\r\n\r\ninterface LocationState {\r\n  from: {\r\n    pathname: string;\r\n  };\r\n}\r\n\r\nconst LoginPage = () => {\r\n  const location = useLocation<LocationState>();\r\n  const auth = React.useContext(AuthContext);\r\n\r\n  let { from } = location.state || { from: { pathname: \"/\" } };\r\n  if (auth.user) return <Redirect to={from}></Redirect>\r\n\r\n  return (\r\n    <Box mx=\"20%\" mt=\"10\" flex=\"0\">\r\n      <Navbar />\r\n      <LoginForm isRegistering={false}></LoginForm>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst AuthRoute: React.FC<RouteProps> = ({ children, ...rest }) => {\r\n  let auth = React.useContext(AuthContext);\r\n  if (auth.user) return (<Route {...rest}>{children}</Route>)\r\n\r\n  else return (<Route {...rest}>\r\n    <Redirect to={{\r\n      pathname: \"/login\",\r\n      state: {\r\n        from: rest.path\r\n      }\r\n    }} />\r\n  </Route>)\r\n}\r\n\r\ntype RoleRouteProps = {\r\n  roles: AppRole[];\r\n}\r\n\r\nconst RoleRoute = (props: RoleRouteProps & RouteProps) => {\r\n  const { roles, children, ...rest } = props;\r\n  const auth = React.useContext(AuthContext);\r\n\r\n  if (!auth.user) return (<Route {...rest}>\r\n    <Redirect to={{\r\n      pathname: \"/login\",\r\n      state: {\r\n        from: rest.path\r\n      }\r\n    }} />\r\n  </Route>)\r\n\r\n  const ifContainsAll = (haystack?: string[] | string, needles?: string[]) => {\r\n    if (!haystack) return false;\r\n    if (!needles) return true;\r\n\r\n    for (const n of needles) {\r\n      if (!haystack.includes(n)) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  if (ifContainsAll(auth.user?.roles, roles)) return (<Route {...rest}>{children}</Route>)\r\n  else return (\r\n    <Route {...rest}>\r\n      <Redirect to={{\r\n        pathname: \"/error\",\r\n        state: {\r\n          message: \"You are not authorized\"\r\n        }\r\n      }}></Redirect>\r\n    </Route>\r\n  )\r\n}\r\n\r\nconst ScrollToTop = () => {\r\n  const { pathname } = useLocation();\r\n  React.useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname])\r\n\r\n  return null;\r\n}\r\n","import { ColorModeScript, theme } from \"@chakra-ui/react\"\r\nimport * as React from \"react\";\r\nimport ReactDOM from \"react-dom\"\r\nimport { App } from \"./App\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ColorModeScript initialColorMode={theme.config.initialColorMode} />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n)"],"sourceRoot":""}