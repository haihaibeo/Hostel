{"version":3,"sources":["API.ts","Components/HomeComponents/PropertyTypeList.tsx","Components/NavComponents/PickRangeDay.tsx","Components/NavComponents/PopDetail.tsx","Components/NavComponents/SearchBar.tsx","Images/HomeBG.webp","ColorModeSwitcher.tsx","logo.svg","Logo.tsx","Contexts/AuthContext.tsx","Components/LoginForm.tsx","Components/NavComponents/Navbar.tsx","Pages/HomePage.tsx","Components/ReservationForm.tsx","Components/SingleRoomComponents/MyRoomBadge.tsx","Pages/SingleRoom.tsx","Pages/ErrorPage.tsx","Components/FilterComponents/RoomCard.tsx","Components/FilterComponents/RoomCardList.tsx","Pages/RoomsPage.tsx","Components/NavComponents/Footer.tsx","Pages/ProfilePage.tsx","Pages/PublishRoomPage.tsx","Pages/PreviewRoomPage.tsx","Pages/RegisterHostPage.tsx","App.tsx","index.tsx"],"names":["API_URL","axAuth","axios","create","axImageUpload","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","Promise","reject","postReview","data","url","method","postRoom","postReservation","bookInfo","JSON","stringify","roomId","bookFromDate","bookToDate","guest","children","authenticate","req","post","email","password","register","confirmPassword","fetchPropertiesView","typeId","query","a","resolve","setTimeout","console","log","get","params","city","from","to","guestNum","childrenNum","fetchCities","fetch","res","json","fetchPropertyTypes","fetchPropertyById","id","fetchUserReservation","fetchReviewsForProperty","propId","propertyId","deleteReservation","resId","delete","toggleLike","settings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","swipeToSlide","responsive","breakpoint","PropertyType","type","history","useHistory","alignItems","p","onClick","push","pathname","state","hasArrow","placement","aria-label","label","description","openDelay","maxW","maxH","minH","width","height","src","thumbnailImg","objectFit","mt","fontWeight","as","lineHeight","isTruncated","propertyType","color","fontSize","count","PropertyTypeList","useQuery","staleTime","isError","isFetching","map","d","key","getDatesBetween","Date","now","fromDate","toDate","datesBtw","start","setDate","getDate","getDateCheckOutOnly","schedules","reservedDates","r","getNextPossibleDate","day","nextDay","undefined","forEach","rFrom","defaultDate","enteredTo","PickRangeDay","props","updateDate","boxProps","toast","useToast","React","useState","setState","disabled","before","disabledDates","i","length","dayOff","getDisabledDates","disabledDays","setDisabledDays","useEffect","isSelectingFirstDay","isBeforeFirstDay","DateUtils","isDayBefore","handleResetClick","selected","modifiers","end","checkoutOnly","monthNum","useBreakpointValue","base","md","flexDir","overflow","alignSelf","numberOfMonths","fromMonth","onDayClick","today","status","duration","s","after","onDayMouseEnter","selectedDays","justifyContent","toLocaleDateString","PopDetail","updatePeople","maxGuest","style","backdropFilter","align","spacing","mr","border","borderColor","variant","borderRadius","mx","isDisabled","SearchBar","cities","isLoading","form","search","updateSearch","display","lg","pointerEvents","list","placeholder","size","onChange","e","target","value","c","cityName","closeOnBlur","w","_focusVisible","px","flexWrap","bgColor","useColorModeValue","bg","adult","minW","ml","onClickSearch","ColorModeSwitcher","toggleColorMode","useColorMode","text","SwitchIcon","FaMoon","FaSun","marginLeft","icon","spin","keyframes","Logo","forwardRef","ref","animation","usePrefersReducedMotion","img","boxSize","logo","AuthContext","createContext","AuthProvider","setIsLoading","user","setUser","setToken","useQueryClient","tokenStorage","validateToken","then","logoutAsync","decodedUser","jwtDecode","name","roles","mutateLogin","useMutation","onSuccess","setItem","onError","message","onSettled","mutateRegister","messages","msg","removeItem","title","isClosable","loginAsync","mutate","registerAsync","Provider","updateToken","LoginForm","initRef","fromUrl","isRegistering","remember","loginForm","setLoginForm","emailError","setEmailError","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","test","validateEmail","confirmedPassword","authContext","useContext","isInvalid","htmlFor","isRequired","trim","my","minLength","in","checked","rounded","replace","textStyle","Navbar","auth","loginFormModal","useDisclosure","useRef","setIsRegistering","becomehostColor","useLocation","marginBottom","sm","onOpen","isOpen","onClose","motionPreset","isCentered","initialFocusRef","pb","Button","rightIcon","RouterLink","includes","HomePage","setSearch","background","BG","pt","fontFamily","textShadow","mb","ReactLink","FloatingForm","room","feeCollapse","nightCount","setNightCount","checkPricing","fetchPricing","reservMutation","err","handleCheckout","price","toDateString","alignContent","formattedPrice","fontStyle","Array","fill","_","Math","round","totalStar","totalReview","colorRendering","borderTopLeftRadius","borderTopRightRadius","daysOff","borderBottomRadius","colorScheme","textDecoration","pricePerNight","cleaningFee","serviceFee","discountPercent","discount","totalCost","defaultRoomBadges","MyRoomBadge","setIcon","badge","setBadge","foundBadge","find","b","RiUserStarLine","RiStarLine","m","ReviewDisplay","fetchReviews","retry","reviews","starCount","gridGap","toPrecision","review","reviewId","testReview","userId","profileImageUrl","comment","timeCreated","timeUpdated","ReviewComment","flex","badges","defaultRoom","thumbnailUrl","images","thumbnailAlt","introduction","location","services","roomBadges","defaultOwner","SingleRoom","initRoom","setRoom","setBookInfo","setOwner","didLike","setDidLike","slug","useParams","rs","liked","bi","mutateLike","leftIcon","gap","h","templateRows","templateColumns","slice","image","colSpan","rowSpan","loading","boxShadow","top","float","position","zIndex","borderWidth","ownerInfo","letterSpacing","textTransform","cursor","alert","ErrorPage","flexDirection","textAlign","maxWidth","RoomCard","isSaved","LinkReact","fit","fallback","alt","transition","_hover","transform","textOverflow","substring","justifySelf","RoomCardList","rooms","columns","index","QueryTag","tagProps","RoomsPage","URLSearchParams","searchBoxColor","setType","queryKeys","refetch","remove","Copyright","getFullYear","openSocio","window","open","focus","SocialMediaLinks","href","Footer","role","py","divider","direction","ReviewModal","modalProps","starHover","setStarHover","starReview","setStarReview","setComment","starColor","mutateReview","_focus","onMouseOver","onMouseLeave","reviewComment","reservationId","Reservations","boxprops","reviewModal","propIdReview","setPropIdReview","deleteRsvMutate","errors","gridTemplateColumns","total","createdAt","reservationStatus","paymentStatus","property","toLowerCase","orientation","UserLikesProperties","refetchOnMount","Notifications","ProfilePage","view","FaUserShield","ServiceDisplay","pr","opacity","isOn","isChecked","toggle","PublishRoomPage","countries","setCountries","cityId","countryId","deleteHash","propTypeId","introdution","refundPercent","number","streetName","breakfast","kitchen","parking","pet","wifi","basePrice","indexes","Set","has","countryName","add","getUniqeCountries","resCities","resTypes","publish","handleImagesInput","files","formData","FormData","append","catch","delHash","required","rt","rows","filter","ct","addressDesc","multiple","accept","minChildWidth","spacingX","spacingY","min","max","step","percent","parseInt","preventDefault","handlePublish","PreviewRoomPage","parse","SuccessAlert","RegisterHostPage","handleRegisterClick","justifyItems","myTheme","extendTheme","initialColorMode","components","defaultProps","queryClient","QueryClient","defaultOptions","queries","App","loadingRef","current","complete","staticStart","basename","theme","QueryClientProvider","client","exact","path","component","LoginPage","render","AuthRoute","rest","RoleRoute","haystack","needles","n","ifContainsAll","ScrollToTop","scrollTo","ReactDOM","document","getElementById"],"mappings":"yZAGaA,EAA8E,mCAK9EC,EAASC,IAAMC,SACfC,EAAgBF,IAAMC,SAEnCF,EAAOI,aAAaC,QAAQC,KAAI,SAACC,GAC7B,IAAMC,EAAQC,aAAaC,QAAQ,SAGnC,OAFAH,EAAOI,QAAQC,cAAf,iBAAyCJ,GAElCD,KAGXP,EAAOI,aAAaS,SAASP,KAAI,SAACO,GAC9B,OAAOA,KACR,SAAUC,GAWT,OAAOC,QAAQC,OAAOF,EAAMD,aAazB,IAAMI,EAAa,SAACC,GACvB,OAAOlB,EAAO,CACVmB,IAAKpB,EAAU,gBACfqB,OAAQ,OACRF,KAAMA,KAIDG,EAAW,SAACH,GACrB,OAAOlB,EAAO,CACVoB,OAAQ,OACRD,IAAKpB,EAAU,mBACfmB,KAAMA,KAaDI,EAAkB,SAACC,GAAD,OAA2BvB,EAAO,CAC7DmB,IAAKpB,EAAU,oBACfqB,OAAQ,OACRF,KAAMM,KAAKC,UAAU,CACjB,WAAcF,EAASG,OACvB,SAAaH,EAASI,aACtB,OAAWJ,EAASK,WACpB,SAAYL,EAASM,MACrB,YAAgBN,EAASO,WAE7BnB,QAAS,CACL,eAAgB,uBASXoB,EAAe,SAACC,GACzB,OAAOhC,EAAOiC,KAAmBlC,EAAU,yBAA0B,CAC7D,MAASiC,EAAIE,MACb,SAAYF,EAAIG,YAMfC,EAAW,SAACJ,GACrB,OAAO/B,IAAMgC,KAAmBlC,EAAU,0BAA2B,CACjE,MAASiC,EAAIE,MACb,SAAYF,EAAIG,SAChB,gBAAmBH,EAAIK,mBAIlBC,EAAmB,uCAAG,WAAOC,EAA4BC,GAAnC,SAAAC,EAAA,sEACzB,IAAI1B,SAAQ,SAAA2B,GAAO,OAAIC,WAAWD,EAAS,QADlB,+BAG/BE,QAAQC,IAAIL,GAHmB,kBAIxBvC,IAAM6C,IAAgB/C,EAJE,kBAIY,CACvCgD,OAAQ,CACJR,OAASA,EACTS,KAAMR,EAAMQ,KACZC,KAAMT,EAAMS,KACZC,GAAIV,EAAMU,GACVC,SAAWX,EAAMW,SACjBC,YAAaZ,EAAMY,gBAXI,2CAAH,wDAgBnBC,EAAW,uCAAG,8BAAAZ,EAAA,sEAOLa,MAAMvD,EAAU,eAPX,cAOjBwD,EAPiB,OAQjBrC,EAAOqC,EAAIC,OARM,kBAShBtC,GATgB,2CAAH,qDAYXuC,EAAkB,uCAAG,8BAAAhB,EAAA,sEACZa,MAAMvD,EAAU,sBADJ,cACxBwD,EADwB,gBAESA,EAAIC,OAFb,cAExBtC,EAFwB,yBAGvBA,GAHuB,2CAAH,qDAMlBwC,EAAiB,uCAAG,WAAOC,GAAP,SAAAlB,EAAA,+EACtBzC,EAAO8C,IAAU/C,EAAU,mBAAqB4D,IAD1B,2CAAH,sDAQjBC,EAAoB,uCAAG,sBAAAnB,EAAA,+EACzBzC,EAAO8C,IAA2B/C,EAAU,2BADnB,2CAAH,qDAiBpB8D,EAAuB,uCAAG,WAAOC,GAAP,SAAArB,EAAA,+EAC5BzC,EAAO8C,IAAc/C,EAAO,eAAmB,CAClDgD,OAAQ,CACJgB,WAAYD,MAHe,2CAAH,sDAQvBE,EAAiB,uCAAG,WAAOC,GAAP,SAAAxB,EAAA,+EACtBzC,EAAOkE,OAAOnE,EAAU,qBAAuBkE,IADzB,2CAAH,sDAajBE,EAAa,SAAC,GAAsC,IAArCzC,EAAoC,EAApCA,OAAQlB,EAA4B,EAA5BA,MAChC,OAAOR,EAAOiC,KAAP,UAAmClC,EAAnC,sBAAwD2B,GAAS,GAAG,CACvEf,QAAQ,CACJC,cAAc,UAAD,OAAYJ,OCpLjC4D,EAAqB,CACrBC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,aAAc,EACdC,cAAc,EACdC,WAAY,CACR,CACIC,WAAY,KACZT,SAAU,CACNI,aAAc,EACdC,eAAgB,EAChBH,UAAU,EACVD,MAAM,IAGd,CACIQ,WAAY,IACZT,SAAU,CACNI,aAAc,EACdC,eAAgB,EAChBC,aAAc,IAGtB,CACIG,WAAY,IACZT,SAAU,CACNI,aAAc,EACdC,eAAgB,MA6B1BK,EAA4C,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAC3CC,GADgE,EAAflD,SACvCmD,eAWhB,OACI,eAAC,IAAD,CAAQC,WAAW,QAAQC,EAAE,IAA7B,UACI,cAAC,IAAD,CAAYC,QAXQ,WACxBJ,EAAQK,KAAK,CACTC,SAAU,SACVC,MAAO,CACHR,KAAMA,MAOV,SACI,cAAC,IAAD,CAASS,UAAQ,EAACC,UAAU,MAAMC,aAAY,WAAYC,MAAOZ,EAAKa,YAAaC,UAAW,IAA9F,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAKC,KAAK,KAAKC,KAAK,KAAKC,KAAK,QAA9B,SACI,cAAC,IAAD,CAAOC,MAAM,UAAUC,OAAO,UAAUC,IAAKpB,EAAKqB,aAAcC,UAAU,YAG9E,cAAC,IAAD,CACIC,GAAG,IACHC,WAAW,WACXC,GAAG,KACHC,WAAW,QACXC,aAAW,EALf,SAOK3B,EAAK4B,sBAKtB,cAAC,IAAD,CAAKC,MAAM,WAAWC,SAAS,KAA/B,SACK9B,EAAK+B,MAAQ,IAAM/B,EAAK4B,mBAM1BI,EA/DU,WAAO,IAAD,EACWC,YAA+C,iBAAkBvD,EAAoB,CACvHwD,UAAW,MADP/F,EADmB,EACnBA,KAAMgG,EADa,EACbA,QAMd,OAP2B,EACJC,YAIPvE,QAAQC,IAAI,mBAExBqE,EAAgB,cAAC,IAAD,gCAEhB,8BACI,cAAC,IAAD,2BAAY9C,GAAZ,oBACKlD,QADL,IACKA,OADL,EACKA,EAAMkG,KAAI,SAACC,EAAGC,GAAJ,OAAY,cAAC,EAAD,CAAcvC,KAAMsC,GAAQC,Y,kJCtBtDC,I,OA5BC,IAAIC,KAAKA,KAAKC,OA4BG,SAACC,EAAkBC,GAC9C,IAAM1E,EAAO,IAAIuE,KAAKE,GAChBxE,EAAK,IAAIsE,KAAKG,GAChBC,EAAmB,GACnBC,EAAQ5E,EAGZ,IAFA4E,EAAMC,QAAQD,EAAME,UAAY,GAEzBF,EAAME,UAAY7E,EAAG6E,WACxBH,EAASvC,KAAK,IAAImC,KAAKK,IACvBA,EAAMC,QAAQD,EAAME,UAAY,GAEpC,OAAOH,IAgBLI,GAAsB,SAACC,GAAkC,IAAD,EAC1D,cAAOA,QAAP,IAAOA,GAAP,UAAOA,EAAWC,qBAAlB,aAAO,EAA0Bd,KAAI,SAAAe,GAAC,OAAI,IAAIX,KAAKW,EAAET,cAGnDU,GAAsB,SAACC,EAAWJ,GACpC,IAAIK,OAA4BC,EAYhC,OAVA,OAAIN,QAAJ,IAAIA,OAAJ,EAAIA,EAAWC,gBACXD,EAAUC,cAAcM,SAAQ,SAAAL,GAC5B,IAAMM,EAAQ,IAAIjB,KAAKW,EAAET,UAErBe,EAAQJ,IACHC,EACIG,GAASH,IAASA,EAAUG,GADvBH,EAAUG,MAKhCH,IAAYD,EAAYC,EACrB,MAgBLI,GAAiC,CACnCzF,UAAMsF,EACNrF,QAAIqF,EACJI,eAAWJ,GAsIAK,GAnI8C,SAACC,GAAW,IAC7D5F,EAAiD4F,EAAjD5F,KAAMC,EAA2C2F,EAA3C3F,GAAI4F,EAAuCD,EAAvCC,WAAYb,EAA2BY,EAA3BZ,UAAcc,EADwB,YACXF,EADW,wCAG9DG,EAAQC,eAHsD,EAI1CC,IAAMC,SAA4B,CAAElG,KAAMA,EAAMC,GAAIA,IAJV,mBAI7DqC,EAJ6D,KAItD6D,EAJsD,KAM9DC,EAAQ,CACV,CACIC,OAAQ,IAAI9B,KAAKA,KAAKC,SAFhB,oBA3DO,SAACQ,GACtB,IAAIsB,EAAwB,GAE5B,UAAItB,QAAJ,IAAIA,OAAJ,EAAIA,EAAWC,cACX,IAAK,IAAIsB,EAAI,EAAGA,EAAIvB,EAAUC,cAAcuB,OAAQD,IAChDD,EAAclE,KAAd,MAAAkE,EAAa,aAAShC,GAAgBU,EAAUC,cAAcsB,GAAG9B,SAAUO,EAAUC,cAAcsB,GAAG7B,UAK9G,OADA,OAAIM,QAAJ,IAAIA,OAAJ,EAAIA,EAAWyB,SAAQH,EAAclE,KAAd,MAAAkE,EAAa,aAAStB,EAAUyB,SAChDH,EAqDAI,CAAiB1B,KAV4C,EAa5BiB,IAAMC,SAASE,GAba,mBAa7DO,EAb6D,KAa/CC,EAb+C,KAepEX,IAAMY,WAAU,YACPvE,EAAMtC,MAAQsC,EAAMrC,KAASqC,EAAMtC,OAASsC,EAAMrC,KACnD4F,EAAWvD,EAAMtC,KAAMsC,EAAMrC,MAGlC,CAACqC,EAAMtC,KAAMsC,EAAMrC,KAEtB,IAAM6G,EAAsB,SAAC1B,EAAWpF,EAAaC,GACjD,IAAM8G,EAAmB/G,GAAQgH,aAAUC,YAAY7B,EAAKpF,GAE5D,OAAQA,GAAQ+G,GADQ/G,GAAQC,GA8D9BiH,EAAmB,WACrBf,EAASV,KAGP0B,EAAW,CAAC7E,EAAMtC,KAAM,CAAEA,KAAMsC,EAAMtC,KAAMC,GAAIqC,EAAMoD,YAGtD0B,EAAY,CACdxC,MAAOtC,EAAMtC,KACbqH,IAAK/E,EAAMoD,UACX4B,aAAcvC,GAAoBC,IAGhCuC,EAAWC,aAAmB,CAAEC,KAAM,EAAGC,GAAI,IAEnD,OACI,eAAC,IAAD,yBAAKtD,EAAE,OAAOuD,QAAQ,UAAa7B,GAAnC,IAA6C8B,SAAS,OAAtD,UACI,cAAC,IAAD,CAAKC,UAAU,SAAf,SACI,cAAC,KAAD,CACIC,eAAgBP,EAChBQ,UAAWzF,EAAMtC,KACjBoH,UAAWA,EACXY,WAtEO,SAAC5C,EAAWgC,GAC/B,IAAIA,EAAUhB,SAAd,CAEA,IAAM6B,EAAQ,IAAI1D,KAAKA,KAAKC,OAC5B,KAAIY,EAAM6C,GAAV,CAJkD,IAK1CjI,EAAasC,EAAbtC,KAAMC,EAAOqC,EAAPrC,GACd,GAAID,GAAQC,GAAMmF,GAAOpF,GAAQoF,GAAOnF,EACpCiH,SAIJ,GAAIJ,EAAoB1B,EAAKpF,EAAMC,GAAK,CACpC,GAAImH,EAAUE,aAMV,YALAvB,EAAM,CACFmC,OAAQ,OACRvF,YAAa,kBACbwF,SAAU,MAIlBvB,GAAgB,SAACwB,GAAD,mBAAC,eAAYA,GAAb,IAAgB/B,OAAQjB,EAAKiD,MAAOlD,GAAoBC,EAAKJ,QAE7EmB,EAAS,CACLnG,KAAMoF,EACNnF,QAAIqF,EACJI,eAAWJ,QAId,CAAC,IAAD,EAGD,GAFAsB,EAAgBR,IAEZ,UAAA9D,EAAMtC,YAAN,eAAY8E,aAAcM,EAAIN,UAM9B,YALAqB,EAAS,CACLnG,UAAMsF,EACNrF,QAAIqF,EACJI,eAAWJ,IAInBa,GAAS,SAAAiC,GAAC,kCACHA,GADG,IAENnI,GAAImF,EACJM,UAAWN,WA4BPuB,aAAcA,EACd2B,gBAlFY,SAAClD,GAAe,IAChCpF,EAAasC,EAAbtC,KAAMC,EAAOqC,EAAPrC,GACT6G,EAAoB1B,EAAKpF,EAAMC,IAChCkG,GAAS,SAAAiC,GAAC,kCACHA,GADG,IAEN1C,UAAWN,QA8EPmD,aAAcpB,MAGtB,eAAC,IAAD,CAAMqB,eAAe,SAASvG,WAAW,SAAzC,WACMK,EAAMtC,OAASsC,EAAMrC,IAAM,+BAC5BqC,EAAMtC,OAASsC,EAAMrC,IAAM,8BAC3BqC,EAAMtC,MACHsC,EAAMrC,IADT,wBAEoBqC,EAAMtC,KAAKyI,qBAF/B,gCAGCnG,EAAMrC,GAAGwI,sBAAwB,IAClCnG,EAAMtC,MAAQsC,EAAMrC,IACjB,cAAC,KAAD,CAAQkC,QAAS+E,EAAjB,2B,UC/KLwB,GAnC6B,SAAC,GAAiD,IAA/C9J,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,SAAU8J,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SAC1E,OACI,cAAC,IAAD,CAAK1G,EAAE,IAAI2G,MAAO,CAAEC,eAAgB,aAApC,SACI,eAAC,IAAD,CAAQC,MAAM,UAAUC,QAAS,EAAjC,UACI,eAAC,IAAD,CAAM/G,WAAW,SAAjB,UACI,cAAC,KAAD,CAAMgH,GAAG,OAAOrF,SAAS,KAAzB,oBACA,cAAC,IAAD,CAAQsF,OAAO,MAAMC,YAAY,aAAjC,SACI,cAAC,KAAD,CAAQC,QAAQ,QAAQC,aAAa,IAAIjD,SAAUxH,GAAS,EACxDuD,QAAS,kBAAMwG,IAAe/J,EAAOC,IADzC,iBAGJ,cAAC,KAAD,CAAMyK,GAAG,IAAI1F,SAAS,KAAtB,SAA4BhF,IAC5B,cAAC,IAAD,CAAQsK,OAAO,MAAMC,YAAY,aAAjC,SACI,cAAC,KAAD,CAAQC,QAAQ,QAAQC,aAAa,IACjCjD,cAAuBd,IAAbsD,GAA0BhK,GAASgK,EAC7CzG,QAAS,kBAAMwG,IAAe/J,EAAOC,IAFzC,oBAKR,eAAC,IAAD,CAAMoD,WAAW,SAAjB,UACI,cAAC,KAAD,CAAMgH,GAAG,OAAOrF,SAAS,KAAzB,sBACA,cAAC,IAAD,CAAQsF,OAAO,MAAMC,YAAY,aAAjC,SACI,cAAC,KAAD,CAAQC,QAAQ,QAAQC,aAAa,IAAIjD,SAAUvH,GAAY,EAC3DsD,QAAS,kBAAMwG,EAAa/J,IAASC,IADzC,iBAGJ,cAAC,KAAD,CAAMyK,GAAG,IAAI1F,SAAS,KAAtB,SAA4B/E,IAC5B,cAAC,IAAD,CAAQqK,OAAO,MAAMC,YAAY,aAAjC,SACI,cAAC,KAAD,CAAQC,QAAQ,QAAQC,aAAa,IACjCE,WAAY1K,GAAY,EACxBsD,QAAS,kBAAMwG,EAAa/J,IAASC,IAFzC,0BC6GT2K,GApHG,SAAC5D,GAA2B,IAAD,MACG7B,YAA2C,SAAU3D,EAAa,CAC1G4D,UAAW,MADDyF,EAD2B,EACjCxL,KAAcyL,EADmB,EACnBA,UAGhB3H,GAJmC,EACRmG,OAGjBlG,eAEA2H,EAAS/D,EAAjBgE,OAER3D,IAAMY,WAAU,WACRjB,EAAMiE,eACNlK,QAAQC,IAAI,eACZgG,EAAMiE,aAAaF,MAExB,CAACA,IA0CJ,OACI,cAAC,IAAD,CAAKzH,EAAE,IAAIgH,OAAO,MAAMC,YAAY,aAAaN,MAAO,CAAEC,eAAgB,aAA1E,SACI,eAAC,IAAD,CAAMgB,QAAS,CAAEC,GAAI,QAAU9H,WAAW,SAA1C,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAkB+H,cAAc,OAAOnL,SAAU,cAAC,KAAD,MACjD,cAAC,KAAD,CAAOoL,KAAK,kBAAkBC,YAAY,OAAOC,KAAK,KAAKd,aAAa,IACpEe,SAAU,SAACC,GAAD,OAxBVtK,EAwB4BsK,EAAEC,OAAOC,WAvBjD3E,EAAMiE,eACD,OAALjE,QAAK,IAALA,KAAOiE,aAAP,2BACOjE,EAAMgE,QADb,IAEI7J,KAAMA,OAJC,IAACA,GAyBAwK,MAAO3E,EAAMgE,OAAO7J,OAEvB2J,EAAY,cAAC,IAAD,CAAmB7K,SAAU,cAAC,KAAD,CAASgJ,UAAU,aACzD,0BAAUnH,GAAG,kBAAb,gBACK+I,QADL,IACKA,OADL,EACKA,EAAQtF,KAAI,SAAAqG,GACT,OAAO,wBAAmBD,MAAOC,EAAEC,UAAfD,EAAE9J,YAKtC,eAAC,KAAD,CAASgK,aAAa,EAAtB,UACI,cAAC,KAAD,UACI,eAAC,KAAD,CAAQtB,QAAQ,UAAUuB,EAAG,CAAC,OAAQ,OAAQ,OAAQ,QAClDR,KAAK,KAAKS,cAAe,CAAE1B,OAAQ,KAAOG,aAAa,IAAIwB,GAAG,IADlE,WAES,OAAJlB,QAAI,IAAJA,GAAA,UAAAA,EAAM3J,YAAN,eAAYyI,uBAAwB,OAFzC,OAEwD,OAAJkB,QAAI,IAAJA,GAAA,UAAAA,EAAM1J,UAAN,eAAUwI,uBAAwB,UAG1F,cAAC,KAAD,UACI,cAAC,KAAD,CACIqC,SAAS,SAAS7I,WAAW,SAAS4G,MAAO,CAAEC,eAAgB,aAC/D6B,EAAE,OAAOtB,aAAa,IACtB0B,QAASC,aAAkB,WAAY,YAH3C,SAKI,cAAC,GAAD,CAAcnF,WApEnB,SAAC7F,EAAaC,GACzB2F,EAAMiE,eACD,OAALjE,QAAK,IAALA,KAAOiE,aAAP,2BACOjE,EAAMgE,QADb,IAEI5J,KAAMA,EACNC,GAAIA,gBAmEJ,eAAC,KAAD,WACI,cAAC,KAAD,UACI,cAAC,KAAD,CAAQmJ,QAAQ,UAAUuB,EAAG,CAAC,OAAQ,OAAQ,OAAQ,QAASR,KAAK,KAChEd,aAAa,IAAIwB,GAAG,IADxB,SAGKlB,EAAKzJ,SAAW,aAAeyJ,EAAKxJ,YAAc,gBAG3D,cAAC,KAAD,UACI,cAAC,KAAD,CAAgB2K,SAAS,SAASzB,aAAa,IAAI4B,GAAG,UAClDF,QAASC,aAAkB,WAAY,YAD3C,SAGI,cAAC,GAAD,CAAWrC,aA1Ed,SAACuC,EAAerM,GAC7B+G,EAAMiE,eACD,OAALjE,QAAK,IAALA,KAAOiE,aAAP,2BACOjE,EAAMgE,QADb,IAEI1J,SAAUgL,EACV/K,YAAatB,OAqEsCD,MAAO+K,EAAKzJ,SAAWrB,SAAU8K,EAAKxJ,qBAIzF,cAAC,KAAD,CAAQ0H,UAAU,SAASsC,KAAK,KAAKgB,KAAK,QAAQC,GAAI,CAAC,EAAG,EAAG,EAAG,GAC5DjJ,QAASyD,EAAMyF,cAAgBzF,EAAMyF,cA5D3B,WACtBtJ,EAAQK,KAAK,CACTC,SAAU,SACVC,MAAO,CACHsH,OAAQhE,EAAMgE,WAyDVF,UAAW9D,EAAM8D,UACjBrG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAIsH,EAAG,CAAC,OAAQ,OAAQ,OAAQ,OAAQtB,aAAa,IAHvE,0B,UCxID,OAA0B,oC,qECW5BiC,GAAsD,SAAC1F,GAAW,IACrE2F,EAAoBC,eAApBD,gBACFE,EAAOT,aAAkB,OAAQ,SACjCU,EAAaV,aAAkBW,KAAQC,MAE7C,OACE,cAAC,KAAD,aACEzB,KAAK,KACLvG,SAAS,KACTwF,QAAQ,QACRzF,MAAM,UACNkI,WAAW,IACX1J,QAASoJ,EACTO,KAAM,cAACJ,EAAD,IACNjJ,aAAA,oBAAyBgJ,EAAzB,UACI7F,K,+CC1BK,OAA0B,iC,oJCUzC,IAAMmG,GAAOC,aAAH,MAKGC,GAAOC,cAA8B,SAACtG,EAAOuG,GACxD,IAEMC,EAFuBC,oBAGzB/G,EADkC,UAE/ByG,GAF+B,wBAItC,OAAO,cAAC,KAAOO,IAAR,aAAYF,UAAWA,EAAWG,QAAQ,OAAOrJ,IAAKsJ,GAAML,IAAKA,GAASvG,O,6BCAtE6G,GAAcxG,IAAMyG,cAAiC,IAErDC,GAAyB,SAAC,GAAkB,IAAhB9N,EAAe,EAAfA,SAAe,EAClBoH,IAAMC,UAAkB,GADN,mBAC7CwD,EAD6C,KAClCkD,EADkC,OAE5B3G,IAAMC,cAAmCZ,GAFb,mBAE7CuH,EAF6C,KAEvCC,EAFuC,OAG1B7G,IAAMC,SAAS1I,aAAaC,QAAQ,UAHV,mBAG7CF,EAH6C,KAGtCwP,EAHsC,KAO9ChH,GAFciH,eAENhH,gBAKdC,IAAMY,WAAU,WACZ,IAAMoG,EAAezP,aAAaC,QAAQ,SACtCwP,IT4JiB,SAAC1P,GAC1B,OAAO8C,MAAM,GAAD,OAAIvD,EAAJ,4BAAuC,CAC/CY,QAAS,CACLC,cAAc,UAAD,OAAYJ,MS9JzB2P,CAAcD,GAAcE,MAAK,SAAA7M,GAE7B,GADAX,QAAQC,IAAI,iBACO,MAAfU,EAAI4H,OAAgB,OAAOkF,EAAY,oBAE/CL,EAASE,MAEd,IAKHhH,IAAMY,WAAU,WACZ,GAAItJ,EAAO,CACP,IAAM8P,EAAcC,aAA4B/P,GAChDuP,EAAQ,CACJ7N,MAAOoO,EAAYpO,MACnBsO,KAAMF,EAAYE,KAClBC,MAAOH,EAAYG,MACnBjQ,MAAOA,OAGhB,CAACA,IAEJ,IAuBMkQ,EAAcC,aAA4D5O,EAAc,CAC1F6O,UAAW,SAACrN,GACRyM,EAASzM,EAAIrC,KAAKV,OAClBC,aAAaoQ,QAAQ,QAAStN,EAAIrC,KAAKV,OACvCwI,EAAM,CAAEpD,YAAa,yBAA0BuF,OAAQ,UAAWC,SAAU,OAEhF0F,QAAS,SAACvN,GAAUyF,EAAM,CAAEpD,YAAarC,EAAIrC,KAAK6P,QAAS5F,OAAQ,QAASC,SAAU,OACtF4F,UAAW,kBAAMnB,GAAa,MAG5BoB,EAAiBN,aAA+DvO,EAAU,CAC5FwO,UAAW,SAACrN,GAERyM,EAASzM,EAAIrC,KAAKV,OAClBC,aAAaoQ,QAAQ,QAAStN,EAAIrC,KAAKV,OACvCwI,EAAM,CAAEpD,YAAa,yBAA0BuF,OAAQ,UAAWC,SAAU,OAEhF0F,QAAS,SAACvN,GACNX,QAAQC,IAAIU,EAAIrC,MAChB,IAAK,IAAIsI,EAAI,EAAGA,EAAIjG,EAAIrC,KAAKgQ,SAASzH,OAAQD,IAC1CR,EAAM,CAAEpD,YAAarC,EAAIrC,KAAKgQ,SAAS1H,GAAI2B,OAAQ,QAASC,SAAU,OAG9E4F,UAAW,kBAAMnB,GAAa,MAG5BQ,EAAW,uCAAG,WAAOc,GAAP,SAAA1O,EAAA,sEACV,IAAI1B,SAAQ,SAAA2B,GAAO,OAAIC,WAAWD,EAAS,QADjC,cAEhBqN,OAAQxH,GACRyH,EAAS,MACTvP,aAAa2Q,WAAW,SACxBpI,EAAM,CACFqI,MAAOF,GAAY,2BACnBG,YAAY,EACZlG,SAAU,IACVD,OAAQ,YATI,SAWV,IAAIpK,SAAQ,SAAA2B,GAAO,OAAIC,WAAWD,EAAS,QAXjC,2CAAH,sDAcX6O,EAAU,uCAAG,WAAOlR,GAAP,SAAAoC,EAAA,6DACfoN,GAAa,GADE,SAET,IAAI9O,SAAQ,SAAA2B,GAAO,OAAIC,WAAWD,EAAS,QAFlC,OAGf,IACIgO,EAAYc,OAAOnR,GAEvB,MAAOiN,GACH1K,QAAQC,IAAIyK,GAJhB,QAOIuC,GAAa,GAVF,2CAAH,sDAcV4B,EAAa,uCAAG,WAAOpR,GAAP,SAAAoC,EAAA,6DAClBoN,GAAa,GADK,SAEZ,IAAI9O,SAAQ,SAAA2B,GAAO,OAAIC,WAAWD,EAAS,QAF/B,OAGlB,IACIuO,EAAeO,OAAOnR,GACxB,MAAOS,GACL8B,QAAQC,IAAI/B,GAHhB,QAMI+O,GAAa,GATC,2CAAH,sDAanB,OACI,cAACH,GAAYgC,SAAb,CAAsBlE,MAAO,CACzB+D,WAAYA,EACZlB,YAAaA,EACbsB,YA9FY,SAACnR,GACjBwP,EAASxP,IA8FLmM,UAAWA,EACXmD,KAAMA,EACN2B,cAAeA,GANnB,SAQK3P,K,iDCtIb,IA6Ge8P,GA7G6B,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cACvD/M,EAAUC,cADiE,EAG/CiE,IAAMC,SAAoB,CACxD6I,UAAU,EACVD,cAAeA,IAL8D,mBAG1EE,EAH0E,KAG/DC,EAH+D,OAQ7ChJ,IAAMC,UAAS,GAR8B,mBAQ1EgJ,EAR0E,KAQ9DC,EAR8D,OASvClJ,IAAMC,UAAS,GATwB,mBAS1EkJ,EAT0E,KAS3DC,EAT2D,OAUzBpJ,IAAMC,UAAS,GAVU,mBAU1EoJ,EAV0E,KAUpDC,EAVoD,KAqBjFtJ,IAAMY,WAAU,WATK,IAAC5H,EAA2BC,EAA3BD,EAUL+P,EAAU/P,MAVsBC,EAUf8P,EAAU9P,SA7BhD,SAAuBD,GACnB,QAAKA,GACM,4JACDuQ,KAAKvQ,GAiBPwQ,CAAcxQ,GACdkQ,GAAc,GACXA,GAAc,GAEjBE,EADa,KAAbnQ,KAQL,CAAC8P,EAAU/P,MAAO+P,EAAU9P,WAE/B+G,IAAMY,WAAU,WACRmI,EAAUF,eAAiBE,EAAUU,oBAAsBV,EAAU9P,UACrES,QAAQC,IAAIoP,EAAU9P,UACtBS,QAAQC,IAAIoP,EAAUU,mBAEtBH,GAAwB,GACxB5P,QAAQC,IAAI0P,IACTC,GAAwB,KAEhC,CAACP,EAAUU,kBAAmBV,EAAUF,cAAeE,EAAU9P,WAEpE,IAAMyQ,EAAc1J,IAAM2J,WAAWnD,IAmBrC,OACI,eAAC,KAAO9C,KAAR,CAAavF,EAAE,OAAOuD,QAAQ,SAA9B,UACI,eAAC,KAAD,CAAakI,UAAWX,EAAxB,UACI,cAAC,KAAD,CAAWY,QAAQ,QAAnB,mBACA,cAAC,KAAD,CAAO5F,YAAY,mBAAmBxJ,GAAG,QAAQmP,UAAWX,EAAY/C,IAAKyC,EAASxF,QAAQ,SAASe,KAAK,KAAKrI,KAAK,QAClHyI,MAAOyE,EAAU/P,MAAO8Q,YAAU,EAClC3F,SAAU,SAACC,GAAD,OAAO4E,GAAa,SAAA7G,GAAC,kCACxBA,GADwB,IAE3BnJ,MAAOoL,EAAEC,OAAOC,MAAMyF,eAE9B,cAAC,KAAD,UAAmB,yBAGvB,eAAC,KAAD,CAAaH,UAAWT,EAAxB,UACI,cAAC,KAAD,CAAWU,QAAQ,WAAWG,GAAG,IAAjC,sBACA,cAAC,KAAD,CAAO/F,YAAY,sBAAsBxJ,GAAG,WAAWmP,UAAWT,EAAehG,QAAQ,SAASe,KAAK,KAAKrI,KAAK,WAC7GyI,MAAOyE,EAAU9P,SAAUgR,UAAW,EAAGH,YAAU,EACnD3F,SAAU,SAACC,GAAD,OAAO4E,GAAa,SAAA7G,GAAC,kCACxBA,GADwB,IAE3BlJ,SAAUmL,EAAEC,OAAOC,iBAI/B,eAAC,KAAD,CAAU4F,GAAInB,EAAUF,cAAxB,UACI,eAAC,KAAD,CAAae,UAAWP,EAAxB,UACI,cAAC,KAAD,CAAWQ,QAAQ,mBAAmBG,GAAG,IAAzC,8BACA,cAAC,KAAD,CAAO/F,YAAY,wBAAwBxJ,GAAG,mBAAmBmP,UAAWP,EAAsBlG,QAAQ,SAASe,KAAK,KAAKrI,KAAK,WAC9HyI,MAAOyE,EAAUU,kBAAmBQ,UAAW,EAAGH,YAAU,EAC5D3F,SAAU,SAACC,GAAD,OAAO4E,GAAa,SAAA7G,GAAC,kCACxBA,GADwB,IAE3BsH,kBAAmBrF,EAAEC,OAAOC,iBAGxC,cAAC,KAAD,UAAmB,+BAGvB,cAAC,KAAD,CAAUJ,KAAK,KAAKiG,QAASpB,EAAUD,SAAU1L,GAAG,IAChD+G,SAAU,SAACC,GAAD,OAAO4E,GAAa,SAAA7G,GAAC,kCAAUA,GAAV,IAAa2G,SAAU1E,EAAEC,OAAO8F,cADnE,yBAKA,cAAC,KAAD,CAAQH,GAAG,IAAItF,EAAE,MAAM0F,QAAQ,OAAOvO,KAAK,SAAS+F,UAAU,SAASuG,MAAM,QACzE1E,UAAWiG,EAAYjG,UACvBH,WAAYyF,EAAUF,cAAgBI,GAAcE,GAAiBE,EAAuBJ,GAAcE,EAC1GjN,QAAU6M,EAAUF,cAxDT,WACnBa,EAAYnB,cAAc,CAAEvP,MAAO+P,EAAU/P,MAAOC,SAAU8P,EAAU9P,SAAUE,gBAAiB4P,EAAUU,oBACzGb,GAAS9M,EAAQuO,QAAQzB,IAPb,WAChBc,EAAYrB,WAAWU,GACnBH,GAAS9M,EAAQuO,QAAQzB,IAwDzB,SAII,cAAC,KAAD,MAGJ,cAAC,KAAD,CAAQzF,QAAQ,OAAOvB,UAAU,SAAS0I,UAAU,GAAGpO,QAAS,WAtDpE8M,GAAa,SAAC7G,GAAD,mBAAC,eACPA,GADM,IAET0G,eAAgB1G,EAAE0G,oBAoDlB,SAAsFE,EAAUF,cAA2C,oBAA3B,+BCxB7G0B,GAlGc,SAAC,GAAkB,IAAD,EAAZ5K,EAAY,oBACrC6K,EAAOxK,IAAM2J,WAAWnD,IACxBiE,EAAiBC,eACjB/B,EAAU3I,IAAM2K,OAAyB,MAHJ,EAID3K,IAAMC,UAAS,GAJd,mBAIpC4I,EAJoC,KAIrB+B,EAJqB,KAWrCC,GAJeC,cAAb1O,SACoB2I,aAAkB,WAAY,YAChCA,aAAkB,QAAS,SAE7BA,aAAkB,WAAY,aAEtD,OACI,cAAC,IAAD,yBAAKgG,aAAc,CAAC,OAAWpL,GAA/B,aACI,eAAC,IAAD,CAAM4C,eAAe,SAASvG,WAAW,SAAzC,UACI,cAAC,IAAD,CAAYhC,GAAG,IAAf,SACI,eAAC,IAAD,CAAQ+I,QAAS,EAAjB,UACI,cAAC,KAAD,UACI,cAACiD,GAAD,MAEJ,cAAC,KAAD,CAAS9B,KAAK,KAAKL,QAAS,CAAErC,KAAM,OAAQwJ,GAAI,SAAhD,iCAGR,cAAC,KAAD,IACA,eAAC,IAAD,CAAQjI,QAAS,EAAjB,UACI,cAAC,GAAD,SACe1D,IAAdmL,EAAK5D,KACF,qCACI,cAAC,KAAD,CAAQzD,QAAQ,QAAQjH,QAAS,WAAQuO,EAAeQ,SAAUL,GAAiB,IAAnF,mBACA,eAAC,KAAD,CAAOM,OAAQT,EAAeS,OAAQC,QAASV,EAAeU,QAASjH,KAAK,KAAKkH,aAAa,gBAAgBC,YAAU,EAACC,gBAAiB3C,EAA1I,UACI,cAAC,KAAD,IAEA,eAAC,KAAD,WACI,cAAC,KAAD,UAAcE,EAAgB,sBAAwB,UACtD,cAAC,KAAD,IACA,cAAC,KAAD,CAAW0C,GAAG,IAAd,SACI,cAAC,GAAD,CAAW5C,QAASA,EAASE,cAAeA,YAIxD,cAAC,KAAD,CAAQ1F,QAAQ,QAAQjH,QAAS,WAAQuO,EAAeQ,SAAUL,GAAiB,IAAnF,yBAEJ,mCACI,eAAC,KAAD,WACI,cAAC,KAAD,CAAYtN,GAAIkO,KAAQrI,QAAQ,QAAQsI,UAAW,cAAC,KAAD,IAAnD,SACKjB,EAAK5D,KAAKU,OAEf,eAAC,KAAD,WACI,eAAC,KAAD,CAAUhK,GAAIoO,IAAY1R,GAAG,sBAA7B,UACI,cAAC,IAAD,CAAKgJ,GAAI,IAAT,SAAc,cAAC,KAAD,MADlB,iBAIA,eAAC,KAAD,CAAU1F,GAAIoO,IAAY1R,GAAG,6BAA7B,UACI,cAAC,IAAD,CAAKgJ,GAAI,IAAT,SAAc,cAAC,KAAD,MADlB,uBAIA,eAAC,KAAD,CAAU1F,GAAIoO,IAAY1R,GAAG,8BAA7B,UACI,cAAC,IAAD,CAAKgJ,GAAG,IAAR,SAAY,cAAC,KAAD,MADhB,mBAIA,cAAC,KAAD,KACC,UAAAwH,EAAK5D,KAAKW,aAAV,eAAiBoE,SAAS,UACvB,qCACI,eAAC,KAAD,CAAUrO,GAAIoO,IAAY1R,GAAG,gBAA7B,UACI,cAAC,IAAD,CAAKgJ,GAAG,IAAR,SAAY,cAAC,KAAD,MADhB,wBAIA,eAAC,KAAD,CAAU1F,GAAIoO,IAAY1R,GAAG,gBAA7B,UACI,cAAC,IAAD,CAAKgJ,GAAG,IAAR,SAAY,cAAC,KAAD,MADhB,wBAMJ,eAAC,KAAD,CAAUgC,GAAI6F,EAAiBvN,GAAIoO,IAAY1R,GAAG,sBAAlD,UACI,cAAC,IAAD,CAAKgJ,GAAG,IAAR,SAAY,cAAC,KAAD,MADhB,mBAKJ,eAAC,KAAD,CAAU1F,GAAIoO,IAAY1R,GAAG,IAA7B,UACI,cAAC,IAAD,CAAKgJ,GAAG,IAAR,SAAY,cAAC,KAAD,MADhB,aAIA,cAAC,KAAD,IACA,eAAC,KAAD,CAAU9G,QAAS,kBAAMsO,EAAKrD,eAA9B,UACI,cAAC,IAAD,CAAKnE,GAAG,IAAR,SAAY,cAAC,KAAD,MADhB,+BCnDrB4I,GAhCE,WACb,IADmB,EAES5L,IAAMC,SAAsB,CAAE/F,YAAa,EAAGD,SAAU,IAFjE,mBAEZ0J,EAFY,KAEJkI,EAFI,KAOnB,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAK/O,KAAM,CAAC,OAAQ,OAAQ,QAAS8F,MAAO,CAAEkJ,WAAY,QAAUC,GAAK,mBAAsBrO,MAAM,QAArG,SACI,eAAC,IAAD,CAAKkH,GATN,MAScoH,GAAG,IAAhB,UACI,cAAC,GAAD,IACA,cAAC,KAAD,UACI,cAAC,GAAD,CAAWrI,OAAQA,EAAQC,aAV1B,SAACD,GAClBkI,EAAUlI,QAWE,cAAC,IAAD,CAAKrG,GAAG,KAAK2O,WAAW,OAAOC,WAAW,mBAAmBxO,MAAM,iBAAiBL,WAAW,OAAOM,SAAU,CAAC,MAAO,MAAO,MAAO,OAClIP,GAAI,CAAC,MAAO,OAAQ,OAAQ,QADhC,iCAIR,eAAC,IAAD,CAAKwH,GAlBF,MAkBUxH,GAAG,KAAhB,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAKE,GAAG,KAAKD,WAAW,OAAOM,SAAS,MAAMwO,GAAG,IAAjD,2BAGA,cAAC,KAAD,IACA,eAAC,IAAD,CAAM7O,GAAI8O,IAAWpS,GAAI,SAAUmE,EAAG,OAAQuD,QAAQ,MAAM1F,WAAW,SAAvE,4BAA+F,cAAC,IAAD,CAAKmJ,GAAG,IAAR,SAAY,cAAC,KAAD,YAE/G,cAAC,EAAD,W,oBCoJDkH,GAxKmC,SAAC,GAAkD,IAAD,MAA/CC,EAA+C,EAA/CA,KAAMjU,EAAyC,EAAzCA,SAAUuH,EAA+B,EAA/BA,WAAY8C,EAAmB,EAAnBA,aACvE8H,EAAOxK,IAAM2J,WAAWnD,IACxB1K,EAAUC,cACVwQ,EAAc7B,eAH4E,EAI5D1K,IAAMC,SAAiB,GAJqC,mBAIzFuM,EAJyF,KAI7EC,EAJ6E,KAK1F3M,EAAQC,eAER2M,EAAe5O,YAAS,CAAC,UAAWzF,IAAW,WACjD,GAAIA,EAASG,QAAUH,EAASI,cAAgBJ,EAASK,WACrD,Ob8HgB,SAACL,GAEzB,OADAqB,QAAQC,IAAItB,GACLtB,IAAM6C,IAA0B/C,EAAU,kCAAkC,CAC/EgD,OAAQ,CACJ2E,SAAUnG,EAASI,aACnBgG,OAAQpG,EAASK,WACjBmC,WAAYxC,EAASG,OACrByB,SAAU5B,EAASM,MACnBuB,YAAa7B,EAASO,YatIf+T,CAAatU,KAEzB,CACCqP,UAAW,SAAC1P,GAAD,OAAU0B,QAAQC,IAAR,OAAY3B,QAAZ,IAAYA,OAAZ,EAAYA,EAAMA,OACvC+F,UAAW,MAGT6O,EAAiBnF,aAAYrP,EAAiB,CAChDsP,UAAW,SAAC1P,GACR8H,EAAM,CAAEpD,YAAa,UAAWuF,OAAQ,UAAWmG,YAAY,IAC/DtM,EAAQK,KAAK,+BAEjByL,QAAS,SAACiF,GACN/M,EAAM,CAAEpD,YAAa,oBAAqBuF,OAAQ,QAASmG,YAAY,OAIzE0E,EAAc,uCAAG,sBAAAvT,EAAA,yDACdiR,EAAK5D,KADS,yCACI9G,EAAM,CACzBpD,YAAa,oBACbuF,OAAQ,OACRmG,YAAY,KAJG,OAMnBwE,EAAetE,OAAOjQ,GANH,2CAAH,qDAShB0U,EAAK,UAAGL,EAAa1U,YAAhB,aAAG,EAAmBA,KAW/B,OATAgI,IAAMY,WAAU,WACZ,OAAIvI,EAASI,cAAgBJ,EAASK,YAClC+T,EAAcpO,GAAgBhG,EAASI,aAAauU,eAAgB3U,EAASK,WAAWsU,gBAAgBzM,OAAS,GAC1GgM,EAAYtB,UAEhBsB,EAAYpB,YAEpB,CAAC9S,EAASI,aAAcJ,EAASK,aAGhC,eAAC,IAAD,CAAKmL,QAAQ,cAAcnC,QAAQ,SAASuL,aAAa,SAAS1K,eAAe,SAAjF,UACI,eAAC,IAAD,CAAMvG,WAAW,WAAjB,UACI,cAAC,IAAD,CAAKsB,GAAG,KAAK2O,WAAW,OAAOtO,SAAS,MAAMN,WAAW,WAAzD,SAAqEiP,EAAKY,eAAiB,OAE3F,cAAC,IAAD,CAAK5P,GAAG,OAAOI,MAAM,WAAWyP,UAAU,SAA1C,yBAGA,cAAC,KAAD,IACA,cAAC,IAAD,CAAKhP,EAAE,OAAOnC,WAAW,SAAzB,SACKoR,MAAM,GAAGC,KAAK,IAAInP,KAAI,SAACoP,EAAGhN,GACvB,OAAQA,EAAIiN,KAAKC,MAAMlB,EAAKmB,UAAYnB,EAAKoB,aAAe,cAAC,KAAD,CAAoBC,eAAe,YAAlBrN,GAAkC,cAAC,KAAD,GAAaA,WAMxI,eAAC,IAAD,CAAKlD,GAAG,IAAR,UACI,eAAC,KAAD,CAASqH,aAAa,EAAtB,UACI,cAAC,KAAD,UACI,eAAC,IAAD,CAAQ1B,QAAQ,IAAhB,UACI,cAAC,KAAD,CAAQI,QAAQ,UAAUyK,oBAAoB,KAC1C1J,KAAK,KAAKQ,EAAE,OACZC,cAAe,CAAE1B,OAAQ,KACzBG,aAAa,IAHjB,UAIa,OAAR/K,QAAQ,IAARA,GAAA,UAAAA,EAAUI,oBAAV,eAAwB+J,uBAAwB,SAErD,cAAC,KAAD,CAAQW,QAAQ,UAAU0K,qBAAqB,KAC3C3J,KAAK,KAAKQ,EAAE,OACZC,cAAe,CAAE1B,OAAQ,KACzBG,aAAa,IAHjB,UAIa,OAAR/K,QAAQ,IAARA,GAAA,UAAAA,EAAUK,kBAAV,eAAsB8J,uBAAwB,YAI3D,cAAC,KAAD,CAAgBqC,SAAS,SAAS7I,WAAW,SAAS0I,EAAE,OACpD9B,MAAO,CAAEC,eAAgB,aACzBO,aAAa,IAAI4B,GAAG,UACpBF,QAAQ,0BAHZ,SAKI,cAAC,GAAD,CAAc/F,UAAW,CAAEC,cAAesN,EAAKtN,cAAewB,OAAQ8L,EAAKwB,SAAWlO,WAAYA,SAG1G,eAAC,KAAD,WACI,cAAC,KAAD,UACI,cAAC,KAAD,CAAQuD,QAAQ,UAAUuB,EAAE,OAAOR,KAAK,KAAKd,aAAa,IAAI2K,mBAAmB,KAAKnJ,GAAG,IAAzF,SAA8FvM,EAASM,MAAQ,aAAeN,EAASO,SAAW,gBAEtJ,cAAC,KAAD,CAAgBiM,SAAS,SAASzB,aAAa,IAAI4B,GAAG,UAClDF,QAAQ,0BADZ,SAGI,cAAC,GAAD,CAAWpC,aAAcA,EAAc/J,MAAON,EAASM,MAAOC,SAAUP,EAASO,SAAU+J,SAAU2J,EAAK3J,mBAKtH,cAAC,KAAD,CAAQQ,QAAQ,QAAQ6K,YAAY,QAAQpM,UAAU,UAAUxE,GAAG,IAC/DkG,YAAaiJ,EAAYrB,OACzBhP,QAAS4Q,EAFb,SAIMP,EAAYrB,OAAwC,mBAA/B,+BAE3B,cAAC,IAAD,CAAKtJ,UAAU,SAASoI,GAAG,IAAI3M,WAAW,OAAO8P,UAAU,UAA3D,sCAGA,cAAC,KAAD,CAAUjD,GAAIqC,EAAYrB,OAA1B,SACI,eAAC,IAAD,CAAKvN,SAAS,KAAd,UACI,eAAC,IAAD,CAAM3B,WAAW,WAAjB,UACI,cAAC,IAAD,CAASS,MAAO+P,GAAU,2CAAiCO,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAOP,WAAxC,aACtBjQ,UAAU,OAAOD,UAAQ,EAD7B,SAEI,eAAC,IAAD,CAAKe,WAAW,QAAQ4Q,eAAe,YAAvC,UAAoD3B,EAAKY,eAAzD,cAA6EH,QAA7E,IAA6EA,OAA7E,EAA6EA,EAAOP,WAApF,eAEJ,cAAC,KAAD,IACCE,EAAajJ,UAAY,cAAC,KAAD,IACtB,cAAC,IAAD,CAAKwI,WAAW,OAAhB,SAAyBc,GAAK,WAAY,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOmB,gBAAP,OAAuBnB,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAOP,YAArC,WAGtC,eAAC,IAAD,CAAMxQ,WAAW,WAAjB,UACI,cAAC,IAAD,CAASS,MAAM,oDAAoDF,UAAU,OAAOD,UAAQ,EAA5F,SACI,cAAC,IAAD,CAAKe,WAAW,QAAQ4Q,eAAe,YAAvC,4BAEJ,cAAC,KAAD,IACCvB,EAAajJ,UAAY,cAAC,KAAD,IACtB,eAAC,IAAD,CAAKwI,WAAW,OAAhB,iBAAwBc,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAOoB,YAA/B,WAGR,eAAC,IAAD,CAAMnS,WAAW,WAAjB,UACI,cAAC,IAAD,CAASS,MAAM,qGAAqGF,UAAU,OAAOD,UAAQ,EAA7I,SACI,cAAC,IAAD,CAAKe,WAAW,QAAQ4Q,eAAe,YAAvC,2BAEJ,cAAC,KAAD,IACCvB,EAAajJ,UAAY,cAAC,KAAD,IACtB,eAAC,IAAD,CAAKwI,WAAW,OAAhB,iBAAwBc,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAOqB,WAA/B,WAGR,eAAC,IAAD,CAAMpS,WAAW,WAAjB,UACI,cAAC,IAAD,CAASS,MAAM,mDAAmDF,UAAU,OAAOD,UAAQ,EAA3F,SACI,eAAC,IAAD,CAAKe,WAAW,QAAQ4Q,eAAe,YAAvC,qBAEI,cAAC,IAAD,CAAK3Q,GAAG,OAAO2Q,eAAe,OAAO5K,GAAG,IAAxC,SACK0J,EAAQA,EAAMsB,gBAAkB,IAAM,YAInD,cAAC,KAAD,IACC3B,EAAajJ,UAAY,cAAC,KAAD,IACtB,eAAC,IAAD,CAAKwI,WAAW,OAAhB,iBAAwBc,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAOuB,SAA/B,WAGR,cAAC,IAAD,CAAStE,GAAG,IAAIgE,YAAY,QAAQ7K,QAAQ,WAC5C,eAAC,IAAD,CAAM9F,WAAW,QAAQM,SAAS,MAAlC,UACI,cAAC,IAAD,CAAKsO,WAAW,OAAhB,mBACA,cAAC,KAAD,IACCS,EAAajJ,UAAY,cAAC,KAAD,IACtB,eAAC,IAAD,CAAKwI,WAAW,OAAhB,iBAAwBc,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAOwB,UAA/B,oB,mBC1IfC,GAAiC,CAC1C,CACI/T,GAAI,IACJ0N,MAAO,gBACPzL,YAAa,gCAEjB,CACIjC,GAAI,IACJ0N,MAAO,cACPzL,YAAa,4DAEjB,CACIjC,GAAI,IACJ0N,MAAO,cACPzL,YAAa,uCAEjB,CACIjC,GAAI,IACJ0N,MAAO,mBACPzL,YAAa,gDAIN+R,GApDiC,SAAC,GAAY,IAAVhU,EAAS,EAATA,GAAS,EAChCuF,IAAMC,WAD0B,mBACjD4F,EADiD,KAC3C6I,EAD2C,OAE9B1O,IAAMC,WAFwB,mBAEjD0O,EAFiD,KAE1CC,EAF0C,KAkBxD,OAdA5O,IAAMY,WAAU,WACZ,IAAIiO,EAAaL,GAAkBM,MAAK,SAAAC,GAAC,OAAIA,EAAEtU,KAAOA,KAEtD,OADAmU,EAASC,GACDpU,GACJ,IAAK,IACDiU,EAAQM,MACR,MAEJ,QACIN,EAAQO,SAGjB,CAACxU,IAGA,eAAC,IAAD,CAAQwS,aAAa,SAASlK,QAAQ,IAAIoJ,GAAG,IAA7C,UACI,cAAC,KAAD,CAAMhO,EAAE,OAAOmI,QAAQ,KAAKtK,WAAW,SAASuG,eAAe,SAASnF,GAAG,IAAI+H,GAAG,IAAlF,SAAuFU,IACvF,eAAC,IAAD,CAAQ7J,WAAW,QAAQ+G,QAAQ,IAAnC,UACI,cAAC,IAAD,CAAKzF,GAAG,KAAKK,SAAS,KAAKN,WAAW,WAAtC,gBAAkDsR,QAAlD,IAAkDA,OAAlD,EAAkDA,EAAOxG,QACzD,cAAC,IAAD,CAAK7K,GAAG,KAAKK,SAAS,KAAKuR,EAAE,IAA7B,gBAAkCP,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAOjS,qBCmLnDyS,GAAgB,SAACxP,GAA0C,IAAD,MACpD/E,EAAwB+E,EAAxB/E,OAEFwU,GAHsD,YAC5BzP,EAD4B,YAGvC7B,YAAS,CAAC,UAAWlD,IAAS,kBAAMD,EAAwBC,KAAS,CACtFyU,MAAO,EACP3H,UAAW,SAAC1P,QAIVsX,GAAoB,UAAAF,EAAapX,YAAb,eAAmBA,MAAOoX,EAAapX,KAAKA,KAAO,GACzEyV,EAAY,EAGhB,OAFA6B,EAAQhQ,SAAQ,SAAAL,GAAC,OAAIwO,GAAaxO,EAAEsQ,aAGhC,eAAC,IAAD,WACI,eAAC,IAAD,CAAKpR,EAAE,OAAOqR,QAAQ,IAAIxT,WAAW,WAAWqB,WAAW,WAAWM,SAAS,MAAMwO,GAAG,IAAxF,UACI,cAAC,KAAD,IACA,eAAC,IAAD,CAAK7O,GAAG,KAAR,cAAiC,GAAlBgS,EAAQ/O,QAAekN,EAAY6B,EAAQ/O,QAAQkP,YAAY,GAAK,EAAnF,KAAwFH,EAAQ/O,OAAhG,kBAGgC,KAAnC,UAAA6O,EAAapX,YAAb,eAAmBA,KAAKuI,QACnB,cAAC,IAAD,CAAKlD,WAAW,QAAhB,gEAEF,eAAC,IAAD,CAAKc,EAAE,OAAO0G,SAAS,OAAO2K,QAAQ,IAAtC,oBACKJ,EAAapX,YADlB,aACK,EAAmBA,KAAKkG,KAAI,SAAAe,GAAC,OAAI,cAAC,GAAD,CAAeyQ,OAAQzQ,GAAQA,EAAE0Q,aACnE,cAAC,GAAD,CAAeD,OAAQE,KACvB,cAAC,GAAD,CAAeF,OAAQE,KACvB,cAAC,GAAD,CAAeF,OAAQE,YAOrCA,GAAqB,CACvBhJ,KAAM,CACFU,KAAM,iBACNuI,OAAQ,MACRC,gBAAiB,IAErBC,QAAS,6IACTlV,WAAY,IACZ8U,SAAU,SACVJ,UAAW,EACXS,YAAa,WACbC,YAAa,YAOXC,GAAgB,SAACvQ,GAA0C,IAAD,EACpD+P,EAAwB/P,EAAxB+P,OAAW7P,EADyC,YAC5BF,EAD4B,YAE5D,OACI,eAAC,IAAD,2BAASE,GAAT,IAAmBsQ,KAAK,WAAxB,UACI,eAAC,IAAD,CAAKhS,EAAE,OAAOuD,QAAQ,MAAM8N,QAAQ,IAApC,UACI,cAAC,KAAD,CAAQlI,KAAI,UAAEoI,EAAO9I,YAAT,aAAE,EAAaU,KAAMrK,IAAKyS,EAAO9I,KAAKkJ,kBAClD,eAAC,IAAD,CAAK3R,EAAE,OAAOuD,QAAQ,SAAtB,UACI,cAAC,IAAD,CAAKpE,GAAG,KAAKD,WAAW,OAAxB,SAAgCqS,EAAO9I,KAAKU,OAC5C,cAAC,IAAD,CAAKhK,GAAG,KAAKD,WAAW,QAAxB,SAAiCqS,EAAOO,oBAGhD,cAAC,IAAD,CAAK3S,GAAG,KAAR,SAAeoS,EAAOK,eAK5BK,GAAsB5B,GAEtB6B,GAAoB,CACtB5V,GAAI,IACJ6M,KAAM,iBACNgJ,aAAc,yBACd3N,SAAU,EACV4N,OAAQ,CACJ,CAAEtY,IAAK,mCACP,CAAEA,IAAK,kCACP,CAAEA,IAAK,mCACP,CAAEA,IAAK,mCACP,CAAEA,IAAK,mCAEXuY,aAAc,4BACdC,aAAc,4tBACd/T,YAAa,qBACbgU,SAAU,sBACVhD,YAAa,EACbD,UAAW,GACXP,eAAgB,KAChByD,SAAU,CAAC,MAAO,UAAW,YAAa,QAC1CC,WAAYR,GACZhC,WAAY,EACZD,YAAa,IAKX0C,GAAyB,CAC3BhB,OAAQ,OACRvI,KAAM,wBACNwI,gBAAiB,IAGNgB,GAvS+B,SAAC,GAA2B,EAAzBC,SAAyB,EAAfnY,SAAgB,IAAD,EAChE4R,EAAOxK,IAAM2J,WAAWnD,IADwC,EAG9CxG,IAAMC,SAASoQ,IAH+B,mBAG/D/D,EAH+D,KAGzD0E,EAHyD,OAItChR,IAAMC,SAAsB,CAAEtH,MAAO,EAAGC,SAAU,IAJZ,mBAI/DP,EAJ+D,KAIrD4Y,EAJqD,OAK5CjR,IAAMC,WALsC,mBAKxDiR,GALwD,aAMxClR,IAAMC,UAAS,GANyB,mBAM/DkR,EAN+D,KAMtDC,EANsD,KAQ9DC,EAASC,cAATD,KACFvR,EAAQC,eATwD,EAW1BjC,YAAS,CAAC,WAAYuT,IAC9D,WACI,OAAO7W,EAAkB6W,KAE7B,CAEIhC,MAAO,EACPzH,QAAS,SAAChQ,GACN8B,QAAQC,IAAI/B,IAEhB8P,UAAW,SAAC6J,GACJA,EAAGvZ,KAAKwZ,OAAOJ,EAAWG,EAAGvZ,KAAKwZ,OACtCR,EAAQ,2BAAKO,EAAGvZ,MAAT,IAAe4Y,WAAYR,MAClCa,GAAY,SAAAQ,GAAE,kCAAUA,GAAV,IAAcjZ,OAAQ+Y,EAAGvZ,KAAKyC,SAEhDqN,UAAW,eAfX9P,EAX8D,EAW9DA,KAmBF0Z,GA9BgE,EAWxD1T,QAXwD,EAW/CpG,MAX+C,EAWxC6L,UAmBXgE,aAAYxM,EAAY,CACvCyM,UAAW,SAACrN,GACR+W,EAAW/W,EAAIrC,KAAKwZ,OACpB1R,EAAM,CACFpD,YAAarC,EAAIrC,KAAKwZ,MAAQ,aAAe,wBAC7CvP,OAAQ,OACRC,SAAU,OAGlB0F,QAAS,SAAChQ,GAAD,OAAW8B,QAAQC,IAAI/B,OAGpCoI,IAAMY,WAAU,WACZsQ,EAASL,MACV,IAEH,IAAMjR,EAAa,SAAC7F,EAAaC,GAC7BiX,GAAY,SAAA9O,GAAC,kCACNA,GADM,IAET1J,aAAcsB,EACdrB,WAAYsB,QAwBpB,OAAIhC,EACA,eAAC,IAAD,WACI,cAAC,IAAD,CAASgS,GAAG,MAEZ,cAAC,IAAD,CAAK1M,GAAG,KAAKK,SAAS,MAAMN,WAAW,WAAvC,SAAmDiP,EAAKhF,OAGxD,eAAC,IAAD,CAAKnJ,EAAE,OAAOf,GAAG,IAAIsE,QAAS,CAAEF,KAAM,SAAUwJ,GAAI,OAApD,UACI,eAAC,IAAD,CAAK7M,EAAE,OAAOnC,WAAW,QAAzB,UACI,eAAC,IAAD,CAAKmC,EAAE,OAAOuD,QAAS,CAAEF,KAAM,SAAUwJ,GAAI,OAA7C,UACI,cAAC,IAAD,CAAK7M,EAAE,OAAOuD,QAAS,CAAEF,KAAM,OAA/B,SACK4L,MAAM,GAAGC,KAAK,IAAInP,KAAI,SAACoP,EAAGhN,GACvB,OAAQA,EAAIiN,KAAKC,MAAMlB,EAAKmB,UAAYnB,EAAKoB,aAAe,cAAC,KAAD,CAAoBC,eAAe,YAAlBrN,GAAkC,cAAC,KAAD,GAAaA,QAGpI,eAAC,IAAD,CAAKhD,GAAG,OAAO6H,GAAG,IAAIzH,MAAM,WAA5B,UAAwC4O,EAAKoB,YAA7C,iBAEJ,cAAC,KAAD,IACA,cAAC,IAAD,CAAM1T,GAAG,IAAT,SACI,eAAC,KAAD,CAAQmJ,QAAQ,OAAhB,UACI,cAAC,IAAD,CAAKE,GAAG,IAAR,oBACCiJ,EAAKoE,iBAKlB,cAAC,KAAD,IAEA,cAAC,KAAD,CAAQ9O,UAAU,QAAQuB,QAAQ,QAAQe,KAAK,KAC3ChI,QAAS,WAxChBsO,EAAK5D,KAQV8K,EAAWpJ,OAAO,CAAE9P,OAAQ8T,EAAK7R,GAAInD,MAAOkT,EAAK5D,KAAKtP,QAPlDwI,EAAM,CACFpD,YAAa,oBACbuF,OAAQ,OACRC,SAAU,OAqCNyP,SAAYR,GAAY3G,EAAK5D,KAAsB,cAAC,KAAD,CAAalJ,MAAM,QAAjC,cAAC,KAAD,IAFzC,qBAMJ,cAAC,IAAD,CAAK0F,aAAa,KAAKzB,SAAS,SAASvE,GAAG,IAA5C,SACI,cAAC,KAAD,CAAMwU,IAAI,IAAIC,EAAE,MAAMhV,KAAK,QAAQM,UAAU,QACzC2U,aAAa,iBACbC,gBAAgB,iBAFpB,SAGKzF,EAAKiE,OAAOyB,MAAM,EAAG,GAAG9T,KAAI,SAAC+T,EAAO3R,GACjC,OACI,cAAC,KAAD,CAAkB4R,QAAe,IAAN5R,EAAU,EAAI,EAAG6R,QAAe,IAAN7R,EAAU,EAAI,EAAGqB,SAAS,SAA/E,SACI,cAAC,IAAD,CAAO1E,IAAKgV,EAAMha,IAAK4Z,EAAE,OAAO7U,OAAO,OAAO0H,EAAE,OAAOvH,UAAU,QAAQiV,QAAQ,UADtE9R,UAS/B,eAAC,IAAD,CAAKlD,GAAG,IAAIe,EAAG,CAAC,OAAQ,OAAQ,OAAQ,SAAUuD,QAAQ,iBAA1D,UAEI,cAAC,IAAD,CAAKgD,EAAG,CAAC,OAAQ,OAAQ,OAAQ,OAAQ2N,UAAU,MAAMjV,GAAI,CAAEoE,KAAM,IAAKsC,GAAI,KAAOwO,IAAI,MAAMC,MAAO,CAAEzO,GAAI,SAAW0O,SAAU,CAAE1O,GAAI,UACnIV,aAAa,KACbS,QAAQ,cAAcnC,QAAQ,SAAS+Q,OAAQ,EAAGC,YAAY,OAC9DzW,EAAE,IAAIgR,aAAa,SAAS1K,eAAe,SAH/C,SAII,cAAC,GAAD,CAAc+J,KAAMA,EAAMjU,SAAUA,EAAUuH,WAAYA,EAAY8C,aA3EjE,SAACuC,EAAerM,GACjCqY,GAAY,SAAC9O,GAAD,mBAAC,eACNA,GADK,IAERxJ,MAAOsM,EACPrM,SAAUA,YA0EN,eAAC,IAAD,CAAK8L,EAAG,CAAC,OAAQ,OAAQ,OAAQ,OAAjC,UAEI,eAAC,IAAD,CAAM1I,WAAW,SAAjB,UACI,eAAC,IAAD,CAAQA,WAAW,QAAnB,UACI,cAAC,IAAD,CAAKsB,GAAG,KAAKK,SAAS,MAAMN,WAAW,WAAvC,SAAoD,UAAYiP,EAAKqG,UAAUrL,OAC/E,cAAC,IAAD,UACKgF,EAAKqE,SAASzS,KAAI,SAACiE,EAAG7B,GACnB,OACI,eAAC,IAAD,CAEI5C,MAAM,WACNL,WAAW,WACXuV,cAAc,OACdjV,SAAS,KACTkV,cAAc,YACd1N,GAAG,IACH3H,aAAW,EARf,UASE2E,EATF,IASMmK,EAAKqE,SAASrE,EAAKqE,SAASpQ,OAAS,KAAO4B,GAAK,8CATvD,MACS7B,WAczB,cAAC,KAAD,IACA,cAAC,KAAD,CAAQgH,KAAMgF,EAAKqG,UAAUrL,KAAMrK,IAAKqP,EAAKqG,UAAU7C,gBACnDgD,OAAO,UACP5W,QAAS,kBAAM6W,MAAM,2BAG7B,cAAC,IAAD,CAAS/I,GAAG,MA7BhB,UAgCKsC,EAAKsE,kBAhCV,aAgCK,EAAiB1S,KAAI,SAAC6Q,EAAGzO,GACtB,OAAO,cAAC,GAAD,CAAa7F,GAAIsU,EAAEtU,IAAS6F,MAEvC,cAAC,IAAD,CAAS0J,GAAG,MAGZ,cAAC,IAAD,CAAK1M,GAAG,KAAKD,WAAW,WAAWM,SAAS,MAA5C,6BACA,cAAC,IAAD,CAAKL,GAAG,IAAR,SAAagP,EAAKmE,eAClB,cAAC,IAAD,CAASzG,GAAG,MAGZ,cAAC,IAAD,CAAKtF,EAAE,OAAOb,QAAS,CAAErC,KAAM,OAAQwJ,GAAI,SAA3C,SACI,cAAC,GAAD,CAAcjM,UAAW,CAAEC,cAAesN,EAAKtN,cAAewB,OAAQ8L,EAAKwB,SAAWlO,WAAYA,YAK9G,cAAC,IAAD,CAASoK,GAAG,MACZ,cAAC,GAAD,CAAepP,OAAQ0R,EAAK7R,QAG7B,8B,UCzJIuY,GA3CG,WACd,IAAMtC,EAAW5F,cACjB,GAAI4F,EAASrU,MAAO,CAAC,IACTwL,EAAY6I,EAASrU,MAArBwL,QACR,OAAO,eAAC,KAAD,CACH5F,OAAO,QACPkB,QAAQ,SACR8P,cAAc,SACdjX,WAAW,SACXuG,eAAe,SACf2Q,UAAU,SACVlW,OAAO,QAPJ,UASH,cAAC,KAAD,CAAWsJ,QAAQ,OAAOtD,GAAI,IAC9B,cAAC,KAAD,CAAY5F,GAAI,EAAG+O,GAAI,EAAGxO,SAAS,KAAnC,SACKkK,IAEL,cAAC,KAAD,CAAkBsL,SAAS,KAA3B,4EAKR,OACI,eAAC,KAAD,CACIlR,OAAO,OACPkB,QAAQ,SACR8P,cAAc,SACdjX,WAAW,SACXuG,eAAe,SACf2Q,UAAU,SACVlW,OAAO,QAPX,UASI,cAAC,KAAD,CAAWsJ,QAAQ,OAAOtD,GAAI,IAC9B,cAAC,KAAD,CAAY5F,GAAI,EAAG+O,GAAI,EAAGxO,SAAS,KAAnC,wBAGA,cAAC,KAAD,CAAkBwV,SAAS,KAA3B,wE,8BC2CGC,GA7EE,SAAC,GAA2D,IAAzD9G,EAAwD,EAAxDA,KAAM+G,EAAkD,EAAlDA,QAAY1T,EAAsC,kCACxE,OACI,eAAC,IAAD,yBAAK+S,YAAY,MAAMtP,aAAa,MAASzD,GAA7C,IAAoDqF,GAAID,aAAkB,WAAY,YAAa5G,EAAE,OAAOuD,QAAQ,SAApH,UACI,cAAC,IAAD,CAAMpE,GAAIgW,IAAWtZ,GAAI,UAAYsS,EAAK7R,GAA1C,SACI,cAAC,IAAD,CAAKqC,KAAK,QAAQD,KAAK,QAAQ8E,SAAS,SAAxC,SACI,cAAC,IAAD,CAAO1E,IAAKqP,EAAKgE,aACbnT,UAAU,QAAQoW,IAAI,QACtBC,SAAU,cAAC,IAAD,CAAK1O,QAAQ,OAAOpH,MAAM,SACpC+V,IAAKnH,EAAKkE,aAAc7O,SAAS,SACjCiB,MAAO,CAAE8Q,WAAY,aACrBC,OAAQ,CAAEC,UAAW,oBAIjC,cAAC,KAAD,IAEA,eAAC,IAAD,CAAK3X,EAAE,IAAIkC,EAAE,OAAOuD,QAAQ,SAA5B,WACM2R,GACE,eAAC,IAAD,CAAKlV,EAAE,OAAOnC,WAAW,WAAzB,UACI,cAAC,KAAD,CAAOoH,aAAa,OAAOwB,GAAG,IAAIoJ,YAAY,OAA9C,iBAGC1B,EAAKqE,SAASzS,KAAI,SAACiE,EAAG/D,GACnB,OACI,eAAC,IAAD,CAEIV,MAAM,WACNL,WAAW,WACXuV,cAAc,OACdjV,SAAS,KACTkV,cAAc,YACd1N,GAAG,IACH3H,aAAW,EARf,UASE2E,EATF,IASMmK,EAAKqE,SAASrE,EAAKqE,SAASpQ,OAAS,KAAO4B,GAAK,8CATvD,MACS/D,SAazB,cAAC,IAAD,CACIhB,GAAG,IACHC,WAAW,WACXC,GAAG,KACHC,WAAW,QAJf,SAMK+O,EAAKhF,QAGR+L,GACE,cAAC,IAAD,CACI/V,GAAI,IACJC,WAAW,QACXsW,aAAa,WACblS,SAAS,SAJb,SAMK2K,EAAK5P,YAAY6D,OAAS,IAAM+L,EAAK5P,YAAYoX,UAAU,EAAG,KAAO,MAAQxH,EAAK5P,cAI3F,eAAC,IAAD,CAAKyB,EAAE,OAAO0G,SAAS,OAAOkP,YAAY,MAAM/X,WAAW,WAAW0F,QAAQ,MAA9E,UACI,cAAC,IAAD,CAAKpE,GAAG,KAAKK,SAAS,MAAtB,SACK2O,EAAKY,eAAiB,MAE3B,cAAC,IAAD,CAAK5P,GAAG,OAAOI,MAAM,WAAWyP,UAAU,SAA1C,yBAIA,cAAC,IAAD,CAAKhP,EAAE,OAAOnC,WAAW,SAAS4F,UAAU,SAASuD,GAAG,OAAxD,SACKiI,MAAM,GAAGC,KAAK,IAAInP,KAAI,SAACoP,EAAGhN,GACvB,OAAQA,EAAIiN,KAAKC,MAAMlB,EAAKmB,UAAYnB,EAAKoB,aAAe,cAAC,KAAD,CAAoBC,eAAe,YAAlBrN,GAAkC,cAAC,KAAD,GAAaA,mBCrDlJ+P,GAAwB,CAC1B5V,GAAI,kBACJ6M,KAAM,iBACNgJ,aAAc,2CACdE,aAAc,4BACd9T,YAAa,8DACbgU,SAAU,sBACVhD,YAAa,EACbD,UAAW,GACXP,eAAgB,KAChByD,SAAU,CAAC,MAAO,UAAW,YAAa,SAW/BqD,IARwB,2BAC9B3D,IAD6B,IAChBC,aAAc,6CADE,2BAE7BD,IAF6B,IAEhBC,aAAc,6CAFE,2BAG7BD,IAH6B,IAGhBC,aAAc,6CAHE,2BAI7BD,IAJ6B,IAIhBC,aAAc,6CAJE,2BAK7BD,IAL6B,IAKhBC,aAAc,6CAnCc,SAAC,GAAe,IAAb2D,EAAY,EAAZA,MAEjD,OAAKA,GAA0B,IAAjBA,EAAM1T,OAKhB,cAAC,KAAD,CAAYwC,QAAQ,IAAImR,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,GAA9C,SACKD,GAASA,EAAM/V,KAAI,SAACe,EAAGkV,GACpB,OACI,cAAC,GAAD,CAAqB7H,KAAMrN,EAAGoU,SAAS,GAAxBpU,EAAExE,SARQ,cAAC,IAAD,mCCgGvC2Z,GAAW,SAACzU,GAC0BA,EAAhClD,MAAgCkD,EAAzBwL,QADoC,IACxBkJ,EADuB,YACV1U,EADU,qBAGlD,OACI,eAAC,KAAD,yBAAKuE,KAAK,KAAK8J,YAAY,SAAYqG,GAAvC,cACI,cAAC,KAAD,UACK1U,EAAMlD,QAEX,cAAC,KAAD,CAAgBP,QAAS,kBAAMyD,EAAMwL,kBAKlCmJ,GAxGG,WACG,IAAIC,gBAAgBzJ,cAAcnH,QAAnD,IACM6Q,EAAiBzP,aAAkB,WAAY,YAE/C2L,EAAW5F,cAJG,EAMQ9K,IAAMC,SAAsB,CAAE/F,YAAa,EAAGD,SAAU,IANhE,mBAMb0J,EANa,KAMLkI,EANK,OAOI7L,IAAMC,WAPV,mBAObpE,EAPa,KAOP4Y,EAPO,KAapBzU,IAAMY,WAAU,gBACWvB,IAAnBqR,EAASrU,OAAuBqU,EAASrU,MAAMsH,QAC/CkI,EAAU6E,EAASrU,MAAMsH,aAENtE,IAAnBqR,EAASrU,OAAuBqU,EAASrU,MAAMR,MAC/C4Y,EAAQ/D,EAASrU,MAAMR,QAE5B,IAEH,IAAI6Y,EAAY,QAAC7Y,QAAD,IAACA,OAAD,EAACA,EAAMpB,GAAIkJ,GAtBP,EAwBgC7F,YAAS,CAAC,eAAgB4W,IAAY,kBAAMtb,EAAmB,OAACyC,QAAD,IAACA,OAAD,EAACA,EAAMpB,GAAIkJ,KAC1H,CACI5F,UAAW,MAFX/F,EAxBY,EAwBZA,KAAMyL,EAxBM,EAwBNA,UAAW7L,EAxBL,EAwBKA,MAAO+c,EAxBZ,EAwBYA,QAASC,EAxBrB,EAwBqBA,OAKzC,OAAIhd,EACO,6CAIP,eAAC,IAAD,CAAKuG,EAAE,OAAOuD,QAAQ,SAAS8N,QAAQ,IAAvC,UACI,eAAC,IAAD,CAAKgD,SAAU,CAAE1O,GAAI,UAAYwO,IAAK,EAClCxN,QAAS0P,EAAgBrW,EAAE,OAAOuD,QAAQ,SAC1C2Q,UAAU,MACV7C,QAAQ,IAAIjE,GAAG,IAHnB,UAKI,cAAC,GAAD,CAAW5H,OAAQA,EACfC,aAhCK,SAACD,GAClBkI,EAAUlI,IAgCEF,UAAWA,EACX2B,cAAe,WAAQwP,IAAUD,OAErC,eAAC,IAAD,WAEK9Y,GAAQ,cAAC,GAAD,CAAUY,MAAO,kBAAoBZ,EAAK4B,aAC/C0N,QAAS,WAAQsJ,OAAQpV,MAI5BsE,EAAO7J,MAAQ,cAAC,GAAD,CAAU2C,MAAOkH,EAAO7J,KACpCqR,QAAS,WAAQU,GAAU,SAAA1J,GAAC,kCAAUA,GAAV,IAAarI,KAAM,WAIlD6J,EAAO5J,MAAQ,cAAC,GAAD,CAAU0C,MAAO,SAAWkH,EAAO5J,KAAKyI,qBACpD2I,QAAS,WAAQU,GAAU,SAAA1J,GAAC,kCAAUA,GAAV,IAAapI,UAAMsF,UAIlDsE,EAAO3J,IAAM,cAAC,GAAD,CAAUyC,MAAO,OAASkH,EAAO3J,GAAGwI,qBAC9C2I,QAAS,WAAQU,GAAU,SAAA1J,GAAC,kCAAUA,GAAV,IAAanI,QAAIqF,UAIhDsE,EAAO1J,SAAW,GAAK,cAAC,GAAD,CAAUwC,MAAOkH,EAAO1J,SAAW,UACvDkR,QAAS,WAAQU,GAAU,SAAA1J,GAAC,kCAAUA,GAAV,IAAalI,SAAU,UAItD0J,EAAOzJ,YAAc,GAAK,cAAC,GAAD,CAAUuC,MAAOkH,EAAOzJ,YAAc,YAC7DiR,QAAS,WAAQU,GAAU,SAAA1J,GAAC,kCAAUA,GAAV,IAAajI,YAAa,gBAIlE,cAAC,IAAD,CAAKoD,GAAG,KAAK6O,GAAG,IAAIxO,SAAS,MAAMN,WAAW,OAA9C,8CACCoG,EACG,cAAC,KAAD,CAAS/F,MAAM,QAAQwG,KAAK,KAAKtC,UAAU,WAE3C,cAAC,GAAD,CAAcqS,MAAK,OAAEjc,QAAF,IAAEA,OAAF,EAAEA,EAAMA,W,mBCjErC6c,GAAY,SAAClV,GAAD,OACd,eAAC,KAAD,yBAAMhC,SAAS,MAASgC,GAAxB,uBACY,IAAIrB,MAAOwW,cADvB,uCAKEC,GAAY,SAAC/a,GACf,IAAI/B,EAAM,GACC,OAAP+B,EAAa/B,EAAM,uBACP,WAAP+B,EAAiB/B,EAAM,+BAChB,WAAP+B,IAAiB/B,EAAM,qCAEhC+c,OAAOC,KAAKhd,EAAK,UAAWid,SAG1BC,GAAmB,SAACxV,GAAD,OACrB,eAAC,KAAD,yBAAawD,QAAQ,QAAQzF,MAAM,YAAeiC,GAAlD,cACI,cAAC,KAAD,CAAYrC,GAAG,IAAI8X,KAAK,IAAI5Y,aAAW,WAAWN,QAAS,kBAAM6Y,GAAU,OAAOlP,KAAM,cAAC,KAAD,CAAYlI,SAAS,WAC7G,cAAC,KAAD,CAAYL,GAAG,IAAI8X,KAAK,IAAI5Y,aAAW,SAASN,QAAS,kBAAM6Y,GAAU,WAAWlP,KAAM,cAAC,KAAD,CAAUlI,SAAS,WAC7G,cAAC,KAAD,CAAYL,GAAG,IAAI8X,KAAK,IAAI5Y,aAAW,SAASN,QAAS,kBAAM6Y,GAAU,WAAWlP,KAAM,cAAC,KAAD,CAAUlI,SAAS,gBAItG0X,GAhDoB,SAAC,GAA2B,EAAzBzc,SAA0B,IAAb+G,EAAY,4BAC3D,OACI,cAAC,IAAD,yBAAKrC,GAAG,SAASgY,KAAK,cAAcC,GAAG,MAAS5V,GAAhD,aACI,cAAC,IAAD,CAAOoD,QAAQ,KAAKyS,QAAS,cAAC,IAAD,IAA7B,SASI,eAAC,IAAD,CACIC,UAAW,CAAEjU,KAAM,iBAAkBC,GAAI,OACzCc,eAAe,gBACfvG,WAAW,SAHf,UAKI,cAAC,GAAD,IACA,cAAC,GAAD,a,8BC2Cd0Z,GAAc,SAACC,GAA+C,IAAD,EAC7B3V,IAAMC,SAAS,GADc,mBACxD2V,EADwD,KAC7CC,EAD6C,OAE3B7V,IAAMC,SAAS,GAFY,mBAExD6V,EAFwD,KAE5CC,EAF4C,OAGjC/V,IAAMC,WAH2B,mBAGxD8P,EAHwD,KAG/CiG,EAH+C,KAIzDC,EAAYlR,aAAkB,MAAO,UAErCjF,EAAQC,eAENoL,EAAYwK,EAAZxK,QAEF+K,EAAezO,aAAY1P,EAAY,CACzC2P,UAAW,SAACrN,GACRX,QAAQC,IAAIU,EAAIrC,MAChB8H,EAAM,CACFpD,YAAa,2BACbuF,OAAQ,aAGhB2F,QAAS,SAACxD,GACN1K,QAAQC,IAAIyK,MAYpB,OACI,eAAC,KAAD,2BAAWuR,GAAX,IAAuBxK,QAAS,WAAQ4K,EAAc,GAAI5K,KAA1D,UACI,cAAC,KAAD,IACA,eAAC,KAAD,WACI,cAAC,KAAD,6BACA,cAAC,KAAD,UACI,eAAC,IAAD,CAAMzJ,QAAQ,SAAS8N,QAAQ,IAA/B,UACI,cAAC,IAAD,UACKpC,MAAM,GAAGC,KAAK,GAAGnP,KAAI,SAACoP,EAAG6G,GACtB,OACI,cAAC,KAAD,CAAYhR,QAAQ,QAAQ3G,aAAW,OACnCN,QAAS,WAAQ6Z,EAAc5B,EAAQ,IACvCgC,OAAQ,CAAEzD,YAAa,OACvBtP,aAAa,OAAOgT,YAAa,kBAAMP,EAAa1B,EAAQ,IAAIkC,aAAc,kBAAMR,EAAa,IACjGhQ,KAAM+P,EAAYzB,GAAS2B,EAAa3B,EAAQ,cAAC,KAAD,CAAYzW,MAAOuY,IAAgB,cAAC,KAAD,KAJpC9B,QAO/D,cAAC,KAAD,CAAUjQ,KAAK,KAAKD,YAAY,wCAC5BK,MAAOyL,EACP5L,SAAU,SAACC,GAAD,OAAO4R,EAAW5R,EAAEC,OAAOC,UAEzC,cAAC,KAAD,CAAQa,GAAG,OAAO7B,WAAYwS,GAAc,EAAG5Z,QA9BhD,WACfga,EAAa5N,OAAO,CAChBzN,WAAY8a,EAAW/a,OACvB2U,UAAWuG,EACXQ,cAAevG,EACfwG,cAAeZ,EAAWY,iBAyBd,+BAQlBC,GAAe,SAACC,GAAwB,IAAD,EACnCC,EAAchM,eACdF,EAAOxK,IAAM2J,WAAWnD,IACxB1G,EAAQC,eAH2B,EAIDC,IAAMC,SAAS,IAJd,mBAIlC0W,EAJkC,KAIpBC,EAJoB,OAMR9Y,YAAS,CAAC,eAAD,UAAiB0M,EAAK5D,YAAtB,aAAiB,EAAWtP,OAAQoD,EAAsB,CAChGgN,UAAW,SAACrN,KAGZgV,MAAO,IAJHrX,EANiC,EAMjCA,KAAagG,GANoB,EAM3BpG,MAN2B,EAMpBoG,SAOf6Y,EAAkBpP,aAA4C3M,EAAmB,CACnF4M,UAAW,WAAQ5H,EAAM,CAAEpD,YAAa,0BAA2BuF,OAAQ,aAC3E2F,QAAS,SAAChQ,GACNkI,EAAM,CAAEpD,YAAa9E,EAAMkf,OAAQ7U,OAAQ,eAQnD,OAA0B,KAAlB,OAAJjK,QAAI,IAAJA,OAAA,EAAAA,EAAMA,KAAKuI,QACJ,cAAC,IAAD,8CAKPvC,EAAgB,cAAC,IAAD,gCAEb,cAAC,IAAD,2BAASyY,GAAT,aACH,eAAC,IAAD,CAAMjH,QAAQ,IAAI9N,QAAQ,SAA1B,UACI,cAAC,IAAD,CAAKpE,GAAI,KAAM2O,WAAY,UAAW5O,WAAW,OAAOM,SAAS,MAAMwO,GAAG,IAA1E,+BADJ,OAEKnU,QAFL,IAEKA,OAFL,EAEKA,EAAMA,KAAKkG,KAAI,SAAAC,GAAC,OACb,cAAC,IAAD,CAAKuU,YAAY,MAAMzW,EAAE,IACrB2G,MAAO,CAAE8Q,WAAY,aACrBC,OAAQ,CAAEC,UAAW,eAErB5O,GAAID,aAAkB,WAAY,YAClC3B,aAAa,OALjB,SAOI,eAAC,IAAD,CAAiBsB,EAAE,OAAOhD,QAAQ,MAAM8N,QAAQ,IAAhD,UACI,cAAC,IAAD,CAAO9K,EAAE,OAAO8K,QAAQ,IAAxB,SACI,cAAC,KAAD,CAAeqC,EAAE,OAAjB,SACI,eAAC,KAAD,CAAMA,EAAE,OAAOxU,WAAW,OAAO0Z,oBAAqB,CAAEvV,KAAM,MAAOC,GAAI,WAAaqQ,aAAa,OAAOtC,QAAQ,IAAlH,UACI,cAAC,KAAD,UAAU,cAAC,IAAD,CAAKlS,GAAG,KAAR,2BACV,cAAC,IAAD,CAAKD,WAAW,QAAhB,SAAyBc,EAAEK,WAC3B,cAAC,KAAD,UAAU,cAAC,IAAD,CAAKlB,GAAG,KAAR,yBACV,cAAC,IAAD,CAAKD,WAAW,QAAhB,SAAyBc,EAAEM,SAC3B,cAAC,KAAD,UAAU,cAAC,IAAD,CAAKnB,GAAG,KAAR,4BACV,cAAC,IAAD,CAAKD,WAAW,QAAhB,SAAyBc,EAAE6Y,QAC3B,cAAC,KAAD,UAAU,cAAC,IAAD,CAAK1Z,GAAG,KAAR,+BACV,cAAC,IAAD,CAAKD,WAAW,QAAhB,SAAyBc,EAAE8Y,YAC3B,cAAC,KAAD,UAAU,cAAC,IAAD,CAAK3Z,GAAG,KAAR,qCACV,cAAC,IAAD,CAAKD,WAAW,QAAhB,SAAyBc,EAAE+Y,oBAC3B,cAAC,KAAD,UAAU,cAAC,IAAD,CAAK5Z,GAAG,KAAR,gCACV,cAAC,IAAD,CAAKD,WAAW,QAAhB,SAAyBc,EAAEgZ,gBAC3B,cAAC,KAAD,CAAQnJ,YAAY,QAChB9R,QAAS,WAAQ0a,EAAgBzY,EAAEiZ,SAAS3c,IAAKic,EAAYzL,UADjE,4BAEA,cAAC,KAAD,CAAQ+C,YAAY,MAChB1K,WAAkD,gBAAtCnF,EAAE+Y,kBAAkBG,cAChCnb,QAAS,WA3CxB,IAACnB,IA2C4CoD,EAAE1D,GA1ChEoc,EAAgBvO,OAAOvN,IAwCK,uCAMZ,cAAC,IAAD,CAAKoK,GAAG,OAAR,SACI,cAAC,IAAD,CAASmS,YAAY,WAAWpU,YAAY,mBAEhD,cAAC,GAAD,CAAUoJ,KAAMnO,EAAEiZ,SAAU/D,SAAS,EAAMlD,KAAK,WAAWuC,YAAY,UA3BhEvU,EAAE1D,SA+BrB,cAAC,GAAD,CAAayQ,OAAQwL,EAAYxL,OAAQG,YAAU,EAACF,QAASuL,EAAYvL,QAASoL,cAAc,GAAG3b,OAAQ+b,WAMjHY,GAAsB,WAAO,IACvBvf,EAAS8F,YAAS,mBAAmB,kBrB/DtChH,EAAO8C,IAAgB/C,EAAU,2BqB+DmC,CACvE6Q,UAAW,SAACrN,KAEZmd,eAAgB,WAHZxf,KAMR,OAA0B,KAAlB,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMA,KAAKuI,QAAqB,cAAC,IAAD,kDAGhC,eAAC,IAAD,WACI,cAAC,IAAD,CAAKjD,GAAI,KAAM2O,WAAY,UAAW5O,WAAW,OAAOM,SAAS,MAAMwO,GAAG,IAA1E,kCACA,cAAC,KAAD,CAAYpJ,QAAQ,IAAImR,QAAS,CAAE1S,KAAM,EAAGsC,GAAI,GAAhD,gBACK9L,QADL,IACKA,OADL,EACKA,EAAMA,KAAKkG,KAAI,SAAAe,GAAC,OAAI,cAAC,GAAD,CAAUqN,KAAMrN,EAAcoU,SAAS,GAAfpU,EAAExE,aAMzDgd,GAA0B,WAC5B,OACI,cAAC,IAAD,4BAIOC,GA1NK,WAAO,IAAD,EACd9Q,EAAS5G,IAAM2J,WAAWnD,IAA1BI,KAGJ+Q,EAAI,UAPD,IAAIpD,gBAAgBzJ,cAAcnH,QAOxB/J,IAAI,eAAb,aAAG,EAAmByd,cAE9B,OACI,eAAC,IAAD,CAAKlZ,EAAE,OAAOuD,QAAS,CAAEF,KAAM,SAAUC,GAAI,OAA7C,UAEI,cAAC,IAAD,CAAKiD,EAAG,CAAElD,KAAM,OAAQC,GAAI,OAASyD,KAAK,QAA1C,SACI,eAAC,IAAD,CAAK/G,EAAE,OAAOwD,SAAS,SAAS+Q,YAAY,MAAMtP,aAAa,KAAKnH,EAAE,IAAIyF,QAAS,CAAEF,KAAM,cAAeC,GAAI,UAAYsB,QAAQ,IAAlI,UACI,eAAC,IAAD,CAAQnB,UAAU,SAASmS,YAAY,QAAvC,UACI,cAAC,KAAD,CAAQzM,KAAI,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMU,KAAMhB,QAAS,CAAE9E,KAAM,KAAMC,GAAI,QACrD,cAAC,KAAD,CAAQ0B,QAAQ,OAAO6G,GAAG,IAAIrM,SAAS,KAAvC,6BAGJ,eAAC,IAAD,CAAQ3B,WAAW,QAAQ+G,QAAQ,IAAnC,UACI,cAAC,KAAD,CAAMzF,GAAIsa,KAActR,QAAQ,MAChC,cAAC,IAAD,CAAKhJ,GAAG,KAAKD,WAAW,OAAOM,SAAS,KAAKsO,WAAW,OAAxD,mCACA,cAAC,IAAD,CAAK3O,GAAG,KAAR,sFAEA,cAAC,IAAD,IAEA,cAAC,IAAD,CAAKA,GAAG,KAAKD,WAAW,OAAOM,SAAS,KAAKsO,WAAW,OAAxD,UAAoE,OAAJrF,QAAI,IAAJA,OAAA,EAAAA,EAAMU,MAAO,eAC7E,eAAC,IAAD,CAAKnJ,EAAE,OAAOuD,QAAQ,MAAM1F,WAAW,WAAvC,UACI,cAAC,KAAD,IACA,cAAC,IAAD,CAAKsB,GAAG,KAAK6H,GAAG,IAAhB,gCAEJ,eAAC,IAAD,CAAKhH,EAAE,OAAOuD,QAAQ,MAAM1F,WAAW,WAAvC,UACI,cAAC,KAAD,IACA,cAAC,IAAD,CAAKsB,GAAG,KAAK6H,GAAG,IAAhB,wCAMhB,cAAC,KAAD,CAAQD,KAAK,MAGb,eAAC,IAAD,CAAKR,EAAG,CAAElD,KAAM,OAAQC,GAAI,OAA5B,WACe,UAATkW,GAA4B,MAARA,IAAiB,cAAC,GAAD,IAC7B,kBAATA,GAA4B,cAAC,GAAD,IACnB,iBAATA,GAA2B,cAAC,GAAD,W,wCCsStCE,GAA8D,SAAClY,GAAD,OAChE,eAAC,KAAD,CAAakE,QAAQ,OAAO7H,WAAW,SAASuG,eAAe,gBAAgBuV,GAAG,IAAlF,UACI,cAAC,KAAD,CAAWjO,QAAS,WAAalK,EAAM2H,KAAM6E,GAAG,IAAI4L,QAASpY,EAAMqY,KAAO,EAAI,GAA9E,SACKrY,EAAM2H,OAEX,cAAC,KAAD,yBAAQ7M,GAAI,WAAakF,EAAM2H,KAAM2Q,UAAWtY,EAAMqY,MAC9CrY,GADR,IAEIwE,SAAU,SAACC,GAAQzE,EAAMuY,OAAO9T,EAAEC,OAAO8F,iBAGtCgO,GAxUuB,SAAC,GAAkB,IAAbxY,EAAY,oBAC9CG,EAAQC,eADsC,EAElBC,IAAMC,WAFY,mBAE7CmY,EAF6C,KAElCC,EAFkC,OAI5BrY,IAAMC,SAA2B,CACrDqY,OAAQ,IACRC,UAAW,GACX7b,YAAa,mBACb6T,OAAQ,CACJ,CACItY,IAAK,2CACLwb,IAAK,MACL+E,WAAY,WAEhB,CACIvgB,IAAK,2CACLwb,IAAK,MACL+E,WAAY,WAEhB,CACIvgB,IAAK,2CACLwb,IAAK,MACL+E,WAAY,YAGpB7V,SAAU,EACV8V,WAAY,GACZC,YAAa,4JACbpR,KAAM,cACNqR,cAAe,IACfC,OAAQ,KACRC,WAAY,gBACZlI,SAAU,CACNmI,WAAW,EACXC,SAAS,EACTC,SAAS,EACTC,KAAK,EACLC,MAAM,GAEVC,UAAW,IACXhL,YAAa,GACbC,WAAY,IAzCoC,mBAI7C9B,EAJ6C,KAIvC0E,EAJuC,KA4CpDhR,IAAMY,WAAU,WAAQlH,QAAQC,IAAI2S,EAAKgM,UAAW,CAAChM,IA5CD,MA8CLxO,YAA2C,SAAU3D,EAAa,CAC7G4D,UAAW,IACX2J,UAAW,SAACrN,GACRX,QAAQC,IAAIU,GACZge,EA/Dc,SAAChe,GACvB,IAD+C,EAC3C+d,EAAuB,GACvBgB,EAAU,IAAIC,IAF6B,cAGjChf,GAHiC,IAG/C,2BAAmB,CAAC,IAAXiG,EAAU,QACV8Y,EAAQE,IAAIhZ,EAAEiY,YACfH,EAAUjc,KAAK,CAAE1B,GAAI6F,EAAEiY,UAAWgB,YAAajZ,EAAEiZ,cAErDH,EAAQI,IAAIlZ,EAAEiY,YAP6B,8BAU/C,OADA7e,QAAQC,IAAIye,GACLA,EAqDcqB,CAAkBpf,OAJzBqf,EA9CsC,EA8C5C1hB,KA9C4C,KA8C3ByL,UA9C2B,EA8ChBxB,OAQAnE,YAA+C,iBAAkBvD,EAAoB,CACrHwD,UAAW,OADD4b,EAtDsC,EAsD5C3hB,KAIF4hB,GA1D8C,EAsD5B5b,QAIRyJ,aAAYtP,EAAU,CAClCuP,UAAW,SAACrN,GACRyF,EAAM,CAAEpD,YAAarC,EAAIrC,KAAMiK,OAAQ,aAE3C2F,QAAS,SAACiF,GACNnT,QAAQC,IAAIkT,GACZ/M,EAAM,CAAEpD,YAAa,oBAAqBuF,OAAQ,cAS1DjC,IAAMY,WAAU,WACZ,OAAO,WAAqBrJ,aAAa2Q,WAAW,kBACrD,IAEH,IAAM2R,EAAoB,SAACzV,GACvB,GAAsB,MAAlBA,EAAEC,OAAOyV,MAAe,CACxB,IAAMA,EAAQ1M,MAAMrT,KAAKqK,EAAEC,OAAOyV,OAC5BC,EAAW,IAAIC,SAErBD,EAASE,OAAO,QAASH,EAAM,KtBtDjB9hB,EsBuDJ+hB,EtBvDmB9iB,EAAc,CACnDiB,OAAQ,OACRD,IA1D2B,iCA2D3BD,KAAMA,EACNP,QAAS,CACL,eAAiB,0BsBkDOyP,MAAK,SAACe,GAAD,OAASA,EAAIjQ,QAAMkiB,OAAM,SAAA9V,GAAC,OAAI1K,QAAQC,IAAIyK,OtB/BnD+V,EsBgCJ,GtBhCwBrjB,EAAO,CACnDoB,OAAQ,SACRD,IAAI,iCAAD,OAAmCkiB,MsB8BdjT,MAAK,SAAAe,GAAG,OAAIvO,QAAQC,IAAIsO,EAAIjQ,StBhC7B,IAACmiB,EAxBFniB,GsB4DtB,OACI,cAAC,KAAO0L,KAAR,UACI,cAAC,IAAD,yBAAKvF,EAAE,OAAOuD,QAAQ,SAAStE,GAAG,MAASuC,GAA3C,aACI,eAAC,IAAD,CAAQoD,QAAQ,IAAI2B,EAAE,MAAM9C,UAAU,SAAtC,UACI,cAAC,IAAD,CAAKtE,GAAG,KAAKK,SAAS,MAAMN,WAAW,OAAOuE,UAAU,QAAxD,uCACA,cAAC,IAAD,CAASsB,YAAY,iBAGrB,eAAC,IAAD,CAAK/E,EAAG,CAAEqD,KAAM,eAAgBsC,GAAI,QAAUpC,QAAQ,MAAMgD,EAAE,OAAOrH,WAAW,SAAhF,UACI,cAAC,IAAD,CAAKC,GAAG,KAAKK,SAAS,KAAK+G,EAAG,CAAElD,KAAM,OAAQsC,GAAI,OAASqI,GAAG,IAA9D,2BAEA,eAAC,IAAD,CAAQnQ,WAAW,QAAQ0I,EAAE,OAA7B,UACI,eAAC,KAAD,CAAaoF,YAAU,EAACrP,GAAG,YAA3B,UACI,cAAC,KAAD,CAAW6C,GAAG,KAAKK,SAAS,KAA5B,2BACA,cAAC,KAAD,CAAOwF,QAAQ,SAASiX,UAAQ,EAC5B9V,MAAOgI,EAAKhF,KACZnD,SAAU,SAACC,GAAD,OACN4M,GAAQ,SAAA/R,GAAC,kCACFA,GADE,IAELqI,KAAMlD,EAAEC,OAAOC,iBAK/B,eAAC,KAAD,CAAawF,YAAU,EAACrP,GAAG,YAA3B,UACI,cAAC,KAAD,CAAW6C,GAAG,KAAKK,SAAS,KAA5B,6BACA,cAAC,KAAD,CAAQwF,QAAQ,SAASc,YAAY,gCACjCE,SAAU,SAACC,GAAD,OAAO4M,GAAQ,SAAC/R,GAAD,mBAAC,eAAYA,GAAb,IAAgBwZ,WAAYrU,EAAEC,OAAOC,MAAOgU,OAAQ,SADjF,gBAGKqB,QAHL,IAGKA,OAHL,EAGKA,EAAUzb,KAAI,SAAAmc,GACX,OAAO,wBAAQ/V,MAAO+V,EAAG5f,GAAlB,SAAmC4f,EAAG5c,cAAX4c,EAAG5f,YAIjD,eAAC,KAAD,CAAaqP,YAAU,EAACrP,GAAG,mBAA3B,UACI,cAAC,KAAD,CAAW6C,GAAG,KAAKK,SAAS,KAA5B,yBACA,cAAC,KAAD,CAAOwF,QAAQ,SAASiX,UAAQ,EAC5B9V,MAAOgI,EAAK5P,YACZyH,SAAU,SAACC,GAAD,OAAO4M,GAAQ,SAAC/R,GAAD,mBAAC,eAAYA,GAAb,IAAgBvC,YAAa0H,EAAEC,OAAOC,iBAGvE,eAAC,KAAD,CAAawF,YAAU,EAACrP,GAAG,oBAA3B,UACI,cAAC,KAAD,CAAW6C,GAAG,KAAKK,SAAS,KAA5B,0BACA,cAAC,KAAD,CAAU2c,KAAM,EAAGF,UAAQ,EAACjX,QAAQ,SAChCmB,MAAOgI,EAAKoM,YACZvU,SAAU,SAACC,GAAD,OAAO4M,GAAQ,SAAC/R,GAAD,mBAAC,eAAYA,GAAb,IAAgByZ,YAAatU,EAAEC,OAAOC,uBAK/E,cAAC,IAAD,CAASpB,YAAY,iBAGrB,eAAC,IAAD,CAAK/E,EAAG,CAAEqD,KAAM,eAAgBsC,GAAI,QAAUpC,QAAQ,MAAMgD,EAAE,OAAOrH,WAAW,SAAhF,UACI,cAAC,IAAD,CAAKC,GAAG,KAAKK,SAAS,KAAK+G,EAAG,CAAElD,KAAM,OAAQsC,GAAI,OAASqI,GAAG,IAA9D,2BACA,eAAC,IAAD,CAAQnQ,WAAW,QAAQ0I,EAAE,OAA7B,UACI,eAAC,KAAD,CAAaoF,YAAU,EAACrP,GAAG,eAA3B,UACI,cAAC,KAAD,CAAW6C,GAAG,KAAKK,SAAS,KAA5B,qBACA,cAAC,KAAD,CAAQwF,QAAQ,SAASc,YAAY,0BACjCE,SAAU,SAACC,GAAD,OAAO4M,GAAQ,SAAC/R,GAAD,mBAAC,eAAYA,GAAb,IAAgBsZ,UAAWnU,EAAEC,OAAOC,MAAOgU,OAAQ,SADhF,gBAGKF,QAHL,IAGKA,OAHL,EAGKA,EAAWla,KAAI,SAAAqG,GACZ,OAAO,wBAAQD,MAAOC,EAAE9J,GAAjB,SAA0C8J,EAAEgV,aAAlBhV,EAAEgV,qBAI/C,eAAC,KAAD,CAAazP,YAAU,EAACrP,GAAG,YAA3B,UACI,cAAC,KAAD,CAAW6C,GAAG,KAAKK,SAAS,KAA5B,kBACA,cAAC,KAAD,CAAQwF,QAAQ,SAASc,YAAY,uBACjCE,SAAU,SAACC,GACP4M,GAAQ,SAAC/R,GAAD,mBAAC,eAAYA,GAAb,IAAgBqZ,OAAQlU,EAAEC,OAAOC,YAFjD,gBAKKoV,QALL,IAKKA,OALL,EAKKA,EAAWa,QAAO,SAAAC,GAAE,OAAIA,EAAGjC,YAAcjM,EAAKiM,aAAWra,KAAI,SAAAqG,GAC1D,OAAO,wBAAQD,MAAOC,EAAE9J,GAAjB,SAAiC8J,EAAEC,UAATD,EAAE9J,YAI/C,eAAC,IAAD,CAAM+U,QAAQ,IAAI9K,EAAE,OAAOhD,QAAS,CAAEF,KAAM,SAAUsC,GAAI,OAA1D,UACI,eAAC,KAAD,CAAagG,YAAU,EAACrP,GAAG,cAAc0V,KAAK,UAA9C,UACI,cAAC,KAAD,CAAW7S,GAAG,KAAKK,SAAS,KAA5B,yBACA,cAAC,KAAD,CAAOyc,UAAQ,EAACjX,QAAQ,SAASmB,MAAOgI,EAAKuM,WACzC1U,SAAU,SAACC,GAAQ4M,GAAQ,SAAC/R,GAAD,mBAAC,eAAYA,GAAb,IAAgB4Z,WAAYzU,EAAEC,OAAOC,iBAGxE,eAAC,KAAD,CAAawF,YAAU,EAACrP,GAAG,cAAc0V,KAAK,UAA9C,UACI,cAAC,KAAD,CAAW7S,GAAG,KAAKK,SAAS,KAA5B,+BACA,cAAC,KAAD,CAAOyc,UAAQ,EAACjX,QAAQ,SAASmB,MAAOgI,EAAKsM,OACzCzU,SAAU,SAACC,GAAQ4M,GAAQ,SAAC/R,GAAD,mBAAC,eAAYA,GAAb,IAAgB2Z,OAAQxU,EAAEC,OAAOC,oBAIxE,eAAC,KAAD,CAAa7J,GAAG,gBAAhB,UACI,eAAC,KAAD,CAAW6C,GAAG,KAAKK,SAAS,KAA5B,4BAAgD,cAAC,IAAD,CAAKL,GAAG,OAAO6P,UAAU,UAAU9P,WAAW,QAA9C,2BAChD,cAAC,KAAD,CAAO8F,QAAQ,SAASmB,MAAOgI,EAAKmO,YAChCtW,SAAU,SAACC,GAAQ4M,GAAQ,SAAC/R,GAAD,mBAAC,eAAYA,GAAb,IAAgBwb,YAAarW,EAAEC,OAAOC,uBAKjF,cAAC,IAAD,CAASpB,YAAY,iBAGrB,eAAC,IAAD,CAAK/E,EAAG,CAAEqD,KAAM,eAAgBsC,GAAI,QAAUpC,QAAQ,MAAMgD,EAAE,OAAOrH,WAAW,SAASkF,eAAe,gBAAxG,UACI,eAAC,IAAD,CAAKjF,GAAG,KAAKK,SAAS,KAAK+G,EAAG,CAAElD,KAAM,OAAQsC,GAAI,OAASqI,GAAG,IAAItH,SAAS,OAA3E,UACI,cAAC,IAAD,qBACA,cAAC,IAAD,CAAKvH,GAAG,OAAO6P,UAAU,UAAU9P,WAAW,QAA9C,SAAuD,4BAE3D,cAAC,KAAD,CAAO+c,UAAQ,EAACjX,QAAQ,QAAQtH,KAAK,OAAOkY,YAAY,WAAW2G,UAAQ,EAACC,OAAO,UAAUxW,SAAU,SAACC,GAAD,OAAOyV,EAAkBzV,SAEpI,cAAC,IAAD,CAASlB,YAAY,iBAGrB,eAAC,IAAD,CAAK/E,EAAG,CAAEqD,KAAM,eAAgBsC,GAAI,QAAUpC,QAAQ,MAAMgD,EAAE,OAAOrH,WAAW,SAAhF,UACI,cAAC,IAAD,CAAKC,GAAG,KAAKK,SAAS,KAAK+G,EAAG,CAAElD,KAAM,OAAQsC,GAAI,OAASqI,GAAG,IAA9D,sBACA,cAAC,IAAD,CAAKzH,EAAE,OAAP,SACI,eAAC,KAAD,CAAYkW,cAAc,OAAOC,SAAS,OAAOC,SAAS,IAA1D,UACI,eAAC,IAAD,CAAMtL,QAAQ,IAAIxT,WAAW,SAA7B,UACI,cAAC,IAAD,CAAKsB,GAAG,KAAKK,SAAS,KAAtB,wBAGA,cAAC,KAAD,IACA,cAAC,KAAD,CAAYnB,aAAW,QAAQ0H,KAAK,KAAK2B,KAAM,cAAC,KAAD,IAC3CvC,WAAYgJ,EAAK3J,UAAY,EAC7BzG,QAAS,kBAAM8U,GAAQ,SAAC/R,GAAD,mBAAC,eAAYA,GAAb,IAAgB0D,SAAU1D,EAAE0D,mBAEvD,cAAC,IAAD,CAAKrF,GAAG,KAAKK,SAAS,KAAK+G,EAAE,MAAMwO,UAAU,SAA7C,SACK5G,EAAK3J,WAEV,cAAC,KAAD,CAAYnG,aAAW,OAAO0H,KAAK,KAAK2B,KAAM,cAAC,KAAD,IAC1CvC,WAAYgJ,EAAK3J,UAAY,GAC7BzG,QAAS,kBAAM8U,GAAQ,SAAC/R,GAAD,mBAAC,eAAYA,GAAb,IAAgB0D,SAAU1D,EAAE0D,sBAG3D,cAAC,GAAD,CAAgB2E,KAAK,OACjB0Q,KAAM1L,EAAKqE,SAASuI,KACpBhB,OAAQ,SAAC/N,GAAc6G,GAAQ,SAAC/R,GAAD,mBAAC,eAAYA,GAAb,IAAgB0R,SAAS,2BAAO1R,EAAE0R,UAAV,IAAoBuI,KAAM/O,YAErF,cAAC,GAAD,CAAgB7C,KAAK,UACjB0Q,KAAM1L,EAAKqE,SAASoI,QACpBb,OAAQ,SAAC/N,GAAc6G,GAAQ,SAAC/R,GAAD,mBAAC,eAAYA,GAAb,IAAgB0R,SAAS,2BAAO1R,EAAE0R,UAAV,IAAoBoI,QAAS5O,YAExF,cAAC,GAAD,CAAgB7C,KAAK,YACjB0Q,KAAM1L,EAAKqE,SAASmI,UACpBZ,OAAQ,SAAC/N,GAAc6G,GAAQ,SAAC/R,GAAD,mBAAC,eAAYA,GAAb,IAAgB0R,SAAS,2BAAO1R,EAAE0R,UAAV,IAAoBmI,UAAW3O,YAE1F,cAAC,GAAD,CAAgB7C,KAAK,YACjB0Q,KAAM1L,EAAKqE,SAASsI,IACpBf,OAAQ,SAAC/N,GAAc6G,GAAQ,SAAC/R,GAAD,mBAAC,eAAYA,GAAb,IAAgB0R,SAAS,2BAAO1R,EAAE0R,UAAV,IAAoBsI,IAAK9O,YAEpF,cAAC,GAAD,CAAgB7C,KAAK,eACjB0Q,KAAM1L,EAAKqE,SAASqI,QACpBd,OAAQ,SAAC/N,GAAc6G,GAAQ,SAAC/R,GAAD,mBAAC,eAAYA,GAAb,IAAgB0R,SAAS,2BAAO1R,EAAE0R,UAAV,IAAoBqI,QAAS7O,oBAKpG,cAAC,IAAD,CAASjH,YAAY,iBAGrB,eAAC,IAAD,CAAK/E,EAAG,CAAEqD,KAAM,eAAgBsC,GAAI,QAAUpC,QAAQ,MAAMgD,EAAE,OAAOrH,WAAW,SAAhF,UACI,cAAC,IAAD,CAAKC,GAAG,KAAKK,SAAS,KAAK+G,EAAG,CAAElD,KAAM,OAAQsC,GAAI,OAASqI,GAAG,IAA9D,yBACA,eAAC,IAAD,CAAQnQ,WAAW,QAAQ0I,EAAE,OAA7B,UACI,cAAC,GAAD,CAAgBsT,KAA6B,MAAvB1L,EAAKqM,cACvBrR,KAAK,oBAAoBpD,KAAK,KAC9BgU,OAAQ,SAAC/N,GAAc6G,GAAQ,SAAC/R,GAAD,mBAAC,eAAYA,GAAb,IAAgB0Z,cAAexO,EAAU,IAAM,WAE1D,MAAvBmC,EAAKqM,eACF,eAAC,IAAD,6BACoBrM,EAAKqM,cADzB,OAIJ,eAAC,KAAD,CAAQrU,MAAOgI,EAAKqM,cAAeoC,IAAK,EAAGC,IAAK,IAAKC,KAAM,EAAGjN,YAAY,OACtE7J,SAAU,SAAC+W,GAAclK,GAAQ,SAAC/R,GAAD,mBAAC,eAAYA,GAAb,IAAgB0Z,cAAeuC,QADpE,UAEI,cAAC,KAAD,UACI,cAAC,KAAD,MAEJ,cAAC,KAAD,CAAa5U,QAAS,OAE1B,eAAC,KAAD,CAAawD,YAAU,EAACrP,GAAG,kBAAkBmP,UAA8B,IAAnB0C,EAAK6M,UAA7D,UACI,cAAC,KAAD,CAAWpB,QAA4B,IAAnBzL,EAAK6M,UAAkB,GAAM,EAAG7b,GAAG,KAAKK,SAAS,KAArE,wBACA,cAAC,KAAD,CAAa2G,MAAOgI,EAAK6M,UACrBhV,SAAU,SAAC4I,GAAYiE,GAAQ,SAAC/R,GAAD,mBAAC,eAAYA,GAAb,IAAgBka,UAA6B,EAAlBgC,SAASpO,SADvE,SAGI,cAAC,KAAD,CAAkB5J,QAAQ,SAASiX,UAAQ,SAGnD,eAAC,KAAD,CAAatQ,YAAU,EAACrP,GAAG,sBAA3B,UACI,cAAC,KAAD,CAAWsd,QAA8B,IAArBzL,EAAK6B,YAAoB,GAAM,EAAG7Q,GAAG,KAAKK,SAAS,KAAvE,0BACA,cAAC,KAAD,CAAa2G,MAAOgI,EAAK6B,YACrBhK,SAAU,SAAC4I,GAAYiE,GAAQ,SAAC/R,GAAD,mBAAC,eAAYA,GAAb,IAAgBkP,YAA+B,EAAlBgN,SAASpO,SADzE,SAGI,cAAC,KAAD,CAAkB5J,QAAQ,SAASiX,UAAQ,SAGnD,eAAC,KAAD,CAAatQ,YAAU,EAACrP,GAAG,qBAA3B,UACI,cAAC,KAAD,CAAWsd,QAA6B,IAApBzL,EAAK8B,WAAmB,GAAM,EAAG9Q,GAAG,KAAKK,SAAS,KAAtE,yBACA,cAAC,KAAD,CAAa2G,MAAOgI,EAAK8B,WACrBjK,SAAU,SAAC4I,GAAYiE,GAAQ,SAAC/R,GAAD,mBAAC,eAAYA,GAAb,IAAgBmP,WAA8B,EAAlB+M,SAASpO,SADxE,SAGI,cAAC,KAAD,CAAkB5J,QAAQ,SAASiX,UAAQ,eAM3D,eAAC,IAAD,WACI,cAAC,IAAD,CAAM9c,GAAIoO,IAAY1R,GAAG,gBAAgB2Z,OAAQ,CAAErJ,UAAW,QAAUjG,OAAO,SAASnI,QAAS,kBAAM3E,aAAaoQ,QAAQ,cAAerP,KAAKC,UAAU+T,KAA1J,SACI,cAAC,KAAD,CAAQnJ,QAAQ,QAAQH,GAAG,KAAKgL,YAAY,QAA5C,6BAKJ,cAAC,KAAD,CAAQ7K,QAAQ,QAAQtH,KAAK,SAASmS,YAAY,OAAO9R,QAAS,SAACkI,GAAD,OAzOhE,SAACA,GACnBA,EAAEgX,iBACFxB,EAAQtR,OAAOgE,GAuO0E+O,CAAcjX,IAAvF,iC,UCtTTkX,GArBS,WAAO,IAAD,EACFtb,IAAMC,WADJ,mBACnBqM,EADmB,KACb0E,EADa,KAkB1B,OAhBAtX,QAAQC,IAAI2S,GAEZtM,IAAMY,WAAU,WACZ,IAAM0L,EAAO/U,aAAaC,QAAQ,eAIlC,OAHAkC,QAAQC,IAAI2S,GACRA,GAAM0E,EAAQ1Y,KAAKijB,MAAMjP,IAEtB,WACH/U,aAAa2Q,WAAW,kBAE7B,IAEHlI,IAAMY,WAAU,WACZlH,QAAQC,IAAI2S,KACb,CAACA,IAEG,8CC0BLkP,GAAe,kBAAM,eAAC,KAAD,CACvBvZ,OAAO,UACPkB,QAAQ,SACR8P,cAAc,SACdjX,WAAW,SACXuG,eAAe,SACf2Q,UAAU,SACVlW,OAAO,QAPgB,UASvB,cAAC,KAAD,CAAWsJ,QAAQ,OAAOtD,GAAI,IAC9B,cAAC,KAAD,CAAY5F,GAAI,EAAG+O,GAAI,EAAGxO,SAAS,KAAnC,oCAGA,cAAC,KAAD,CAAkBwV,SAAS,KAA3B,6FAKWsI,GA3DU,WAAO,IAAD,IACrBjR,EAAOb,qBAAWnD,IAClB1G,EAAQC,eACRgT,EAAQrI,eAERgR,EAAsB,WACxB3I,EAAM9H,SxBqFoBnU,EAAOiC,KAAmBlC,EAAU,2BwBpF/CqQ,MAAK,SAAA7M,GAChBX,QAAQC,IAAIU,GACO,MAAfA,EAAI4H,SACJ1K,aAAaoQ,QAAQ,QAAStN,EAAIrC,KAAKV,OACvCkT,EAAK/B,YAAYpO,EAAIrC,KAAKV,OAC1BwI,EAAM,CACFpD,YAAa,2CACbuF,OAAQ,gBAGjBiY,OAAM,SAAArN,GACL/M,EAAM,CACFpD,YAAamQ,EACb5K,OAAQ,cAKpB,OACI,eAAC,IAAD,CAAK9D,EAAE,OAAOuD,QAAQ,SAAS8N,QAAQ,IAAImM,aAAa,SAASpZ,eAAe,SAAhF,UACI,cAAC,KAAD,CAAQrG,QAAS,kBAAMwf,KACnB1N,YAAY,QAAQtJ,EAAE,OACtBpB,WAAU,UAAEkH,EAAK5D,YAAP,aAAE,EAAWW,MAAMoE,SAAS,SACtC/J,UAAU,SAHd,UAKK,UAAA4I,EAAK5D,YAAL,eAAWW,MAAMoE,SAAS,UAAW,0BAA4B,+BAEtE,cAAC,KAAD,CAAUzB,GAAI6I,EAAM7H,OAApB,SACI,cAAC,GAAD,UCVV0Q,GAAUC,YAAY,CAC1BxkB,OAAQ,CACNykB,iBAAkB,QAEpBC,WAAY,CACVvQ,OAAQ,CACNwQ,aAAc,OAMdC,GAAc,IAAIC,KAAY,CAClCC,eAAgB,CACdC,QAAS,MAOAC,GAAM,WACjB,IAAMC,EAAatc,SAAkB,MAyBrC,OApBAA,aAAgB,WACdsc,EAAWC,QAAQC,WAEnB1lB,EAAOI,aAAaC,QAAQC,KAAI,SAACC,GAE/B,OADAilB,EAAWC,QAAQE,cACZplB,KACN,SAAC+M,GAEF,OADAkY,EAAWC,QAAQC,WACZ3kB,QAAQC,OAAOsM,MAGxBtN,EAAOI,aAAaS,SAASP,KAAI,SAACC,GAEhC,OADAilB,EAAWC,QAAQC,WACZnlB,KACN,SAAC+M,GAEF,OADAkY,EAAWC,QAAQC,WACZ3kB,QAAQC,OAAOsM,QAEvB,IAGD,cAAC,IAAD,CAAYsY,SAAS,IAArB,SACE,cAAC,IAAD,CAAgBC,MAAOf,GAAvB,SACE,cAACgB,GAAA,EAAD,CAAqBC,OAAQZ,GAA7B,SACE,eAAC,IAAD,CAAK9d,EAAE,OAAOuD,QAAQ,SAAS5E,KAAK,QAApC,UACE,eAAC,GAAD,WACE,cAAC,GAAD,IACA,eAAC,IAAD,CAAKqT,KAAK,IAAV,UACE,cAAC,KAAD,CAAYzS,MAAM,UAAUwI,IAAKoW,IACjC,eAAC,IAAD,WACE,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAOC,UAAWC,GAAWH,OAAK,EAACC,KAAK,SACtCG,OAAQ,gBAAGxM,EAAH,EAAGA,SAAH,OACN,cAAC,IAAD,CAAU1W,GAAI,CAAEoC,SAAU,SAAUC,MAAO,CAAEtC,KAAM2W,SAGvD,eAAC,IAAD,CAAKrN,GAAI,CAAE7B,KAAM,OAAQC,GAAI,OAAQqC,GAAI,SAAW1G,GAAG,IAAvD,UACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0f,OAAK,EAACC,KAAK,eAAeC,UAAWlM,KAC5C,cAAC,IAAD,CAAOgM,OAAK,EAACC,KAAK,SAASC,UAAW1I,KACtC,cAAC,IAAD,CAAOwI,OAAK,EAACC,KAAK,gBAAgBC,UAAW1B,KAC7C,cAAC,GAAD,CAAWwB,OAAK,EAACC,KAAK,WAAWC,UAAWtF,KAC5C,cAAC,GAAD,CAAWnQ,MAAO,CAAC,SAAUuV,OAAK,EAACC,KAAK,gBAAgBC,UAAW7E,KALrE,SAKyG,CAAC,SACxG,cAAC,GAAD,CAAW2E,OAAK,EAACC,KAAK,sBAAsBC,UAAWvB,KACvD,cAAC,GAAD,CAAWlU,MAAO,CAAC,SAAUuV,OAAK,EAACC,KAAK,WACxC,cAAC,IAAD,CAAOC,UAAWhK,oBAM5B,cAAC,IAAD,CAAS5V,GAAG,OACZ,cAAC,GAAD,CAAQiG,GAAI,CAAE7B,KAAM,OAAQC,GAAI,OAAQqC,GAAI,qBAelDmZ,GAAY,WAChB,IAAMvM,EAAW5F,cACXN,EAAOxK,aAAiBwG,IAExBzM,GAAS2W,EAASrU,OAAS,CAAEtC,KAAM,CAAEqC,SAAU,OAA/CrC,KACN,OAAIyQ,EAAK5D,KAAa,cAAC,IAAD,CAAU5M,GAAID,IAGlC,eAAC,IAAD,CAAKsJ,GAAG,MAAMjG,GAAG,KAAK+S,KAAK,IAA3B,UACE,cAAC,GAAD,IACA,cAAC,GAAD,CAAWtH,eAAe,QAK1BsU,GAAkC,SAAC,GAA2B,IAAzBvkB,EAAwB,EAAxBA,SAAawkB,EAAW,4BAEjE,OADWpd,aAAiBwG,IACnBI,KAAc,cAAC,IAAD,2BAAWwW,GAAX,aAAkBxkB,KAE5B,cAAC,IAAD,2BAAWwkB,GAAX,aACX,cAAC,IAAD,CAAUpjB,GAAI,CACZoC,SAAU,SACVC,MAAO,CACLtC,KAAMqjB,EAAKL,aAUbM,GAAY,SAAC1d,GAAwC,IAAD,EAChD4H,EAA6B5H,EAA7B4H,MAAO3O,EAAsB+G,EAAtB/G,SAAawkB,EAD4B,YACnBzd,EADmB,sBAElD6K,EAAOxK,aAAiBwG,IAE9B,IAAKgE,EAAK5D,KAAM,OAAQ,cAAC,IAAD,2BAAWwW,GAAX,aACtB,cAAC,IAAD,CAAUpjB,GAAI,CACZoC,SAAU,SACVC,MAAO,CACLtC,KAAMqjB,EAAKL,YAejB,OAVsB,SAACO,EAA8BC,GACnD,IAAKD,EAAU,OAAO,EACtB,IAAKC,EAAS,OAAO,EAFqD,oBAI1DA,GAJ0D,IAI1E,2BAAyB,CAAC,IAAfC,EAAc,QACvB,IAAKF,EAAS3R,SAAS6R,GAAI,OAAO,GALsC,8BAO1E,OAAO,EAGLC,CAAa,UAACjT,EAAK5D,YAAN,aAAC,EAAWW,MAAOA,GAAgB,cAAC,IAAD,2BAAW6V,GAAX,aAAkBxkB,KAEpE,cAAC,IAAD,2BAAWwkB,GAAX,aACE,cAAC,IAAD,CAAUpjB,GAAI,CACZoC,SAAU,SACVC,MAAO,CACLwL,QAAS,iCAOb6V,GAAc,WAAO,IACjBthB,EAAa0O,cAAb1O,SAKR,OAJA4D,aAAgB,WACdgV,OAAO2I,SAAS,EAAG,KAClB,CAACvhB,IAEG,MCtMTwhB,IAASV,OACP,eAAC,aAAD,WACE,cAAC,IAAD,CAAiBpB,iBAAkBa,QAAMtlB,OAAOykB,mBAChD,cAAC,GAAD,OAEF+B,SAASC,eAAe,W","file":"static/js/main.8ac564a9.chunk.js","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\n\r\n// export const API_URL = \"http://localhost:44344\";\r\nexport const API_URL = process.env.NODE_ENV === \"development\" ? \"http://localhost:44344\" : \"https://nicehostel.herokuapp.com\";\r\nconst API_IMAGE_UPLOADER_URL = \"https://api.imgur.com/3/upload\";\r\nconst API_IMAGE_CLIENT_ID = \"30ca2ca5dd1f71d\";\r\n// const API_IMAGE_CLIENT_SECRET = \"5e497c2ba20ff36c20aa512366ddee25300c56e1\";\r\n\r\nexport const axAuth = axios.create();\r\nexport const axImageUpload = axios.create();\r\n\r\naxAuth.interceptors.request.use((config) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n\r\n    return config;\r\n})\r\n\r\naxAuth.interceptors.response.use((response) => {\r\n    return response;\r\n}, function (error) {\r\n    // if (error.response.status === 401) {\r\n    //     console.log('unauthorized');\r\n    //     localStorage.removeItem(\"token\");\r\n    // }\r\n    // if (error.response.status === 403){\r\n    //     console.log(\"Forbidden\");\r\n    // }\r\n    // else if(error.response.status === 404){\r\n    //     return Promise.reject(\"Connection error\")\r\n    // }\r\n    return Promise.reject(error.response);\r\n});\r\n\r\n// axios.interceptors.request.use((req) => {\r\n//     req.headers.Authorization = `Client-ID : ${API_IMAGE_CLIENT_ID}`\r\n//     return req;\r\n// })\r\n\r\ntype ReviewRequest = {\r\n    comment?: string;\r\n    reviewStar: number;\r\n    \r\n}\r\nexport const postReview = (data: PostReviewRequest) => {\r\n    return axAuth({\r\n        url: API_URL + \"/api/reviews/\",\r\n        method: \"POST\",\r\n        data: data,\r\n    })\r\n}\r\n\r\nexport const postRoom = (data: PublishRoomState) => {\r\n    return axAuth({\r\n        method: \"POST\",\r\n        url: API_URL + \"/api/properties/\",\r\n        data: data,\r\n    })\r\n}\r\n\r\nexport const postImage = (data : any) => axImageUpload({\r\n    method: \"post\",\r\n    url: API_IMAGE_UPLOADER_URL,\r\n    data: data,\r\n    headers: {\r\n        'Content-Type' : 'multipart/form-data',\r\n    },\r\n})\r\n\r\nexport const postReservation = (bookInfo: BookingInfo) => axAuth({\r\n    url: API_URL + \"/api/reservations\",\r\n    method: \"POST\",\r\n    data: JSON.stringify({\r\n        \"propertyId\": bookInfo.roomId,\r\n        \"fromDate\" : bookInfo.bookFromDate,\r\n        \"toDate\" : bookInfo.bookToDate,\r\n        \"adultNum\": bookInfo.guest,\r\n        \"childrenNum\" : bookInfo.children\r\n    }),        \r\n    headers: {\r\n        'Content-Type': \"application/json\"\r\n    }\r\n});\r\n\r\nexport const deleteImage = (delHash: string) => axAuth({\r\n    method: \"DELETE\",\r\n    url: `https://api.imgur.com/3/image/${delHash}`,\r\n})\r\n\r\nexport const authenticate = (req: LoginRequest) => {\r\n    return axAuth.post<UserResponse>(API_URL + \"/api/user/authenticate\", {\r\n            \"email\": req.email,\r\n            \"password\": req.password\r\n        });\r\n}\r\n\r\nexport const registerHost = () => axAuth.post<UserResponse>(API_URL + \"/api/user/register-host\");\r\n\r\nexport const register = (req: RegisterRequest) =>{\r\n    return axios.post<UserResponse>(API_URL + \"/api/user/register-user\", {\r\n        \"email\": req.email,\r\n        \"password\": req.password,\r\n        \"confirmPassword\": req.confirmPassword\r\n    })\r\n}\r\n\r\nexport const fetchPropertiesView = async (typeId: string | undefined, query: SearchQuery) => {\r\n    await new Promise(resolve => setTimeout(resolve, 500));\r\n    let URI = `/api/properties`;\r\n    console.log(query);\r\n    return axios.get<RoomCard[]>(API_URL + URI,{\r\n        params: {\r\n            typeId : typeId,\r\n            city: query.city,\r\n            from: query.from,\r\n            to: query.to,\r\n            guestNum : query.guestNum,\r\n            childrenNum: query.childrenNum,\r\n        }\r\n    });\r\n}\r\n\r\nexport const fetchCities = async () => {\r\n    // const res = await ax({\r\n    //     method: \"GET\",\r\n    //     url: URL + \"api/city\",\r\n    //     timeout: 5000\r\n    // });\r\n    // return res;\r\n    const res = await fetch(API_URL + \"/api/cities\");\r\n    const data = res.json();\r\n    return data;\r\n}\r\n\r\nexport const fetchPropertyTypes = async () => {\r\n    const res = await fetch(API_URL + \"/api/propertytypes\");\r\n    const data: PropertyTypeType[] = await res.json();\r\n    return data;\r\n}\r\n\r\nexport const fetchPropertyById = async (id: string) => {\r\n    return axAuth.get<Room>(API_URL + \"/api/properties/\" + id);\r\n}\r\n\r\nexport const fetchPropertiesSaved = () => {\r\n    return axAuth.get<RoomCard[]>(API_URL + \"/api/properties/saved\");\r\n}\r\n\r\nexport const fetchUserReservation = async () => {\r\n    return axAuth.get<ReservationResponse[]>(API_URL + \"/api/reservations/user\");\r\n}\r\n\r\nexport const fetchPricing = (bookInfo: BookingInfo) => {\r\n    console.log(bookInfo);\r\n    return axios.get<CheckPricingResponse>(API_URL + \"/api/reservations/check-pricing\",{\r\n        params: {\r\n            fromDate: bookInfo.bookFromDate,\r\n            toDate: bookInfo.bookToDate,\r\n            propertyId: bookInfo.roomId,\r\n            guestNum: bookInfo.guest,\r\n            childrenNum: bookInfo.children\r\n        }\r\n    })\r\n}\r\n\r\nexport const fetchReviewsForProperty = async (propId?: string) => {\r\n    return axAuth.get<Review[]>(API_URL + `/api/reviews`, {\r\n        params: {\r\n            propertyId: propId,\r\n        }\r\n    });\r\n}\r\n\r\nexport const deleteReservation = async (resId: string) => {\r\n    return axAuth.delete(API_URL + \"/api/reservations/\" + resId);\r\n}\r\n\r\ninterface ToggleLikeProps {\r\n    roomId: string,\r\n    token: string,\r\n}\r\n\r\ntype ToggleLikeResponse = {\r\n    liked: boolean\r\n}\r\n\r\nexport const toggleLike = ({roomId, token}: ToggleLikeProps) => {\r\n    return axAuth.post<ToggleLikeResponse>(`${API_URL}/api/likes/${roomId}`,{},{\r\n        headers:{\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    });\r\n}\r\n\r\nexport const validateToken = (token: string) => {\r\n    return fetch(`${API_URL}/api/user/validate-token`, {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n}","import { Box, Flex, Grid, Link as ChakraLink, Spacer, VStack, Image, Tooltip, Button } from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport Slider, { Settings } from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { isError, useQuery } from 'react-query';\r\nimport { fetchPropertyTypes } from '../../API';\r\n\r\nvar settings: Settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 1,\r\n    initialSlide: 0,\r\n    swipeToSlide: true,\r\n    responsive: [\r\n        {\r\n            breakpoint: 1024,\r\n            settings: {\r\n                slidesToShow: 4,\r\n                slidesToScroll: 1,\r\n                infinite: true,\r\n                dots: true\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 600,\r\n            settings: {\r\n                slidesToShow: 3,\r\n                slidesToScroll: 1,\r\n                initialSlide: 2\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 480,\r\n            settings: {\r\n                slidesToShow: 1,\r\n                slidesToScroll: 1\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\nconst PropertyTypeList = () => {\r\n    const { data, isError, isFetching } = useQuery<unknown, unknown, PropertyTypeType[]>(\"propertypeList\", fetchPropertyTypes, {\r\n        staleTime: 1000 * 60 * 10\r\n    });\r\n\r\n    if (isFetching) console.log(\"refetching prop\")\r\n\r\n    if (isError) return <Box>Something's wrong</Box>\r\n    return (\r\n        <div>\r\n            <Slider {...settings}>\r\n                {data?.map((d, key) => <PropertyType type={d} key={key} />)}\r\n            </Slider>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype PropertyTypeProps = {\r\n    type: PropertyTypeType;\r\n}\r\n\r\n\r\n\r\nconst PropertyType: React.FC<PropertyTypeProps> = ({ type, children }) => {\r\n    const history = useHistory();\r\n\r\n    const handlePropTypeClick = () => {\r\n        history.push({\r\n            pathname: \"/rooms\",\r\n            state: {\r\n                type: type\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <VStack alignItems=\"start\" p=\"4\">\r\n            <ChakraLink onClick={handlePropTypeClick}>\r\n                <Tooltip hasArrow placement=\"top\" aria-label={\"tooltips\"} label={type.description} openDelay={500}>\r\n                    <Box>\r\n                        <Box maxW=\"sm\" maxH=\"sm\" minH=\"100px\">\r\n                            <Image width=\"inherit\" height=\"inherit\" src={type.thumbnailImg} objectFit=\"cover\"></Image>\r\n                        </Box>\r\n\r\n                        <Box\r\n                            mt=\"1\"\r\n                            fontWeight=\"semibold\"\r\n                            as=\"h4\"\r\n                            lineHeight=\"tight\"\r\n                            isTruncated\r\n                        >\r\n                            {type.propertyType}\r\n                        </Box>\r\n                    </Box>\r\n                </Tooltip>\r\n            </ChakraLink>\r\n            <Box color=\"gray.500\" fontSize=\"md\">\r\n                {type.count + \" \" + type.propertyType + \"\"}\r\n            </Box>\r\n        </VStack>\r\n    )\r\n}\r\n\r\nexport default PropertyTypeList;","import { Box, BoxProps, Button, Center, Flex, useBreakpointValue, useColorModeValue, useToast } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport DayPicker from 'react-day-picker';\r\nimport { DateUtils } from \"react-day-picker\";\r\nimport 'react-day-picker/lib/style.css';\r\n\r\nconst today = new Date(Date.now());\r\n\r\ntype PropertySchedule = {\r\n    reservedDates?: {\r\n        fromDate: string;\r\n        toDate: string;\r\n    }[],\r\n\r\n    dayOff?: Date[];\r\n}\r\n\r\nconst defaultSchedules: PropertySchedule = {\r\n    reservedDates: [\r\n        {\r\n            fromDate: \"2021-04-19\",\r\n            toDate: \"2021-04-21\"\r\n        },\r\n        {\r\n            fromDate: \"2021-04-21\",\r\n            toDate: \"2021-04-24\"\r\n        },\r\n        {\r\n            fromDate: \"2021-04-30\",\r\n            toDate: \"2021-05-01\"\r\n        }\r\n    ],\r\n}\r\n\r\nexport const getDatesBetween = (fromDate: string, toDate: string) => {\r\n    const from = new Date(fromDate);\r\n    const to = new Date(toDate);\r\n    let datesBtw: Date[] = [];\r\n    let start = from;\r\n    start.setDate(start.getDate() + 1);\r\n\r\n    while (start.getDate() < to.getDate()) {\r\n        datesBtw.push(new Date(start));\r\n        start.setDate(start.getDate() + 1);\r\n    }\r\n    return datesBtw;\r\n}\r\n\r\nconst getDisabledDates = (schedules?: PropertySchedule) => {\r\n    let disabledDates: Date[] = [];\r\n\r\n    if (schedules?.reservedDates) {\r\n        for (let i = 0; i < schedules.reservedDates.length; i++) {\r\n            disabledDates.push(...getDatesBetween(schedules.reservedDates[i].fromDate, schedules.reservedDates[i].toDate))\r\n        }\r\n    }\r\n\r\n    if (schedules?.dayOff) disabledDates.push(...schedules.dayOff);\r\n    return disabledDates;\r\n}\r\n\r\nconst getDateCheckOutOnly = (schedules?: PropertySchedule) => {\r\n    return schedules?.reservedDates?.map(r => new Date(r.fromDate));\r\n}\r\n\r\nconst getNextPossibleDate = (day: Date, schedules?: PropertySchedule) => {\r\n    let nextDay: Date | undefined = undefined;\r\n\r\n    if (schedules?.reservedDates) {\r\n        schedules.reservedDates.forEach(r => {\r\n            const rFrom = new Date(r.fromDate);\r\n\r\n            if (rFrom > day) {\r\n                if (!nextDay) nextDay = rFrom;\r\n                else if (rFrom <= nextDay) nextDay = rFrom;\r\n            }\r\n        })\r\n    }\r\n    if (nextDay !== day) return nextDay;\r\n    return null;\r\n}\r\n\r\ntype PickRangeDayState = {\r\n    from?: Date;\r\n    to?: Date;\r\n    enteredTo?: Date; // keep track of the last day for mouseEnter\r\n}\r\n\r\ntype PickRangeDayProps = {\r\n    from?: Date,\r\n    to?: Date,\r\n    updateDate: (from?: Date, to?: Date) => void,\r\n    schedules?: PropertySchedule\r\n}\r\n\r\nconst defaultDate: PickRangeDayState = {\r\n    from: undefined,\r\n    to: undefined,\r\n    enteredTo: undefined\r\n}\r\n\r\nconst PickRangeDay: React.FC<PickRangeDayProps & BoxProps> = (props) => {\r\n    const { from, to, updateDate, schedules, ...boxProps } = props;\r\n\r\n    const toast = useToast();\r\n    const [state, setState] = React.useState<PickRangeDayState>({ from: from, to: to });\r\n\r\n    const disabled = [\r\n        {\r\n            before: new Date(Date.now())\r\n        },\r\n        ...getDisabledDates(schedules),\r\n    ]\r\n\r\n    const [disabledDays, setDisabledDays] = React.useState(disabled)\r\n\r\n    React.useEffect(() => {\r\n        if ((state.from && state.to) || (!state.from && !state.to)) {\r\n            updateDate(state.from, state.to);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [state.from, state.to]);\r\n\r\n    const isSelectingFirstDay = (day: Date, from?: Date, to?: Date) => {\r\n        const isBeforeFirstDay = from && DateUtils.isDayBefore(day, from);\r\n        const isRangeSelected = from && to;\r\n        return !from || isBeforeFirstDay || isRangeSelected;\r\n    }\r\n\r\n    const handleDayMouseEnter = (day: Date) => {\r\n        const { from, to } = state;\r\n        if (!isSelectingFirstDay(day, from, to)) {\r\n            setState(s => ({\r\n                ...s,\r\n                enteredTo: day,\r\n            }));\r\n        }\r\n    }\r\n\r\n    const handleDayClick = (day: Date, modifiers: any) => {\r\n        if (modifiers.disabled) return;\r\n\r\n        const today = new Date(Date.now());\r\n        if (day < today) return;\r\n        const { from, to } = state;\r\n        if (from && to && day >= from && day <= to) {\r\n            handleResetClick();\r\n            return;\r\n        }\r\n        // if selecting first day, recalculate disabled days to this chosen day\r\n        if (isSelectingFirstDay(day, from, to)) {\r\n            if (modifiers.checkoutOnly) {\r\n                toast({\r\n                    status: \"info\",\r\n                    description: \"Check out only!\",\r\n                    duration: 3000\r\n                })\r\n                return;\r\n            }\r\n            setDisabledDays((s) => ({ ...s, before: day, after: getNextPossibleDate(day, schedules) }))\r\n\r\n            setState({\r\n                from: day,\r\n                to: undefined,\r\n                enteredTo: undefined,\r\n            });\r\n        }\r\n        // else, set every things back to normal\r\n        else {\r\n            setDisabledDays(disabled);\r\n            // prevent from = to\r\n            if (state.from?.getDate() === day.getDate()) {\r\n                setState({\r\n                    from: undefined,\r\n                    to: undefined,\r\n                    enteredTo: undefined,\r\n                });\r\n                return;\r\n            }\r\n            setState(s => ({\r\n                ...s,\r\n                to: day,\r\n                enteredTo: day,\r\n            }));\r\n        }\r\n    }\r\n\r\n    const handleResetClick = () => {\r\n        setState(defaultDate);\r\n    }\r\n\r\n    const selected = [state.from, { from: state.from, to: state.enteredTo }];\r\n\r\n\r\n    const modifiers = {\r\n        start: state.from,\r\n        end: state.enteredTo,\r\n        checkoutOnly: getDateCheckOutOnly(schedules),\r\n    }\r\n\r\n    const monthNum = useBreakpointValue({ base: 1, md: 2 });\r\n\r\n    return (\r\n        <Box d=\"flex\" flexDir=\"column\" {...boxProps} overflow=\"clip\">\r\n            <Box alignSelf=\"center\">\r\n                <DayPicker\r\n                    numberOfMonths={monthNum}\r\n                    fromMonth={state.from}\r\n                    modifiers={modifiers as any}\r\n                    onDayClick={handleDayClick}\r\n                    disabledDays={disabledDays}\r\n                    onDayMouseEnter={handleDayMouseEnter}\r\n                    selectedDays={selected as any}>\r\n                </DayPicker>\r\n            </Box>\r\n            <Flex justifyContent=\"center\" alignItems=\"center\">\r\n                {!state.from && !state.to && 'Please select the first day.'}\r\n                {state.from && !state.to && 'Please select the last day.'}\r\n                {state.from &&\r\n                    state.to &&\r\n                    `Selected from ${state.from.toLocaleDateString()} to\r\n                ${state.to.toLocaleDateString()}`}{' '}\r\n                {state.from && state.to && (\r\n                    <Button onClick={handleResetClick}>\r\n                        Reset\r\n                    </Button>\r\n                )}\r\n            </Flex>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default PickRangeDay;","import { Box, Flex, VStack, Text, Spacer, Square, Button, StackDivider } from '@chakra-ui/react';\r\nimport React from 'react';\r\n\r\ntype PopDetailState = {\r\n    guest: number;\r\n    children: number;\r\n}\r\n\r\ninterface PopDetailProps extends PopDetailState {\r\n    updatePeople: (guest: number, children: number) => void;\r\n    maxGuest?: number;\r\n}\r\n\r\nconst PopDetail: React.FC<PopDetailProps> = ({ guest, children, updatePeople, maxGuest }) => {\r\n    return (\r\n        <Box p=\"4\" style={{ backdropFilter: \"blur(5px)\" }}>\r\n            <VStack align=\"stretch\" spacing={4}>\r\n                <Flex alignItems=\"center\">\r\n                    <Text mr=\"auto\" fontSize=\"md\">Guests</Text>\r\n                    <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                        <Button variant=\"ghost\" borderRadius=\"0\" disabled={guest <= 0}\r\n                            onClick={() => updatePeople(--guest, children)}>-</Button>\r\n                    </Square>\r\n                    <Text mx=\"4\" fontSize=\"md\">{guest}</Text>\r\n                    <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                        <Button variant=\"ghost\" borderRadius=\"0\"\r\n                            disabled={maxGuest !== undefined && guest >= maxGuest}\r\n                            onClick={() => updatePeople(++guest, children)}>+</Button>\r\n                    </Square>\r\n                </Flex>\r\n                <Flex alignItems=\"center\">\r\n                    <Text mr=\"auto\" fontSize=\"md\">Children</Text>\r\n                    <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                        <Button variant=\"ghost\" borderRadius=\"0\" disabled={children <= 0 ? true : false}\r\n                            onClick={() => updatePeople(guest, --children)}>-</Button>\r\n                    </Square>\r\n                    <Text mx=\"4\" fontSize=\"md\">{children}</Text>\r\n                    <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                        <Button variant=\"ghost\" borderRadius=\"0\"\r\n                            isDisabled={children >= 5}\r\n                            onClick={() => updatePeople(guest, ++children)}>+</Button>\r\n                    </Square>\r\n                </Flex>\r\n            </VStack>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default PopDetail;","import { Box, Button, Center, Flex, Input, InputGroup, InputLeftElement, InputRightElement, Popover, PopoverContent, PopoverTrigger, Portal, Spinner, useColorModeValue } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport { BsSearch } from 'react-icons/bs';\r\nimport { useQuery } from 'react-query';\r\nimport { Redirect, useHistory } from 'react-router';\r\nimport { fetchCities } from '../../API';\r\n// import 'react-day-picker/lib/style.css';\r\nimport PickRangeDay from './PickRangeDay';\r\nimport PopDetail from './PopDetail';\r\n\r\nexport type CityResponse = {\r\n    cityName: string;\r\n    id: string;\r\n    countryName: string;\r\n    countryId: string;\r\n}\r\n\r\ntype SearchBarProps = {\r\n    search: SearchQuery;\r\n    isLoading?: boolean;\r\n    updateSearch?: (search: SearchQuery) => void;\r\n    onClickSearch?: () => void;\r\n}\r\n\r\nconst defaultValue: SearchQuery = {\r\n    guestNum: 0,\r\n    childrenNum: 0,\r\n}\r\n\r\n\r\nconst SearchBar = (props: SearchBarProps) => {\r\n    const { data: cities, isLoading, status } = useQuery<unknown, unknown, CityResponse[]>(\"cities\", fetchCities, {\r\n        staleTime: 1000 * 60 * 10\r\n    });\r\n    const history = useHistory();\r\n\r\n    const { search: form } = props;\r\n\r\n    React.useEffect(() => {\r\n        if (props.updateSearch) {\r\n            console.log(\"update form\")\r\n            props.updateSearch(form);\r\n        }\r\n    }, [form])\r\n\r\n    // if (isLoading) return <>loading...</>;\r\n\r\n    const UpdateDate = (from?: Date, to?: Date) => {\r\n        if (props.updateSearch) {\r\n            props?.updateSearch({\r\n                ...props.search,\r\n                from: from,\r\n                to: to\r\n            });\r\n        }\r\n    }\r\n\r\n    const UpdatePeople = (adult: number, children: number) => {\r\n        if (props.updateSearch) {\r\n            props?.updateSearch({\r\n                ...props.search,\r\n                guestNum: adult,\r\n                childrenNum: children\r\n            });\r\n        }\r\n    }\r\n\r\n    const UpdateCity = (city: string) => {\r\n        if (props.updateSearch) {\r\n            props?.updateSearch({\r\n                ...props.search,\r\n                city: city\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleSearchClick = () => {\r\n        history.push({\r\n            pathname: \"/rooms\",\r\n            state: {\r\n                search: props.search\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box p=\"2\" border=\"1px\" borderColor=\"yellow.400\" style={{ backdropFilter: \"blur(5px)\" }}>\r\n            <Flex display={{ lg: \"flex\" }} alignItems=\"center\">\r\n                <InputGroup>\r\n                    <InputLeftElement pointerEvents=\"none\" children={<BsSearch />} />\r\n                    <Input list=\"datalist-cities\" placeholder=\"City\" size=\"lg\" borderRadius=\"0\"\r\n                        onChange={(e) => UpdateCity(e.target.value)}\r\n                        value={props.search.city}\r\n                    />\r\n                    {isLoading ? <InputRightElement children={<Spinner alignSelf=\"center\" />}></InputRightElement> :\r\n                        <datalist id=\"datalist-cities\">\r\n                            {cities?.map(c => {\r\n                                return <option key={c.id} value={c.cityName} />\r\n                            })}\r\n                        </datalist>\r\n                    }\r\n                </InputGroup>\r\n                <Popover closeOnBlur={true}>\r\n                    <PopoverTrigger>\r\n                        <Button variant=\"outline\" w={[\"100%\", \"100%\", \"100%\", \"150%\"]}\r\n                            size=\"lg\" _focusVisible={{ border: \"0\" }} borderRadius=\"0\" px=\"2\">\r\n                            {form?.from?.toLocaleDateString() || \"From\"} - {form?.to?.toLocaleDateString() || \"To\"}\r\n                        </Button>\r\n                    </PopoverTrigger>\r\n                    <Portal>\r\n                        <PopoverContent\r\n                            flexWrap=\"nowrap\" alignItems=\"center\" style={{ backdropFilter: \"blur(5px)\" }}\r\n                            w=\"100%\" borderRadius=\"0\"\r\n                            bgColor={useColorModeValue(\"gray.100\", \"gray.800\")}\r\n                        >\r\n                            <PickRangeDay updateDate={UpdateDate} />\r\n                        </PopoverContent>\r\n                    </Portal>\r\n                </Popover>\r\n                <Popover>\r\n                    <PopoverTrigger>\r\n                        <Button variant=\"outline\" w={[\"100%\", \"100%\", \"100%\", \"150%\"]} size=\"lg\"\r\n                            borderRadius=\"0\" px=\"2\"\r\n                        >\r\n                            {form.guestNum + ' guests - ' + form.childrenNum + ' children'}\r\n                        </Button>\r\n                    </PopoverTrigger>\r\n                    <Portal>\r\n                        <PopoverContent flexWrap=\"nowrap\" borderRadius=\"0\" bg=\"inherit\"\r\n                            bgColor={useColorModeValue(\"gray.100\", \"gray.800\")}\r\n                        >\r\n                            <PopDetail updatePeople={UpdatePeople} guest={form.guestNum!} children={form.childrenNum!}></PopDetail>\r\n                        </PopoverContent>\r\n                    </Portal>\r\n                </Popover>\r\n                <Button alignSelf=\"center\" size=\"lg\" minW=\"100px\" ml={[0, 0, 0, 2]}\r\n                    onClick={props.onClickSearch ? props.onClickSearch : handleSearchClick}\r\n                    isLoading={props.isLoading}\r\n                    mt={[2, 2, 2, 0]} w={[\"100%\", \"100%\", \"100%\", \"30%\"]} borderRadius=\"0\">\r\n                    Search\r\n                </Button>\r\n            </Flex>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","export default __webpack_public_path__ + \"static/media/HomeBG.c3c3859c.webp\";","import * as React from \"react\"\r\nimport {\r\n  useColorMode,\r\n  useColorModeValue,\r\n  IconButton,\r\n  IconButtonProps,\r\n} from \"@chakra-ui/react\"\r\nimport { FaMoon, FaSun } from \"react-icons/fa\"\r\n\r\ntype ColorModeSwitcherProps = Omit<IconButtonProps, \"aria-label\">\r\n\r\nexport const ColorModeSwitcher: React.FC<ColorModeSwitcherProps> = (props) => {\r\n  const { toggleColorMode } = useColorMode()\r\n  const text = useColorModeValue(\"dark\", \"light\")\r\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun)\r\n\r\n  return (\r\n    <IconButton\r\n      size=\"md\"\r\n      fontSize=\"lg\"\r\n      variant=\"ghost\"\r\n      color=\"current\"\r\n      marginLeft=\"2\"\r\n      onClick={toggleColorMode}\r\n      icon={<SwitchIcon />}\r\n      aria-label={`Switch to ${text} mode`}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.314a949b.svg\";","import * as React from \"react\"\r\nimport {\r\n  chakra,\r\n  keyframes,\r\n  ImageProps,\r\n  forwardRef,\r\n  usePrefersReducedMotion,\r\n} from \"@chakra-ui/react\"\r\nimport logo from \"./logo.svg\"\r\n\r\nconst spin = keyframes`\r\n  from { transform: rotate(0deg); }\r\n  to { transform: rotate(360deg); }\r\n`\r\n\r\nexport const Logo = forwardRef<ImageProps, \"img\">((props, ref) => {\r\n  const prefersReducedMotion = usePrefersReducedMotion()\r\n\r\n  const animation = prefersReducedMotion\r\n    ? undefined\r\n    : `${spin} infinite 20s linear`\r\n\r\n  return <chakra.img animation={animation} boxSize=\"30px\" src={logo} ref={ref} {...props} />\r\n})\r\n","import { useToast } from '@chakra-ui/toast';\r\nimport { AxiosResponse } from 'axios';\r\nimport jwtDecode, { JwtPayload } from 'jwt-decode';\r\nimport React from 'react';\r\nimport { useMutation, useQueryClient } from 'react-query';\r\nimport { authenticate, register, validateToken } from '../API';\r\n\r\ninterface UserTokenPayload extends JwtPayload {\r\n    roles: string[] | string;\r\n    email: string;\r\n    name: string;\r\n}\r\n\r\ntype AuthContextStates = {\r\n    loginAsync: (request: LoginRequest) => any\r\n    registerAsync: (request: RegisterRequest) => any\r\n    logoutAsync: () => Promise<void>;\r\n    updateToken: (token: string) => void;\r\n    user?: UserResponse;\r\n    isLoading: boolean;\r\n}\r\n\r\nexport const AuthContext = React.createContext<AuthContextStates>({} as AuthContextStates);\r\n\r\nexport const AuthProvider: React.FC = ({ children }) => {\r\n    const [isLoading, setIsLoading] = React.useState<boolean>(false);\r\n    const [user, setUser] = React.useState<UserResponse | undefined>(undefined);\r\n    const [token, setToken] = React.useState(localStorage.getItem(\"token\"));\r\n\r\n    const queryClient = useQueryClient();\r\n\r\n    const toast = useToast();\r\n\r\n    /**\r\n     * Check for token in localStorage\r\n     */\r\n    React.useEffect(() => {\r\n        const tokenStorage = localStorage.getItem(\"token\");\r\n        if (tokenStorage) {\r\n            validateToken(tokenStorage).then(res => {\r\n                console.log(\"validating...\")\r\n                if (res.status !== 200) return logoutAsync(\"Token expired\");\r\n            })\r\n            setToken(tokenStorage);\r\n        }\r\n    }, [])\r\n\r\n    /**\r\n     * If token changes, update user and axios.interceptor\r\n     */\r\n    React.useEffect(() => {\r\n        if (token) {\r\n            const decodedUser = jwtDecode<UserTokenPayload>(token);\r\n            setUser({\r\n                email: decodedUser.email,\r\n                name: decodedUser.name,\r\n                roles: decodedUser.roles,\r\n                token: token\r\n            })\r\n        }\r\n    }, [token]);\r\n\r\n    const updateToken = (token: string) => {\r\n        setToken(token);\r\n    }\r\n\r\n\r\n    // TODO: fix token validation\r\n    // const validation = useQuery([\"validateToken\", user?.token], () => {\r\n    //     if (user?.token) return validateToken(user?.token)\r\n    // }, {\r\n    //     refetchInterval: 1000 * 60,\r\n    //     staleTime: 1000 * 60 * 60 * 24,\r\n    //     onSuccess: () => {\r\n    //         axios.interceptors.request.use((config) => {\r\n    //             if (user?.token) {\r\n    //                 config.headers.Authorization = `Bearer ${user.token}`;\r\n    //             }\r\n    //             return config;\r\n    //         }, (e) => {\r\n    //             return Promise.reject(e);\r\n    //         })\r\n    //     }\r\n    // })\r\n\r\n    const mutateLogin = useMutation<AxiosResponse<UserResponse>, any, LoginRequest>(authenticate, {\r\n        onSuccess: (res) => {\r\n            setToken(res.data.token);\r\n            localStorage.setItem(\"token\", res.data.token);\r\n            toast({ description: \"Logged in successfully\", status: \"success\", duration: 3000 });\r\n        },\r\n        onError: (res) => { toast({ description: res.data.message, status: \"error\", duration: 3000 }) },\r\n        onSettled: () => setIsLoading(false)\r\n    })\r\n\r\n    const mutateRegister = useMutation<AxiosResponse<UserResponse>, any, RegisterRequest>(register, {\r\n        onSuccess: (res) => {\r\n            // setUser(res.data);\r\n            setToken(res.data.token);\r\n            localStorage.setItem(\"token\", res.data.token);\r\n            toast({ description: \"Logged in successfully\", status: \"success\", duration: 3000 });\r\n        },\r\n        onError: (res) => {\r\n            console.log(res.data);\r\n            for (let i = 0; i < res.data.messages.length; i++) {\r\n                toast({ description: res.data.messages[i], status: \"error\", duration: 3000 })\r\n            }\r\n        },\r\n        onSettled: () => setIsLoading(false)\r\n    })\r\n\r\n    const logoutAsync = async (msg?: string) => {\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        setUser(undefined);\r\n        setToken(null);\r\n        localStorage.removeItem(\"token\");\r\n        toast({\r\n            title: msg ? msg : \"Logged out successfully!\",\r\n            isClosable: true,\r\n            duration: 3000,\r\n            status: \"success\"\r\n        })\r\n        await new Promise(resolve => setTimeout(resolve, 500));\r\n    }\r\n\r\n    const loginAsync = async (request: LoginRequest) => {\r\n        setIsLoading(true);\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        try {\r\n            mutateLogin.mutate(request);\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n        finally {\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    const registerAsync = async (request: RegisterRequest) => {\r\n        setIsLoading(true);\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        try {\r\n            mutateRegister.mutate(request);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        finally {\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            loginAsync: loginAsync,\r\n            logoutAsync: logoutAsync,\r\n            updateToken: updateToken,\r\n            isLoading: isLoading,\r\n            user: user,\r\n            registerAsync: registerAsync\r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}","import { Box, FormControl, FormLabel, Input, Button, Checkbox, FormErrorMessage, chakra, useDisclosure, Collapse } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport { FaArrowRight } from 'react-icons/fa';\r\nimport { useHistory } from 'react-router';\r\nimport { AuthContext } from '../Contexts/AuthContext';\r\n\r\ntype LoginFormProps = {\r\n    initRef?: React.RefObject<HTMLInputElement>;\r\n    fromUrl?: string;\r\n    isRegistering: boolean;\r\n}\r\n\r\ntype FormState = {\r\n    email?: string;\r\n    password?: string;\r\n    confirmedPassword?: string;\r\n    remember: boolean;\r\n    isRegistering: boolean;\r\n}\r\n\r\nfunction validateEmail(email: string | undefined) {\r\n    if (!email) return false;\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n}\r\n\r\n\r\nconst LoginForm: React.FC<LoginFormProps> = ({ initRef, fromUrl, isRegistering }) => {\r\n    const history = useHistory();\r\n\r\n    const [loginForm, setLoginForm] = React.useState<FormState>({\r\n        remember: false,\r\n        isRegistering: isRegistering\r\n    });\r\n\r\n    const [emailError, setEmailError] = React.useState(false);\r\n    const [passwordError, setPasswordError] = React.useState(false);\r\n    const [confirmPasswordError, setConfirmPasswordError] = React.useState(false);\r\n\r\n    const validateForm = (email: string | undefined, password: string | undefined) => {\r\n        if (validateEmail(email)) {\r\n            setEmailError(false);\r\n        } else setEmailError(true);\r\n        if (password === \"\") {\r\n            setPasswordError(true)\r\n        } else setPasswordError(false);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        validateForm(loginForm.email, loginForm.password);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [loginForm.email, loginForm.password])\r\n\r\n    React.useEffect(() => {\r\n        if (loginForm.isRegistering && loginForm.confirmedPassword === loginForm.password) {\r\n            console.log(loginForm.password);\r\n            console.log(loginForm.confirmedPassword);\r\n\r\n            setConfirmPasswordError(false);\r\n            console.log(confirmPasswordError);\r\n        } else setConfirmPasswordError(true);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [loginForm.confirmedPassword, loginForm.isRegistering, loginForm.password])\r\n\r\n    const authContext = React.useContext(AuthContext);\r\n\r\n    const handleLogin = () => {\r\n        authContext.loginAsync(loginForm);\r\n        if (fromUrl) history.replace(fromUrl);\r\n    }\r\n\r\n    const handleRegister = () => {\r\n        authContext.registerAsync({ email: loginForm.email, password: loginForm.password, confirmPassword: loginForm.confirmedPassword });\r\n        if (fromUrl) history.replace(fromUrl);\r\n    }\r\n\r\n    const toggleMode = () => {\r\n        setLoginForm((s) => ({\r\n            ...s,\r\n            isRegistering: !s.isRegistering\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <chakra.form d=\"flex\" flexDir=\"column\">\r\n            <FormControl isInvalid={emailError}>\r\n                <FormLabel htmlFor=\"email\">Email</FormLabel>\r\n                <Input placeholder=\"Enter your email\" id=\"email\" isInvalid={emailError} ref={initRef} variant=\"filled\" size=\"lg\" type=\"email\"\r\n                    value={loginForm.email} isRequired\r\n                    onChange={(e) => setLoginForm(s => ({\r\n                        ...s,\r\n                        email: e.target.value.trim()\r\n                    }))}></Input>\r\n                <FormErrorMessage>{\"Email not correct\"}</FormErrorMessage>\r\n            </FormControl>\r\n\r\n            <FormControl isInvalid={passwordError}>\r\n                <FormLabel htmlFor=\"password\" my=\"2\">Password</FormLabel>\r\n                <Input placeholder=\"Enter your password\" id=\"password\" isInvalid={passwordError} variant=\"filled\" size=\"lg\" type=\"password\"\r\n                    value={loginForm.password} minLength={1} isRequired\r\n                    onChange={(e) => setLoginForm(s => ({\r\n                        ...s,\r\n                        password: e.target.value\r\n                    }))}></Input>\r\n            </FormControl>\r\n\r\n            <Collapse in={loginForm.isRegistering}>\r\n                <FormControl isInvalid={confirmPasswordError}>\r\n                    <FormLabel htmlFor=\"confirm-password\" my=\"2\">Confirm Password</FormLabel>\r\n                    <Input placeholder=\"Confirm your password\" id=\"confirm-password\" isInvalid={confirmPasswordError} variant=\"filled\" size=\"lg\" type=\"password\"\r\n                        value={loginForm.confirmedPassword} minLength={1} isRequired\r\n                        onChange={(e) => setLoginForm(s => ({\r\n                            ...s,\r\n                            confirmedPassword: e.target.value\r\n                        }))}></Input>\r\n                </FormControl>\r\n                <FormErrorMessage>{\"Password does not match\"}</FormErrorMessage>\r\n            </Collapse>\r\n\r\n            <Checkbox size=\"lg\" checked={loginForm.remember} mt=\"2\"\r\n                onChange={(e) => setLoginForm(s => ({ ...s, remember: e.target.checked }))}>\r\n                Remember me\r\n                </Checkbox>\r\n\r\n            <Button my=\"3\" w=\"30%\" rounded=\"full\" type=\"submit\" alignSelf=\"center\" title=\"Login\"\r\n                isLoading={authContext.isLoading}\r\n                isDisabled={loginForm.isRegistering ? emailError || passwordError || confirmPasswordError : emailError || passwordError}\r\n                onClick={!loginForm.isRegistering ? handleLogin : handleRegister}>\r\n                <FaArrowRight />\r\n            </Button>\r\n\r\n            <Button variant=\"link\" alignSelf=\"center\" textStyle=\"\" onClick={() => toggleMode()}>{!loginForm.isRegistering ? \"Register your account!\" : \"Or login instead!\"}</Button >\r\n        </chakra.form>\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import React, { FC } from 'react';\r\nimport { Box, BoxProps, Button, Center, DarkMode, Flex, Heading, HStack, Menu, MenuButton, MenuDivider, MenuItem, MenuList, Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay, Spacer, useColorModeValue, useDisclosure } from '@chakra-ui/react';\r\nimport { ColorModeSwitcher } from '../../ColorModeSwitcher';\r\nimport { Logo } from \"../../Logo\";\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport { AuthContext } from '../../Contexts/AuthContext';\r\nimport { BsBell, BsBookmark, BsBoxArrowDown, BsCalendar, BsChevronDown, BsHouse, BsLock, BsPerson } from 'react-icons/bs';\r\nimport LoginForm from '../LoginForm';\r\n\r\nconst Navbar: FC<BoxProps> = ({ ...props }) => {\r\n    const auth = React.useContext(AuthContext);\r\n    const loginFormModal = useDisclosure();\r\n    const initRef = React.useRef<HTMLInputElement>(null);\r\n    const [isRegistering, setIsRegistering] = React.useState(false);\r\n\r\n    // check if we are at homepage, then do a bit of theme modification\r\n    const { pathname } = useLocation();\r\n    const bgColorMenuWhenHome = useColorModeValue(\"gray.800\", \"gray.800\");\r\n    const colorMenuWhenHome = useColorModeValue(\"white\", \"white\");\r\n\r\n    const becomehostColor = useColorModeValue(\"cyan.200\", \"blue.400\");\r\n\r\n    return (\r\n        <Box marginBottom={[\"5%\"]} {...props}>\r\n            <Flex justifyContent=\"center\" alignItems=\"center\">\r\n                <RouterLink to=\"/\">\r\n                    <HStack spacing={4}>\r\n                        <Center>\r\n                            <Logo />\r\n                        </Center>\r\n                        <Heading size=\"md\" display={{ base: \"none\", sm: \"block\" }}>Nice homestays</Heading>\r\n                    </HStack>\r\n                </RouterLink>\r\n                <Spacer />\r\n                <HStack spacing={4}>\r\n                    <ColorModeSwitcher />\r\n                    {auth.user === undefined ?\r\n                        <>\r\n                            <Button variant=\"ghost\" onClick={() => { loginFormModal.onOpen(); setIsRegistering(false); }}>Login</Button>\r\n                            <Modal isOpen={loginFormModal.isOpen} onClose={loginFormModal.onClose} size=\"xl\" motionPreset=\"slideInBottom\" isCentered initialFocusRef={initRef}>\r\n                                <ModalOverlay />\r\n\r\n                                <ModalContent>\r\n                                    <ModalHeader>{isRegistering ? \"Sign up new account\" : \"Login\"}</ModalHeader>\r\n                                    <ModalCloseButton />\r\n                                    <ModalBody pb=\"2\">\r\n                                        <LoginForm initRef={initRef} isRegistering={isRegistering}></LoginForm>\r\n                                    </ModalBody>\r\n                                </ModalContent>\r\n                            </Modal>\r\n                            <Button variant=\"ghost\" onClick={() => { loginFormModal.onOpen(); setIsRegistering(true); }}>Register</Button>\r\n                        </> :\r\n                        <>\r\n                            <Menu>\r\n                                <MenuButton as={Button} variant=\"ghost\" rightIcon={<BsChevronDown />}>\r\n                                    {auth.user.name}\r\n                                </MenuButton>\r\n                                <MenuList>\r\n                                    <MenuItem as={RouterLink} to=\"/profile?view=likes\">\r\n                                        <Box mr={\"3\"}><BsBookmark /></Box>\r\n                                        Saved rooms\r\n                                    </MenuItem>\r\n                                    <MenuItem as={RouterLink} to=\"/profile?view=reservations\">\r\n                                        <Box mr={\"3\"}><BsCalendar /></Box>\r\n                                        Your Reservations\r\n                                    </MenuItem>\r\n                                    <MenuItem as={RouterLink} to=\"/profile?view=notifications\">\r\n                                        <Box mr=\"3\"><BsBell /></Box>\r\n                                        Notifications\r\n                                    </MenuItem>\r\n                                    <MenuDivider />\r\n                                    {auth.user.roles?.includes(\"Owner\") ?\r\n                                        <>\r\n                                            <MenuItem as={RouterLink} to=\"/user/publish\">\r\n                                                <Box mr=\"3\"><BsLock /></Box>\r\n                                        Host your property\r\n                                        </MenuItem>\r\n                                            <MenuItem as={RouterLink} to=\"/user/publish\">\r\n                                                <Box mr=\"3\"><BsHouse /></Box>\r\n                                        Your properties\r\n                                        </MenuItem>\r\n                                        </>\r\n                                        :\r\n                                        <MenuItem bg={becomehostColor} as={RouterLink} to=\"/user/register-host\">\r\n                                            <Box mr=\"3\"><BsLock /></Box>\r\n                                        Become a host\r\n                                        </MenuItem>\r\n                                    }\r\n                                    <MenuItem as={RouterLink} to=\"/\">\r\n                                        <Box mr=\"3\"><BsPerson /></Box>\r\n                                        Account\r\n                                    </MenuItem>\r\n                                    <MenuDivider />\r\n                                    <MenuItem onClick={() => auth.logoutAsync()}>\r\n                                        <Box mr=\"3\"><BsBoxArrowDown /></Box>\r\n                                        Log Out\r\n                                    </MenuItem>\r\n                                </MenuList>\r\n                            </Menu>\r\n                        </>\r\n                    }\r\n                </HStack>\r\n            </Flex>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react'\r\nimport PropertyTypeList from '../Components/HomeComponents/PropertyTypeList'\r\nimport SearchBar from '../Components/NavComponents/SearchBar';\r\nimport { Box, DarkMode, HStack, Spacer, Link } from \"@chakra-ui/react\"\r\nimport BG from \"../Images/HomeBG.webp\";\r\nimport Navbar from '../Components/NavComponents/Navbar';\r\nimport { Link as ReactLink } from 'react-router-dom';\r\nimport { BsArrowRight } from 'react-icons/bs';\r\n\r\n\r\nconst HomePage = () => {\r\n    const px = \"10%\";\r\n    const [search, setSearch] = React.useState<SearchQuery>({ childrenNum: 0, guestNum: 0 });\r\n    const updateSearch = (search: SearchQuery) => {\r\n        setSearch(search)\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <Box minH={[\"50vh\", \"75vh\", \"85vh\"]} style={{ background: \"url('\" + BG + \"') center/cover\", }} color=\"white\">\r\n                <Box px={px} pt=\"5\">\r\n                    <Navbar></Navbar>\r\n                    <DarkMode>\r\n                        <SearchBar search={search} updateSearch={updateSearch} />\r\n                    </DarkMode>\r\n                    <Box as=\"h1\" fontFamily=\"mono\" textShadow=\"gray 2px 2px 2px\" color=\"whiteAlpha.600\" fontWeight=\"bold\" fontSize={[\"3xl\", \"4xl\", \"6xl\", \"8xl\"]}\r\n                        mt={[\"5vh\", \"10vh\", \"20vh\", \"30vh\"]}>EXPLORE AROUND</Box>\r\n                </Box>\r\n            </Box>\r\n            <Box px={px} mt=\"10\">\r\n                <HStack>\r\n                    <Box as=\"h2\" fontWeight=\"bold\" fontSize=\"4xl\" mb=\"5\">\r\n                        LIVE ANYWHERE\r\n                    </Box>\r\n                    <Spacer />\r\n                    <Link as={ReactLink} to={\"/rooms\"} d={\"flex\"} flexDir=\"row\" alignItems=\"center\">All properties <Box ml=\"2\"><BsArrowRight /></Box></Link>\r\n                </HStack>\r\n                <PropertyTypeList></PropertyTypeList>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\nexport default HomePage;","import { useDisclosure, useToast, Box, Flex, Spacer, Popover, PopoverTrigger, HStack, Button, PopoverContent, Collapse, Tooltip, Spinner, Divider } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport { BsStarFill, BsStar } from 'react-icons/bs';\r\nimport { useQuery, useMutation } from 'react-query';\r\nimport { useHistory } from 'react-router';\r\nimport { fetchPricing, postReservation } from '../API';\r\nimport { AuthContext } from '../Contexts/AuthContext';\r\nimport PickRangeDay, { getDatesBetween } from './NavComponents/PickRangeDay';\r\nimport PopDetail from './NavComponents/PopDetail';\r\n\r\ntype FloatingFormProps = {\r\n    room: Room;\r\n    bookInfo: BookingInfo;\r\n    updatePeople: (adult: number, children: number) => void;\r\n    updateDate: (from?: Date | undefined, to?: Date | undefined) => void;\r\n}\r\n\r\nconst FloatingForm: React.FC<FloatingFormProps> = ({ room, bookInfo, updateDate, updatePeople }) => {\r\n    const auth = React.useContext(AuthContext);\r\n    const history = useHistory();\r\n    const feeCollapse = useDisclosure();\r\n    const [nightCount, setNightCount] = React.useState<number>(0);\r\n    const toast = useToast();\r\n\r\n    const checkPricing = useQuery([\"pricing\", bookInfo], () => {\r\n        if (bookInfo.roomId && bookInfo.bookFromDate && bookInfo.bookToDate) {\r\n            return fetchPricing(bookInfo)\r\n        }\r\n    }, {\r\n        onSuccess: (data) => console.log(data?.data),\r\n        staleTime: 1000 * 60\r\n    })\r\n\r\n    const reservMutation = useMutation(postReservation, {\r\n        onSuccess: (data) => {\r\n            toast({ description: \"Success\", status: \"success\", isClosable: true });\r\n            history.push(\"/profile?view=reservations\");\r\n        },\r\n        onError: (err) => {\r\n            toast({ description: \"Something's wrong\", status: \"error\", isClosable: true });\r\n        }\r\n    });\r\n\r\n    const handleCheckout = async () => {\r\n        if (!auth.user) return toast({\r\n            description: \"Login is required\",\r\n            status: \"info\",\r\n            isClosable: true\r\n        })\r\n        reservMutation.mutate(bookInfo);\r\n    }\r\n\r\n    let price = checkPricing.data?.data;\r\n\r\n    React.useEffect(() => {\r\n        if (bookInfo.bookFromDate && bookInfo.bookToDate) {\r\n            setNightCount(getDatesBetween(bookInfo.bookFromDate.toDateString(), bookInfo.bookToDate.toDateString()).length + 1)\r\n            return feeCollapse.onOpen();\r\n        }\r\n        return feeCollapse.onClose();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [bookInfo.bookFromDate, bookInfo.bookToDate])\r\n\r\n    return (\r\n        <Box display=\"inline-flex\" flexDir=\"column\" alignContent=\"center\" justifyContent=\"center\">\r\n            <Flex alignItems=\"baseline\">\r\n                <Box as=\"h2\" fontFamily=\"mono\" fontSize=\"3xl\" fontWeight=\"semibold\">{room.formattedPrice + \"$ \"}\r\n                </Box>\r\n                <Box as=\"span\" color=\"gray.500\" fontStyle=\"italic\">\r\n                    / per night\r\n                </Box>\r\n                <Spacer />\r\n                <Box d=\"flex\" alignItems=\"center\">\r\n                    {Array(5).fill(\"\").map((_, i) => {\r\n                        return (i < Math.round(room.totalStar / room.totalReview) ? <BsStarFill key={i} colorRendering=\"teal.400\" /> : <BsStar key={i} />)\r\n                    })}\r\n                </Box>\r\n            </Flex>\r\n\r\n            {/* Pop over */}\r\n            <Box mt=\"4\">\r\n                <Popover closeOnBlur={true}>\r\n                    <PopoverTrigger>\r\n                        <HStack spacing=\"0\">\r\n                            <Button variant=\"outline\" borderTopLeftRadius=\"lg\"\r\n                                size=\"lg\" w=\"100%\"\r\n                                _focusVisible={{ border: \"0\" }}\r\n                                borderRadius=\"0\">\r\n                                {bookInfo?.bookFromDate?.toLocaleDateString() || \"From\"}\r\n                            </Button>\r\n                            <Button variant=\"outline\" borderTopRightRadius=\"lg\"\r\n                                size=\"lg\" w=\"100%\"\r\n                                _focusVisible={{ border: \"0\" }}\r\n                                borderRadius=\"0\">\r\n                                {bookInfo?.bookToDate?.toLocaleDateString() || \"To\"}\r\n                            </Button>\r\n                        </HStack>\r\n                    </PopoverTrigger>\r\n                    <PopoverContent flexWrap=\"nowrap\" alignItems=\"center\" w=\"100%\"\r\n                        style={{ backdropFilter: \"blur(5px)\" }}\r\n                        borderRadius=\"0\" bg=\"inherit\"\r\n                        bgColor=\"rgba(66, 153, 225, 0.5)\"\r\n                    >\r\n                        <PickRangeDay schedules={{ reservedDates: room.reservedDates, dayOff: room.daysOff }} updateDate={updateDate} />\r\n                    </PopoverContent>\r\n                </Popover>\r\n                <Popover>\r\n                    <PopoverTrigger>\r\n                        <Button variant=\"outline\" w=\"100%\" size=\"lg\" borderRadius=\"0\" borderBottomRadius=\"lg\" px=\"2\">{bookInfo.guest + ' guests - ' + bookInfo.children + ' children'}</Button>\r\n                    </PopoverTrigger>\r\n                    <PopoverContent flexWrap=\"nowrap\" borderRadius=\"0\" bg=\"inherit\"\r\n                        bgColor=\"rgba(66, 153, 225, 0.5)\"\r\n                    >\r\n                        <PopDetail updatePeople={updatePeople} guest={bookInfo.guest} children={bookInfo.children} maxGuest={room.maxGuest}></PopDetail>\r\n                    </PopoverContent>\r\n                </Popover>\r\n            </Box>\r\n\r\n            <Button variant=\"solid\" colorScheme=\"green\" alignSelf=\"stretch\" mt=\"4\"\r\n                isDisabled={!feeCollapse.isOpen}\r\n                onClick={handleCheckout}\r\n            >\r\n                {!feeCollapse.isOpen ? \"Choose dates to see detail\" : \"Proceed checkout\"}\r\n            </Button>\r\n            <Box alignSelf=\"center\" my=\"2\" fontWeight=\"thin\" fontStyle=\"oblique\">You won't be charged yet</Box>\r\n\r\n            {/* Fee details */}\r\n            <Collapse in={feeCollapse.isOpen}>\r\n                <Box fontSize=\"lg\">\r\n                    <Flex alignItems=\"baseline\">\r\n                        <Tooltip label={nightCount && `You are currently booking ${price?.nightCount} night(s)`}\r\n                            placement=\"left\" hasArrow>\r\n                            <Box fontWeight=\"light\" textDecoration=\"underline\">{room.formattedPrice}$ x {price?.nightCount} nights</Box>\r\n                        </Tooltip>\r\n                        <Spacer />\r\n                        {checkPricing.isLoading ? <Spinner /> :\r\n                            <Box fontFamily=\"mono\" >{price && `${price?.pricePerNight * price?.nightCount} $`}</Box>\r\n                        }\r\n                    </Flex>\r\n                    <Flex alignItems=\"baseline\">\r\n                        <Tooltip label=\"The owner keeps your place in highest cleanliness\" placement=\"left\" hasArrow>\r\n                            <Box fontWeight=\"light\" textDecoration=\"underline\">Cleaning fee</Box>\r\n                        </Tooltip>\r\n                        <Spacer />\r\n                        {checkPricing.isLoading ? <Spinner /> :\r\n                            <Box fontFamily=\"mono\">{price?.cleaningFee} $</Box>\r\n                        }\r\n                    </Flex>\r\n                    <Flex alignItems=\"baseline\">\r\n                        <Tooltip label=\"This helps us run our platform and offer services like 24/7 support on your trip. It includes VAT.\" placement=\"left\" hasArrow>\r\n                            <Box fontWeight=\"light\" textDecoration=\"underline\">Service fee</Box>\r\n                        </Tooltip>\r\n                        <Spacer />\r\n                        {checkPricing.isLoading ? <Spinner /> :\r\n                            <Box fontFamily=\"mono\">{price?.serviceFee} $</Box>\r\n                        }\r\n                    </Flex>\r\n                    <Flex alignItems=\"baseline\">\r\n                        <Tooltip label=\"We offer you discount based on your reservation!\" placement=\"left\" hasArrow>\r\n                            <Box fontWeight=\"light\" textDecoration=\"underline\">\r\n                                Discount\r\n                                <Box as=\"span\" textDecoration=\"none\" mx=\"2\">\r\n                                    {price ? price.discountPercent + \"%\" : \"0%\"}\r\n                                </Box>\r\n                            </Box>\r\n                        </Tooltip>\r\n                        <Spacer />\r\n                        {checkPricing.isLoading ? <Spinner /> :\r\n                            <Box fontFamily=\"mono\">{price?.discount} $</Box>\r\n                        }\r\n                    </Flex>\r\n                    <Divider my=\"2\" colorScheme=\"green\" variant=\"dashed\" />\r\n                    <Flex fontWeight=\"black\" fontSize=\"3xl\">\r\n                        <Box fontFamily=\"mono\">Total</Box>\r\n                        <Spacer />\r\n                        {checkPricing.isLoading ? <Spinner /> :\r\n                            <Box fontFamily=\"mono\">{price?.totalCost} $</Box>\r\n                        }\r\n                    </Flex>\r\n                </Box>\r\n            </Collapse>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default FloatingForm;","import { Box, Icon, HStack, VStack, Center } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport { IconType } from 'react-icons'\r\nimport { RiStarLine, RiUserStarLine } from \"react-icons/ri\";\r\n\r\ntype MyRoomBadgeProps = {\r\n    id: string;\r\n}\r\n\r\nconst MyRoomBadge: React.FC<MyRoomBadgeProps> = ({ id }) => {\r\n    const [icon, setIcon] = React.useState<IconType>();\r\n    const [badge, setBadge] = React.useState<RoomBadge>();\r\n\r\n    React.useEffect(() => {\r\n        let foundBadge = defaultRoomBadges.find(b => b.id === id);\r\n        setBadge(foundBadge);\r\n        switch (id) {\r\n            case \"1\":\r\n                setIcon(RiUserStarLine);\r\n                break;\r\n\r\n            default:\r\n                setIcon(RiStarLine);\r\n                break;\r\n        }\r\n    }, [id])\r\n\r\n    return (\r\n        <HStack alignContent=\"center\" spacing=\"0\" mb=\"2\">\r\n            <Icon d=\"flex\" boxSize=\"10\" alignItems=\"center\" justifyContent=\"center\" mt=\"2\" ml=\"2\">{icon}</Icon>\r\n            <VStack alignItems=\"start\" spacing=\"0\">\r\n                <Box as=\"h4\" fontSize=\"md\" fontWeight=\"semibold\">{badge?.title}</Box>\r\n                <Box as=\"h5\" fontSize=\"sm\" m=\"0\">{badge?.description}</Box>\r\n            </VStack>\r\n        </HStack>\r\n    )\r\n}\r\n\r\nexport const defaultRoomBadges: RoomBadge[] = [\r\n    {\r\n        id: \"1\",\r\n        title: \"Helpful owner\",\r\n        description: \"Owner provides best services\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        title: \"Extra clean\",\r\n        description: \"Owner follows our strict policies of enhanced clealiness\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        title: \"Not smoking\",\r\n        description: \"Owner does not allow smoking inside\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        title: \"Free cancelation\",\r\n        description: \"You can cancel with full refund in 24 hours\"\r\n    }\r\n]\r\n\r\nexport default MyRoomBadge;","import { Box, Button, Divider, Grid, GridItem, Spacer, Image, HStack, Flex, VStack, Avatar, useToast, BoxProps } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport { BsStarFill, BsStar, BsHeart, BsHeartFill } from 'react-icons/bs';\r\nimport { useMutation, useQuery } from 'react-query';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { fetchPropertyById, fetchReviewsForProperty, toggleLike } from '../API';\r\nimport PickRangeDay from '../Components/NavComponents/PickRangeDay';\r\nimport FloatingForm from '../Components/ReservationForm';\r\nimport MyRoomBadge, { defaultRoomBadges } from '../Components/SingleRoomComponents/MyRoomBadge';\r\nimport { AuthContext } from '../Contexts/AuthContext';\r\n\r\ntype SlugProps = {\r\n    slug: string;\r\n}\r\n\r\ntype SingleRoomProps = {\r\n    initRoom: Room;\r\n}\r\n\r\nconst SingleRoom: React.FC<SingleRoomProps> = ({ initRoom, children }) => {\r\n    const auth = React.useContext(AuthContext);\r\n\r\n    const [room, setRoom] = React.useState(defaultRoom);\r\n    const [bookInfo, setBookInfo] = React.useState<BookingInfo>({ guest: 0, children: 0 });\r\n    const [owner, setOwner] = React.useState<UserInfo>();\r\n    const [didLike, setDidLike] = React.useState(false);\r\n\r\n    const { slug } = useParams<SlugProps>();\r\n    const toast = useToast();\r\n\r\n    const { data, isError, error, isLoading } = useQuery([\"property\", slug],\r\n        () => {\r\n            return fetchPropertyById(slug);\r\n        },\r\n        {\r\n            // staleTime: 1000 * 60 * 3,\r\n            retry: 2,\r\n            onError: (error) => {\r\n                console.log(error);\r\n            },\r\n            onSuccess: (rs) => {\r\n                if (rs.data.liked) setDidLike(rs.data.liked);\r\n                setRoom({ ...rs.data, roomBadges: badges });\r\n                setBookInfo(bi => ({ ...bi, roomId: rs.data.id }))\r\n            },\r\n            onSettled: () => {\r\n            }\r\n        });\r\n\r\n    const mutateLike = useMutation(toggleLike, {\r\n        onSuccess: (res) => {\r\n            setDidLike(res.data.liked);\r\n            toast({\r\n                description: res.data.liked ? \"Saved room\" : \"Removed from wishlist\",\r\n                status: \"info\",\r\n                duration: 1000\r\n            });\r\n        },\r\n        onError: (error) => console.log(error)\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        setOwner(defaultOwner);\r\n    }, [])\r\n\r\n    const updateDate = (from?: Date, to?: Date) => {\r\n        setBookInfo(s => ({\r\n            ...s,\r\n            bookFromDate: from,\r\n            bookToDate: to\r\n        }));\r\n    }\r\n\r\n    const updatePeople = (adult: number, children: number) => {\r\n        setBookInfo((s) => ({\r\n            ...s,\r\n            guest: adult,\r\n            children: children,\r\n        }));\r\n    }\r\n\r\n    const handleLike = () => {\r\n        if (!auth.user) {\r\n            toast({\r\n                description: \"Login is required\",\r\n                status: \"info\",\r\n                duration: 1000\r\n            });\r\n            return;\r\n        }\r\n        mutateLike.mutate({ roomId: room.id, token: auth.user.token })\r\n    }\r\n\r\n    if (data) return (\r\n        <Box>\r\n            <Divider my=\"5\" />\r\n            {/* title */}\r\n            <Box as=\"h2\" fontSize=\"3xl\" fontWeight=\"semibold\">{room.name}</Box>\r\n\r\n            {/* rating, location, like button */}\r\n            <Box d=\"flex\" mt=\"1\" flexDir={{ base: \"column\", sm: \"row\" }}>\r\n                <Box d=\"flex\" alignItems=\"start\">\r\n                    <Box d=\"flex\" flexDir={{ base: \"column\", sm: \"row\" }}>\r\n                        <Box d=\"flex\" flexDir={{ base: \"row\" }}>\r\n                            {Array(5).fill(\"\").map((_, i) => {\r\n                                return (i < Math.round(room.totalStar / room.totalReview) ? <BsStarFill key={i} colorRendering=\"teal.400\" /> : <BsStar key={i} />)\r\n                            })}\r\n                        </Box>\r\n                        <Box as=\"span\" ml=\"2\" color=\"gray.500\">{room.totalReview} reviews</Box>\r\n                    </Box>\r\n                    <Spacer />\r\n                    <Link to=\"/\">\r\n                        <Button variant=\"link\">\r\n                            <Box mx=\"4\">&bull;</Box>\r\n                            {room.location}\r\n                        </Button>\r\n                    </Link>\r\n                </Box>\r\n\r\n                <Spacer />\r\n\r\n                <Button alignSelf=\"start\" variant=\"ghost\" size=\"sm\"\r\n                    onClick={() => handleLike()}\r\n                    leftIcon={(!didLike || !auth.user) ? <BsHeart /> : <BsHeartFill color=\"red\" />}>Like</Button>\r\n            </Box>\r\n\r\n            {/* image display */}\r\n            <Box borderRadius=\"lg\" overflow=\"hidden\" mt=\"4\">\r\n                <Grid gap=\"2\" h=\"40%\" maxH=\"450px\" objectFit=\"cover\"\r\n                    templateRows=\"repeat(2, 1fr)\"\r\n                    templateColumns=\"repeat(4, 1fr)\">\r\n                    {room.images.slice(0, 5).map((image, i) => {\r\n                        return (\r\n                            <GridItem key={i} colSpan={i === 0 ? 2 : 1} rowSpan={i === 0 ? 2 : 1} overflow=\"hidden\" >\r\n                                <Image src={image.url} h=\"auto\" height=\"100%\" w=\"100%\" objectFit=\"cover\" loading=\"lazy\"></Image>\r\n                            </GridItem>\r\n                        )\r\n                    })}\r\n                </Grid>\r\n            </Box>\r\n\r\n            {/* info  */}\r\n            <Box mt=\"4\" d={[\"flex\", \"flex\", \"flex\", \"block\"]} flexDir=\"column-reverse\">\r\n                {/* floating form */}\r\n                <Box w={[\"100%\", \"100%\", \"100%\", \"35%\"]} boxShadow=\"2xl\" mt={{ base: \"4\", lg: \"0\" }} top=\"30%\" float={{ lg: \"right\" }} position={{ lg: \"sticky\" }}\r\n                    borderRadius=\"lg\"\r\n                    display=\"inline-flex\" flexDir=\"column\" zIndex={1} borderWidth=\"thin\"\r\n                    p=\"4\" alignContent=\"center\" justifyContent=\"center\">\r\n                    <FloatingForm room={room} bookInfo={bookInfo} updateDate={updateDate} updatePeople={updatePeople} />\r\n                </Box>\r\n                {/* Detail information about this room */}\r\n                <Box w={[\"100%\", \"100%\", \"100%\", \"60%\"]}>\r\n                    {/* name, avatar */}\r\n                    <Flex alignItems=\"center\">\r\n                        <VStack alignItems=\"start\">\r\n                            <Box as=\"h1\" fontSize=\"2xl\" fontWeight=\"semibold\" >{\"Owner: \" + room.ownerInfo.name}</Box>\r\n                            <HStack>\r\n                                {room.services.map((s, i) => {\r\n                                    return (\r\n                                        <Box\r\n                                            key={i}\r\n                                            color=\"gray.500\"\r\n                                            fontWeight=\"semibold\"\r\n                                            letterSpacing=\"wide\"\r\n                                            fontSize=\"xs\"\r\n                                            textTransform=\"uppercase\"\r\n                                            ml=\"2\"\r\n                                            isTruncated\r\n                                        >{s} {room.services[room.services.length - 1] !== s && <>&bull;</>} </Box>\r\n                                    )\r\n                                })}\r\n                            </HStack>\r\n                        </VStack>\r\n\r\n                        <Spacer />\r\n                        <Avatar name={room.ownerInfo.name} src={room.ownerInfo.profileImageUrl}\r\n                            cursor=\"pointer\"\r\n                            onClick={() => alert(\"go to user's page\")}\r\n                        />\r\n                    </Flex>\r\n                    <Divider my=\"3\" />\r\n\r\n                    {/* room badges */}\r\n                    {room.roomBadges?.map((b, i) => {\r\n                        return <MyRoomBadge id={b.id} key={i}></MyRoomBadge>\r\n                    })}\r\n                    <Divider my=\"3\" />\r\n\r\n                    {/* room introduction */}\r\n                    <Box as=\"h5\" fontWeight=\"semibold\" fontSize=\"2xl\">More about room</Box>\r\n                    <Box as=\"p\">{room.introduction}</Box>\r\n                    <Divider my=\"3\" />\r\n\r\n                    {/* another datepicker here */}\r\n                    <Box w=\"100%\" display={{ base: \"none\", sm: \"block\" }}>\r\n                        <PickRangeDay schedules={{ reservedDates: room.reservedDates, dayOff: room.daysOff }} updateDate={updateDate} />\r\n                    </Box>\r\n                </Box>\r\n\r\n            </Box>\r\n            <Divider my=\"5\" />\r\n            <ReviewDisplay propId={room.id} />\r\n        </Box>\r\n    )\r\n    return <></>\r\n}\r\n\r\ntype ReviewDisplayProps = {\r\n    propId: string;\r\n}\r\n\r\nconst ReviewDisplay = (props: ReviewDisplayProps & BoxProps) => {\r\n    const { propId, ...boxProps } = props;\r\n\r\n    const fetchReviews = useQuery([\"reviews\", propId], () => fetchReviewsForProperty(propId), {\r\n        retry: 2,\r\n        onSuccess: (data) => {\r\n        },\r\n    });\r\n\r\n    const reviews: Review[] = fetchReviews.data?.data ? fetchReviews.data.data : [];\r\n    let totalStar = 0;\r\n    reviews.forEach(r => totalStar += r.starCount);\r\n\r\n    return (\r\n        <Box>\r\n            <Box d=\"flex\" gridGap=\"2\" alignItems=\"baseline\" fontWeight=\"semibold\" fontSize=\"2xl\" mb=\"5\">\r\n                <BsStarFill />\r\n                <Box as=\"h2\"> {reviews.length != 0 ? (totalStar / reviews.length).toPrecision(2) : 0} ({reviews.length} reviews)</Box>\r\n            </Box>\r\n\r\n            {fetchReviews.data?.data.length === 0\r\n                ? <Box fontWeight=\"light\">Looks like this property does not have any reviews</Box>\r\n                :\r\n                <Box d='flex' flexWrap=\"wrap\" gridGap=\"5\">\r\n                    {fetchReviews.data?.data.map(r => <ReviewComment review={r} key={r.reviewId} />)}\r\n                    <ReviewComment review={testReview} />\r\n                    <ReviewComment review={testReview} />\r\n                    <ReviewComment review={testReview} />\r\n                </Box>\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nconst testReview: Review = {\r\n    user: {\r\n        name: \"Test user name\",\r\n        userId: \"123\",\r\n        profileImageUrl: \"\"\r\n    },\r\n    comment: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Id, repellat. Harum, facilis corrupti eligendi laborum minus nihil et a mollitia!\",\r\n    propertyId: \"1\",\r\n    reviewId: \"123123\",\r\n    starCount: 4,\r\n    timeCreated: \"20202020\",\r\n    timeUpdated: \"20202020\"\r\n}\r\n\r\ntype ReviewCommentProps = {\r\n    review: Review;\r\n}\r\n\r\nconst ReviewComment = (props: ReviewCommentProps & BoxProps) => {\r\n    const { review, ...boxProps } = props;\r\n    return (\r\n        <Box {...boxProps} flex=\"1 1 25em\">\r\n            <Box d=\"flex\" flexDir=\"row\" gridGap=\"2\">\r\n                <Avatar name={review.user?.name} src={review.user.profileImageUrl}></Avatar>\r\n                <Box d=\"flex\" flexDir=\"column\">\r\n                    <Box as=\"h4\" fontWeight=\"bold\">{review.user.name}</Box>\r\n                    <Box as=\"h4\" fontWeight=\"light\">{review.timeUpdated}</Box>\r\n                </Box>\r\n            </Box>\r\n            <Box as=\"h4\" >{review.comment}</Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nconst badges: RoomBadge[] = defaultRoomBadges;\r\n\r\nconst defaultRoom: Room = {\r\n    id: \"1\",\r\n    name: \"Crystal palace\",\r\n    thumbnailUrl: \"https://bit.ly/2Z4KKcF\",\r\n    maxGuest: 1,\r\n    images: [\r\n        { url: \"https://picsum.photos/1100/1000\" },\r\n        { url: \"https://picsum.photos/700/1200\" },\r\n        { url: \"https://picsum.photos/1000/1000\" },\r\n        { url: \"https://picsum.photos/1200/1000\" },\r\n        { url: \"https://picsum.photos/1100/900\" }\r\n    ],\r\n    thumbnailAlt: \"rear view house with pool\",\r\n    introduction: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum congue eros id ligula porta, id fermentum ligula semper. Pellentesque eget pulvinar justo. Phasellus eu risus dolor. Aliquam mollis urna vel lectus ornare, nec ultricies augue gravida. Nunc dignissim diam vel massa cursus condimentum. Nulla pharetra molestie nunc, ac hendrerit felis posuere a. Sed finibus magna ut nibh luctus, ac dapibus mauris cursus. Sed eu porttitor lacus. Nulla venenatis erat quis orci consectetur efficitur. Phasellus nisl nisl, luctus et sapien nec, dictum feugiat felis. Nam nec ullamcorper mi, eu vulputate justo. Nullam nibh ipsum, dictum at commodo nec, molestie et ipsum. Aliquam sit amet tincidunt augue, sit amet consectetur mi.\",\r\n    description: \"Best place in town\",\r\n    location: \"Dark side, the moon\",\r\n    totalReview: 4,\r\n    totalStar: 19,\r\n    formattedPrice: 2021.00,\r\n    services: [\"Pet\", \"Kitchen\", \"Breakfast\", \"Wifi\"],\r\n    roomBadges: badges,\r\n    serviceFee: 0.00,\r\n    cleaningFee: 40.00\r\n}\r\n\r\n\r\n\r\nconst defaultOwner: UserInfo = {\r\n    userId: \"1234\",\r\n    name: \"Ivanov Ivan Ivanovich\",\r\n    profileImageUrl: \"\"\r\n}\r\n\r\nexport default SingleRoom;","import { Alert, AlertDescription, AlertIcon, AlertTitle, Box } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport { useLocation } from 'react-router'\r\n\r\ntype ErrorLocationState = {\r\n    message: string;\r\n}\r\n\r\nconst ErrorPage = () => {\r\n    const location = useLocation<ErrorLocationState>();\r\n    if (location.state) {\r\n        const { message } = location.state;\r\n        return <Alert\r\n            status=\"error\"\r\n            variant=\"subtle\"\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            textAlign=\"center\"\r\n            height=\"200px\"\r\n        >\r\n            <AlertIcon boxSize=\"40px\" mr={0} />\r\n            <AlertTitle mt={4} mb={1} fontSize=\"lg\">\r\n                {message}\r\n            </AlertTitle>\r\n            <AlertDescription maxWidth=\"md\">\r\n                Look like you have some problems! Contact us for more info!\r\n                </AlertDescription>\r\n        </Alert>\r\n    }\r\n    return (\r\n        <Alert\r\n            status=\"info\"\r\n            variant=\"subtle\"\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            textAlign=\"center\"\r\n            height=\"200px\"\r\n        >\r\n            <AlertIcon boxSize=\"40px\" mr={0} />\r\n            <AlertTitle mt={4} mb={1} fontSize=\"lg\">\r\n                Not Found!\r\n            </AlertTitle>\r\n            <AlertDescription maxWidth=\"md\">\r\n                The page you are looking does not exist or was deleted\r\n                </AlertDescription>\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default ErrorPage;","import { Badge, Box, Image, LinkOverlay, Text, Link, BoxProps, useColorModeValue, Spacer, Center } from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport { BsStar, BsStarFill } from 'react-icons/bs';\r\nimport { Link as LinkReact } from 'react-router-dom';\r\n\r\ntype RoomCardProps = {\r\n    room: RoomCard;\r\n    isSaved: boolean;\r\n}\r\n\r\nconst RoomCard = ({ room, isSaved, ...props }: RoomCardProps & BoxProps) => {\r\n    return (\r\n        <Box borderWidth=\"1px\" borderRadius=\"lg\" {...props} bg={useColorModeValue(\"gray.100\", \"gray.900\")} d=\"flex\" flexDir=\"column\">\r\n            <Link as={LinkReact} to={\"/rooms/\" + room.id} >\r\n                <Box minH=\"200px\" maxH=\"300px\" overflow=\"hidden\">\r\n                    <Image src={room.thumbnailUrl}\r\n                        objectFit=\"cover\" fit=\"cover\"\r\n                        fallback={<Box bgColor=\"gray\" color=\"gray\" />}\r\n                        alt={room.thumbnailAlt} overflow=\"hidden\"\r\n                        style={{ transition: \"ease 0.5s\" }}\r\n                        _hover={{ transform: \"scale(1.1)\" }} />\r\n                </Box>\r\n            </Link>\r\n\r\n            <Spacer />\r\n\r\n            <Box p=\"4\" d=\"flex\" flexDir=\"column\">\r\n                {!isSaved &&\r\n                    <Box d=\"flex\" alignItems=\"baseline\">\r\n                        <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\r\n                            New\r\n                        </Badge>\r\n                        {room.services.map((s, key) => {\r\n                            return (\r\n                                <Box\r\n                                    key={key}\r\n                                    color=\"gray.500\"\r\n                                    fontWeight=\"semibold\"\r\n                                    letterSpacing=\"wide\"\r\n                                    fontSize=\"xs\"\r\n                                    textTransform=\"uppercase\"\r\n                                    ml=\"2\"\r\n                                    isTruncated\r\n                                >{s} {room.services[room.services.length - 1] !== s && <>&bull;</>} </Box>\r\n                            )\r\n                        })}\r\n                    </Box>\r\n                }\r\n                <Box\r\n                    mt=\"1\"\r\n                    fontWeight=\"semibold\"\r\n                    as=\"h4\"\r\n                    lineHeight=\"tight\"\r\n                >\r\n                    {room.name}\r\n                </Box>\r\n\r\n                {!isSaved &&\r\n                    <Box\r\n                        as={\"p\"}\r\n                        lineHeight=\"tight\"\r\n                        textOverflow=\"ellipsis\"\r\n                        overflow=\"hidden\"\r\n                    >\r\n                        {room.description.length > 100 ? room.description.substring(0, 100) + \"...\" : room.description}\r\n                    </Box>\r\n                }\r\n\r\n                <Box d='flex' flexWrap=\"wrap\" justifySelf=\"end\" alignItems=\"baseline\" flexDir=\"row\">\r\n                    <Box as=\"h4\" fontSize=\"3xl\">\r\n                        {room.formattedPrice + \"$\"}\r\n                    </Box>\r\n                    <Box as=\"span\" color=\"gray.500\" fontStyle=\"italic\">\r\n                        / per night\r\n                    </Box>\r\n\r\n                    <Box d=\"flex\" alignItems=\"center\" alignSelf=\"center\" ml=\"auto\">\r\n                        {Array(5).fill(\"\").map((_, i) => {\r\n                            return (i < Math.round(room.totalStar / room.totalReview) ? <BsStarFill key={i} colorRendering=\"teal.400\" /> : <BsStar key={i} />)\r\n                        })}\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default RoomCard;","import { SimpleGrid, Box } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport RoomCard from './RoomCard'\r\n\r\ntype RoomCardListProps = {\r\n    rooms?: RoomCard[];\r\n}\r\n\r\nconst RoomCardList: React.FC<RoomCardListProps> = ({ rooms }) => {\r\n    // rooms = defaultRooms;\r\n    if (!rooms || rooms.length === 0) return <Box>\r\n        Not found any room\r\n    </Box>\r\n\r\n    return (\r\n        <SimpleGrid spacing=\"8\" columns={[1, 1, 1, 2, 3]} >\r\n            {rooms && rooms.map((r, index) => {\r\n                return (\r\n                    <RoomCard key={r.id} room={r} isSaved={false}></RoomCard>\r\n                )\r\n            })}\r\n        </SimpleGrid>\r\n    )\r\n}\r\n\r\nconst defaultRoom: RoomCard = {\r\n    id: \"random-id-12321\",\r\n    name: \"Crystal palace\",\r\n    thumbnailUrl: \"https://picsum.photos/1100/1000?random=1\",\r\n    thumbnailAlt: \"rear view house with pool\",\r\n    description: \"Best place in townBest place in townBest place in townBest \",\r\n    location: \"Dark side, the moon\",\r\n    totalReview: 4,\r\n    totalStar: 23,\r\n    formattedPrice: 2021.00,\r\n    services: [\"Pet\", \"Kitchen\", \"Breakfast\", \"Wifi\"]\r\n}\r\n\r\nconst defaultRooms: Array<RoomCard> = [\r\n    { ...defaultRoom, thumbnailUrl: \"https://picsum.photos/1100/1000?random=1\" },\r\n    { ...defaultRoom, thumbnailUrl: \"https://picsum.photos/1100/1000?random=2\" },\r\n    { ...defaultRoom, thumbnailUrl: \"https://picsum.photos/1100/1000?random=3\" },\r\n    { ...defaultRoom, thumbnailUrl: \"https://picsum.photos/1100/1000?random=4\" },\r\n    { ...defaultRoom, thumbnailUrl: \"https://picsum.photos/1100/1000?random=5\" },\r\n]\r\nconst str = \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Delectus non laboriosam blanditiis ipsa voluptas assumenda earum fugiat vel nemo rem totam modi officiis corporis accusamus consectetur, soluta optio, quas maiores!\"\r\nexport default RoomCardList;","import { Box, CircularProgress, Divider, HStack, InputLeftAddon, NumberDecrementStepper, NumberIncrementStepper, NumberInput, NumberInputField, NumberInputStepper, Portal, Slider, SliderFilledTrack, SliderThumb, SliderTrack, Spinner, Tag, TagCloseButton, TagLabel, TagProps, useColorModeValue } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport { useQuery } from 'react-query';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { fetchPropertiesView } from '../API';\r\nimport RoomCardList from '../Components/FilterComponents/RoomCardList';\r\nimport SearchBar from '../Components/NavComponents/SearchBar';\r\nimport { MdGraphicEq } from \"react-icons/md\";\r\n\r\ntype RoomsPageLocationState = {\r\n    type?: PropertyTypeType;\r\n    search?: SearchQuery;\r\n}\r\n\r\n\r\nconst RoomsPage = () => {\r\n    const queryStr = new URLSearchParams(useLocation().search);\r\n    const searchBoxColor = useColorModeValue(\"gray.100\", \"gray.900\");\r\n\r\n    const location = useLocation<RoomsPageLocationState>();\r\n\r\n    const [search, setSearch] = React.useState<SearchQuery>({ childrenNum: 0, guestNum: 0 });\r\n    const [type, setType] = React.useState<PropertyTypeType>();\r\n\r\n    const updateSearch = (search: SearchQuery) => {\r\n        setSearch(search);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (location.state !== undefined && location.state.search) {\r\n            setSearch(location.state.search)\r\n        }\r\n        if (location.state !== undefined && location.state.type) {\r\n            setType(location.state.type);\r\n        }\r\n    }, [])\r\n\r\n    let queryKeys = [type?.id, search];\r\n\r\n    const { data, isLoading, error, refetch, remove } = useQuery([\"propertyView\", queryKeys], () => fetchPropertiesView(type?.id, search),\r\n        {\r\n            staleTime: 1000 * 60\r\n        });\r\n\r\n    if (error) {\r\n        return <>Error</>\r\n    }\r\n\r\n    return (\r\n        <Box d=\"flex\" flexDir=\"column\" gridGap=\"5\">\r\n            <Box position={{ lg: \"sticky\" }} top={0}\r\n                bgColor={searchBoxColor} d=\"flex\" flexDir=\"column\"\r\n                boxShadow=\"2xl\"\r\n                gridGap=\"5\" pb=\"5\"\r\n            >\r\n                <SearchBar search={search}\r\n                    updateSearch={updateSearch}\r\n                    isLoading={isLoading}\r\n                    onClickSearch={() => { remove(); refetch(); }}\r\n                />\r\n                <HStack>\r\n                    {/* type tag */}\r\n                    {type && <QueryTag label={\"Property type: \" + type.propertyType}\r\n                        onClose={() => { setType(undefined) }}\r\n                    />}\r\n\r\n                    {/* city tag */}\r\n                    {search.city && <QueryTag label={search.city}\r\n                        onClose={() => { setSearch(s => ({ ...s, city: \"\" })) }}\r\n                    />}\r\n\r\n                    {/* from date tag */}\r\n                    {search.from && <QueryTag label={\"From: \" + search.from.toLocaleDateString()}\r\n                        onClose={() => { setSearch(s => ({ ...s, from: undefined })) }}\r\n                    />}\r\n\r\n                    {/* to date tag */}\r\n                    {search.to && <QueryTag label={\"To: \" + search.to.toLocaleDateString()}\r\n                        onClose={() => { setSearch(s => ({ ...s, to: undefined })) }}\r\n                    />}\r\n\r\n                    {/* guest num tag */}\r\n                    {search.guestNum > 0 && <QueryTag label={search.guestNum + \" guests\"}\r\n                        onClose={() => { setSearch(s => ({ ...s, guestNum: 0 })) }}\r\n                    />}\r\n\r\n                    {/* children num tag */}\r\n                    {search.childrenNum > 0 && <QueryTag label={search.childrenNum + \" children\"}\r\n                        onClose={() => { setSearch(s => ({ ...s, childrenNum: 0 })) }}\r\n                    />}\r\n                </HStack>\r\n            </Box>\r\n            <Box as=\"h3\" mb=\"5\" fontSize=\"4xl\" fontWeight=\"bold\" >Find place that fits you most...</Box>\r\n            {isLoading ?\r\n                <Spinner color=\"green\" size=\"lg\" alignSelf=\"center\" />\r\n                :\r\n                <RoomCardList rooms={data?.data}></RoomCardList>\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\ntype QueryTagProps = {\r\n    label: string;\r\n    onClose: () => void;\r\n}\r\nconst QueryTag = (props: QueryTagProps & TagProps) => {\r\n    const { label, onClose, ...tagProps } = props;\r\n\r\n    return (\r\n        <Tag size=\"lg\" colorScheme=\"green\" {...tagProps}>\r\n            <TagLabel>\r\n                {props.label}\r\n            </TagLabel>\r\n            <TagCloseButton onClick={() => props.onClose()} />\r\n        </Tag>\r\n    );\r\n}\r\n\r\nexport default RoomsPage;","import { Box, BoxProps, Center, chakra, Divider, Heading, HeadingProps, Text, HTMLChakraProps, Link, SimpleGrid, SimpleGridProps, Stack, StackDivider, TextProps, useColorModeValue, useToken, ButtonGroup, IconButton, ButtonGroupProps } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport { BsHeartFill } from 'react-icons/bs';\r\nimport { FaGithub, FaFacebook, FaReddit } from 'react-icons/fa';\r\n// import { Logo } from '../../Logo';\r\n\r\nconst Footer: React.FC<BoxProps> = ({ children, ...props }) => {\r\n    return (\r\n        <Box as=\"footer\" role=\"contentinfo\" py=\"12\" {...props}>\r\n            <Stack spacing=\"10\" divider={<StackDivider />}>\r\n                {/* <Stack direction={{ base: 'column', lg: 'row' }} spacing={{ base: '10', lg: '28' }}>\r\n                    <Box flex=\"1\">\r\n                        <Logo />\r\n                    </Box>\r\n                    <Stack direction={{ base: 'column', md: 'row' }} spacing={{ base: '10', md: '20' }}>\r\n                        <LinkGrid spacing={{ base: '10', md: '20', lg: '28' }} flex=\"1\" />\r\n                    </Stack>\r\n                </Stack> */}\r\n                <Stack\r\n                    direction={{ base: 'column-reverse', md: 'row' }}\r\n                    justifyContent=\"space-between\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Copyright />\r\n                    <SocialMediaLinks />\r\n                </Stack>\r\n            </Stack>\r\n        </Box>\r\n    )\r\n}\r\n\r\nconst Copyright = (props: TextProps) => (\r\n    <Text fontSize=\"sm\" {...props}>\r\n        &copy; {new Date().getFullYear()} Hai, Inc. All rights reserved.\r\n    </Text>\r\n)\r\n\r\nconst openSocio = (to: \"fb\" | \"github\" | \"reddit\") => {\r\n    let url = \"\";\r\n    if (to === \"fb\") url = \"https://facebook.com\";\r\n    else if (to === \"github\") url = \"https://github.com/haihaibeo\";\r\n    else if (to === \"reddit\") url = \"https://reddit.com/user/haihaibeo\";\r\n\r\n    window.open(url, '_blank')!.focus();\r\n}\r\n\r\nconst SocialMediaLinks = (props: ButtonGroupProps) => (\r\n    <ButtonGroup variant=\"ghost\" color=\"gray.600\" {...props}>\r\n        <IconButton as=\"a\" href=\"#\" aria-label=\"Facebook\" onClick={() => openSocio('fb')} icon={<FaFacebook fontSize=\"20px\" />} />\r\n        <IconButton as=\"a\" href=\"#\" aria-label=\"GitHub\" onClick={() => openSocio('github')} icon={<FaGithub fontSize=\"20px\" />} />\r\n        <IconButton as=\"a\" href=\"#\" aria-label=\"Reddit\" onClick={() => openSocio('reddit')} icon={<FaReddit fontSize=\"20px\" />} />\r\n    </ButtonGroup>\r\n)\r\n\r\nexport default Footer;","import { Avatar, Box, BoxProps, Button, Divider, Flex, Grid, HStack, Icon, IconButton, ListItem, Modal, ModalBody, ModalContent, ModalHeader, ModalOverlay, ModalProps, SimpleGrid, Spacer, Stack, Textarea, UnorderedList, useColorModeValue, useDisclosure, useToast, VStack } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport { BsStar, BsStarFill } from 'react-icons/bs';\r\nimport { FaCheck, FaStar, FaUserShield } from 'react-icons/fa';\r\nimport { useMutation, useQuery } from 'react-query';\r\nimport { useLocation } from 'react-router';\r\nimport { deleteReservation, fetchPropertiesSaved, fetchUserReservation, postReview, toggleLike } from '../API';\r\nimport RoomCard from '../Components/FilterComponents/RoomCard';\r\nimport { AuthContext } from '../Contexts/AuthContext';\r\n\r\nconst useQueryParam = () => {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst ProfilePage = () => {\r\n    const { user } = React.useContext(AuthContext);\r\n\r\n    let query = useQueryParam();\r\n    let view = query.get(\"view\")?.toLowerCase();\r\n\r\n    return (\r\n        <Box d=\"flex\" flexDir={{ base: \"column\", md: \"row\" }}>\r\n            {/* LEFT */}\r\n            <Box w={{ base: \"100%\", md: \"25%\" }} minW=\"300px\">\r\n                <Box d=\"flex\" overflow=\"hidden\" borderWidth=\"1px\" borderRadius=\"lg\" p=\"4\" flexDir={{ base: \"row-reverse\", md: \"column\" }} spacing=\"2\">\r\n                    <VStack alignSelf=\"center\" justifySelf=\"start\">\r\n                        <Avatar name={user?.name} boxSize={{ base: \"20\", md: \"40\" }}></Avatar>\r\n                        <Button variant=\"link\" my=\"2\" fontSize=\"sm\">Update photo</Button>\r\n                    </VStack>\r\n\r\n                    <VStack alignItems=\"start\" spacing=\"2\">\r\n                        <Icon as={FaUserShield} boxSize=\"8\" />\r\n                        <Box as=\"h4\" fontWeight=\"bold\" fontSize=\"lg\" fontFamily=\"mono\">Identity verification</Box>\r\n                        <Box as=\"h4\">Show others you’re really you with the identity verification badge.</Box>\r\n\r\n                        <Divider />\r\n\r\n                        <Box as=\"h4\" fontWeight=\"bold\" fontSize=\"lg\" fontFamily=\"mono\">{user?.name + \" confirmed\"}</Box>\r\n                        <Box d=\"flex\" flexDir=\"row\" alignItems=\"baseline\">\r\n                            <FaCheck />\r\n                            <Box as=\"h4\" ml=\"4\">Email confirmed</Box>\r\n                        </Box>\r\n                        <Box d=\"flex\" flexDir=\"row\" alignItems=\"baseline\">\r\n                            <FaCheck />\r\n                            <Box as=\"h4\" ml=\"4\">Phone confirmed</Box>\r\n                        </Box>\r\n                    </VStack>\r\n                </Box>\r\n            </Box>\r\n\r\n            <Spacer minW=\"2\" />\r\n\r\n            {/* RIGHT */}\r\n            <Box w={{ base: \"100%\", md: \"65%\" }}>\r\n                {(view === \"likes\" || view == null) && <UserLikesProperties></UserLikesProperties>}\r\n                {view === \"notifications\" && <Notifications></Notifications>}\r\n                {view === \"reservations\" && <Reservations></Reservations>}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\ntype ReviewModalProps = {\r\n    reservationId: string;\r\n    propId: string;\r\n}\r\nconst ReviewModal = (modalProps: ModalProps & ReviewModalProps) => {\r\n    const [starHover, setStarHover] = React.useState(0);\r\n    const [starReview, setStarReview] = React.useState(0);\r\n    const [comment, setComment] = React.useState<string>();\r\n    const starColor = useColorModeValue(\"red\", \"yellow\");\r\n\r\n    const toast = useToast();\r\n\r\n    const { onClose } = modalProps;\r\n\r\n    const mutateReview = useMutation(postReview, {\r\n        onSuccess: (res) => {\r\n            console.log(res.data);\r\n            toast({\r\n                description: \"Successfully sent review\",\r\n                status: \"success\"\r\n            })\r\n        },\r\n        onError: (e) => {\r\n            console.log(e);\r\n        }\r\n    });\r\n    const sendReview = () => {\r\n        mutateReview.mutate({\r\n            propertyId: modalProps.propId,\r\n            starCount: starReview,\r\n            reviewComment: comment,\r\n            reservationId: modalProps.reservationId\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Modal {...modalProps} onClose={() => { setStarReview(0); onClose(); }}>\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n                <ModalHeader>Write a review</ModalHeader>\r\n                <ModalBody>\r\n                    <Flex flexDir=\"column\" gridGap=\"2\">\r\n                        <Box>\r\n                            {Array(5).fill(5).map((_, index) => {\r\n                                return (\r\n                                    <IconButton variant=\"ghost\" aria-label=\"star\" key={index}\r\n                                        onClick={() => { setStarReview(index + 1) }}\r\n                                        _focus={{ borderWidth: \"1px\" }}\r\n                                        borderRadius=\"full\" onMouseOver={() => setStarHover(index + 1)} onMouseLeave={() => setStarHover(0)}\r\n                                        icon={starHover > index || starReview > index ? <BsStarFill color={starColor} /> : <BsStar />} />)\r\n                            })}\r\n                        </Box>\r\n                        <Textarea size=\"md\" placeholder=\"Please describe some of your thoughts\"\r\n                            value={comment}\r\n                            onChange={(e) => setComment(e.target.value)}\r\n                        />\r\n                        <Button ml=\"auto\" isDisabled={starReview <= 0} onClick={sendReview}>Send</Button>\r\n                    </Flex>\r\n                </ModalBody>\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst Reservations = (boxprops: BoxProps) => {\r\n    const reviewModal = useDisclosure();\r\n    const auth = React.useContext(AuthContext)\r\n    const toast = useToast();\r\n    const [propIdReview, setPropIdReview] = React.useState(\"\");\r\n\r\n    const { data, error, isError } = useQuery([\"reservations\", auth.user?.token], fetchUserReservation, {\r\n        onSuccess: (res) => {\r\n\r\n        },\r\n        retry: 2,\r\n    })\r\n\r\n    const deleteRsvMutate = useMutation<any, MessageResponse, any, any>(deleteReservation, {\r\n        onSuccess: () => { toast({ description: \"Reservation is canceled\", status: \"success\" }) },\r\n        onError: (error) => {\r\n            toast({ description: error.errors, status: \"success\" })\r\n        }\r\n    })\r\n\r\n    const handleDelete = (resId: string) => {\r\n        deleteRsvMutate.mutate(resId);\r\n    }\r\n\r\n    if (data?.data.length === 0) {\r\n        return <Box>\r\n            You don't have any reservations\r\n        </Box>\r\n    }\r\n\r\n    if (isError) return <Box>Something's wrong</Box>\r\n\r\n    return <Box {...boxprops}>\r\n        <Flex gridGap=\"2\" flexDir=\"column\">\r\n            <Box as={\"h1\"} fontFamily={\"heading\"} fontWeight=\"bold\" fontSize=\"4xl\" mb=\"3\">Your reservations</Box>\r\n            {data?.data.map(d =>\r\n                <Box borderWidth=\"1px\" p=\"2\"\r\n                    style={{ transition: \"ease 0.3s\" }}\r\n                    _hover={{ transform: \"scale(1.02)\" }}\r\n                    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n                    bg={useColorModeValue('gray.100', 'gray.800')}\r\n                    borderRadius=\"10px\"\r\n                >\r\n                    <Flex key={d.id} w=\"100%\" flexDir=\"row\" gridGap=\"2\">\r\n                        <Stack w=\"100%\" gridGap=\"2\">\r\n                            <UnorderedList h=\"100%\">\r\n                                <Grid h=\"100%\" fontWeight=\"bold\" gridTemplateColumns={{ base: \"1fr\", md: \"1fr 1fr\" }} templateRows=\"auto\" gridGap=\"2\">\r\n                                    <ListItem><Box as=\"h3\">From Date: </Box></ListItem>\r\n                                    <Box fontWeight=\"light\">{d.fromDate}</Box>\r\n                                    <ListItem><Box as=\"h3\">To Date: </Box></ListItem>\r\n                                    <Box fontWeight=\"light\">{d.toDate}</Box>\r\n                                    <ListItem><Box as=\"h3\">Total Cost: </Box></ListItem>\r\n                                    <Box fontWeight=\"light\">{d.total}</Box>\r\n                                    <ListItem><Box as=\"h3\">Reserved from: </Box></ListItem>\r\n                                    <Box fontWeight=\"light\">{d.createdAt}</Box>\r\n                                    <ListItem><Box as=\"h3\">Reservations Status: </Box></ListItem>\r\n                                    <Box fontWeight=\"light\">{d.reservationStatus}</Box>\r\n                                    <ListItem><Box as=\"h3\">Payment Status: </Box></ListItem>\r\n                                    <Box fontWeight=\"light\">{d.paymentStatus}</Box>\r\n                                    <Button colorScheme=\"green\"\r\n                                        onClick={() => { setPropIdReview(d.property.id); reviewModal.onOpen(); }}>Write a review</Button>\r\n                                    <Button colorScheme=\"red\"\r\n                                        isDisabled={d.reservationStatus.toLowerCase() !== \"on reserved\"}\r\n                                        onClick={() => { handleDelete(d.id) }}>Cancel reservation</Button>\r\n                                </Grid>\r\n                            </UnorderedList>\r\n                        </Stack>\r\n                        <Box ml=\"auto\" >\r\n                            <Divider orientation=\"vertical\" borderColor=\"currentcolor\" />\r\n                        </Box>\r\n                        <RoomCard room={d.property} isSaved={true} flex='0 0 15em' borderWidth=\"0px\" />\r\n                    </Flex>\r\n                </Box>\r\n            )}\r\n            <ReviewModal isOpen={reviewModal.isOpen} isCentered onClose={reviewModal.onClose} reservationId=\"\" propId={propIdReview}>\r\n            </ReviewModal>\r\n        </Flex>\r\n    </Box>\r\n}\r\n\r\nconst UserLikesProperties = () => {\r\n    const { data } = useQuery(\"propertiesLiked\", () => fetchPropertiesSaved(), {\r\n        onSuccess: (res) => {\r\n        },\r\n        refetchOnMount: \"always\",\r\n    })\r\n\r\n    if (data?.data.length === 0) return <Box>Looks like you didn't save any room</Box>\r\n\r\n    return (\r\n        <Box>\r\n            <Box as={\"h1\"} fontFamily={\"heading\"} fontWeight=\"bold\" fontSize=\"4xl\" mb=\"3\">Rooms that you saved</Box>\r\n            <SimpleGrid spacing=\"4\" columns={{ base: 1, lg: 2 }}>\r\n                {data?.data.map(r => <RoomCard room={r} key={r.id} isSaved={true} />)}\r\n            </SimpleGrid>\r\n        </Box>\r\n    );\r\n}\r\n\r\nconst Notifications: React.FC = () => {\r\n    return (\r\n        <Box>Notification</Box>\r\n    )\r\n}\r\n\r\nexport default ProfilePage;\r\n\r\nconst defaultRoom: RoomCard = {\r\n    id: \"random-id-12321\",\r\n    name: \"Crystal palace\",\r\n    thumbnailUrl: \"https://picsum.photos/1100/1000?random=1\",\r\n    thumbnailAlt: \"rear view house with pool\",\r\n    description: \"Best place in townBest place in townBest place in townBest \",\r\n    location: \"Dark side, the moon\",\r\n    totalReview: 4,\r\n    totalStar: 23,\r\n    formattedPrice: 2021.00,\r\n    services: [\"Pet\", \"Kitchen\", \"Breakfast\", \"Wifi\"]\r\n}","import { FormControl, FormLabel } from '@chakra-ui/form-control';\r\nimport { Input } from '@chakra-ui/input';\r\nimport { Box, BoxProps, Divider, SimpleGrid, VStack, Link, Flex, Spacer } from '@chakra-ui/layout';\r\nimport { Button, chakra, IconButton, NumberInput, NumberInputField, Slider, SliderFilledTrack, SliderThumb, SliderTrack, Switch, useToast } from '@chakra-ui/react';\r\nimport { Select } from '@chakra-ui/select';\r\nimport { Textarea } from '@chakra-ui/textarea';\r\nimport React, { FC } from 'react'\r\nimport { FaMinus, FaPlus } from 'react-icons/fa';\r\nimport { useMutation, useQuery } from 'react-query';\r\nimport { Link as RouterLink, SwitchProps } from 'react-router-dom';\r\nimport { deleteImage, fetchCities, fetchPropertyTypes, postImage, postRoom } from '../API';\r\nimport { CityResponse } from '../Components/NavComponents/SearchBar';\r\n\r\n\r\ntype Country = {\r\n    id: string;\r\n    countryName: string;\r\n}\r\n\r\nconst getUniqeCountries = (res: CityResponse[]) => {\r\n    let countries: Country[] = [];\r\n    let indexes = new Set<string>();\r\n    for (let i of res) {\r\n        if (!indexes.has(i.countryId)) {\r\n            countries.push({ id: i.countryId, countryName: i.countryName });\r\n        }\r\n        indexes.add(i.countryId);\r\n    }\r\n    console.log(countries);\r\n    return countries;\r\n}\r\n\r\nconst PublishRoomPage: FC<BoxProps> = ({ ...props }) => {\r\n    const toast = useToast();\r\n    const [countries, setCountries] = React.useState<Country[]>();\r\n\r\n    const [room, setRoom] = React.useState<PublishRoomState>({\r\n        cityId: \"1\",\r\n        countryId: \"\",\r\n        description: \"Test description\",\r\n        images: [\r\n            {\r\n                url: \"https://picsum.photos/1100/1000?random=1\",\r\n                alt: \"alt\",\r\n                deleteHash: \"delHash\"\r\n            },\r\n            {\r\n                url: \"https://picsum.photos/1100/1000?random=2\",\r\n                alt: \"alt\",\r\n                deleteHash: \"delHash\"\r\n            },\r\n            {\r\n                url: \"https://picsum.photos/1100/1000?random=3\",\r\n                alt: \"alt\",\r\n                deleteHash: \"delHash\"\r\n            }\r\n        ],\r\n        maxGuest: 0,\r\n        propTypeId: \"\",\r\n        introdution: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Architecto minus ad assumenda dignissimos. Perferendis optio est nam accusamus aliquid voluptas?\",\r\n        name: \"Lorem ipsum\",\r\n        refundPercent: 100,\r\n        number: \"12\",\r\n        streetName: \"Street asdfgg\",\r\n        services: {\r\n            breakfast: true,\r\n            kitchen: false,\r\n            parking: true,\r\n            pet: false,\r\n            wifi: true\r\n        },\r\n        basePrice: 250,\r\n        cleaningFee: 10,\r\n        serviceFee: 0\r\n    });\r\n\r\n    React.useEffect(() => { console.log(room.cityId) }, [room])\r\n\r\n    const { data: resCities, isLoading, status } = useQuery<unknown, unknown, CityResponse[]>(\"cities\", fetchCities, {\r\n        staleTime: 1000 * 60 * 10,\r\n        onSuccess: (res) => {\r\n            console.log(res);\r\n            setCountries(getUniqeCountries(res));\r\n        }\r\n    });\r\n\r\n    const { data: resTypes, isError } = useQuery<unknown, unknown, PropertyTypeType[]>(\"propertypeList\", fetchPropertyTypes, {\r\n        staleTime: 1000 * 60 * 10\r\n    });\r\n\r\n    const publish = useMutation(postRoom, {\r\n        onSuccess: (res) => {\r\n            toast({ description: res.data, status: \"success\" })\r\n        },\r\n        onError: (err) => {\r\n            console.log(err);\r\n            toast({ description: \"Something's wrong\", status: \"error\" })\r\n        },\r\n    })\r\n\r\n    const handlePublish = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        e.preventDefault();\r\n        publish.mutate(room);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        return function cleanup() { localStorage.removeItem(\"previewRoom\"); }\r\n    }, [])\r\n\r\n    const handleImagesInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files != null) {\r\n            const files = Array.from(e.target.files);\r\n            const formData = new FormData();\r\n\r\n            formData.append(\"image\", files[0]);\r\n            postImage(formData).then((msg) => msg.data).catch(e => console.log(e));\r\n            deleteImage(\"\").then(msg => console.log(msg.data));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <chakra.form>\r\n            <Box d='flex' flexDir=\"column\" mt=\"10\" {...props}>\r\n                <VStack spacing=\"8\" w=\"75%\" alignSelf=\"center\">\r\n                    <Box as=\"h1\" fontSize=\"3xl\" fontWeight=\"bold\" alignSelf=\"start\">Publish your new property</Box>\r\n                    <Divider borderColor=\"currentcolor\" />\r\n\r\n                    {/* Property info */}\r\n                    <Box d={{ base: \"inline-block\", lg: \"flex\" }} flexDir=\"row\" w=\"100%\" fontWeight=\"medium\">\r\n                        <Box as=\"h2\" fontSize=\"lg\" w={{ base: \"100%\", lg: \"30%\" }} mb=\"5\">Property info</Box>\r\n\r\n                        <VStack alignItems=\"start\" w=\"100%\">\r\n                            <FormControl isRequired id=\"prop-name\">\r\n                                <FormLabel as=\"h2\" fontSize=\"md\">Property Name</FormLabel>\r\n                                <Input variant=\"filled\" required\r\n                                    value={room.name}\r\n                                    onChange={(e) =>\r\n                                        setRoom(r => ({\r\n                                            ...r,\r\n                                            name: e.target.value\r\n                                        }))\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl isRequired id=\"prop-type\">\r\n                                <FormLabel as=\"h2\" fontSize=\"md\">Property's Type</FormLabel>\r\n                                <Select variant=\"filled\" placeholder=\"--Choose your property type--\"\r\n                                    onChange={(e) => setRoom((r) => ({ ...r, propTypeId: e.target.value, cityId: \"\" }))}\r\n                                >\r\n                                    {resTypes?.map(rt => {\r\n                                        return <option value={rt.id} key={rt.id}>{rt.propertyType}</option>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl isRequired id=\"prop-description\">\r\n                                <FormLabel as=\"h2\" fontSize=\"md\">Description</FormLabel>\r\n                                <Input variant=\"filled\" required\r\n                                    value={room.description}\r\n                                    onChange={(e) => setRoom((r) => ({ ...r, description: e.target.value }))}\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl isRequired id=\"prop-introduction\">\r\n                                <FormLabel as=\"h2\" fontSize=\"md\">Introduction</FormLabel>\r\n                                <Textarea rows={4} required variant=\"filled\"\r\n                                    value={room.introdution}\r\n                                    onChange={(e) => setRoom((r) => ({ ...r, introdution: e.target.value }))}\r\n                                />\r\n                            </FormControl>\r\n                        </VStack>\r\n                    </Box>\r\n                    <Divider borderColor=\"currentcolor\" />\r\n\r\n                    {/* Location info */}\r\n                    <Box d={{ base: \"inline-block\", lg: \"flex\" }} flexDir=\"row\" w=\"100%\" fontWeight=\"medium\">\r\n                        <Box as=\"h2\" fontSize=\"lg\" w={{ base: \"100%\", lg: \"30%\" }} mb=\"5\">Location info</Box>\r\n                        <VStack alignItems=\"start\" w=\"100%\">\r\n                            <FormControl isRequired id=\"prop-country\">\r\n                                <FormLabel as=\"h2\" fontSize=\"md\">Country</FormLabel>\r\n                                <Select variant=\"filled\" placeholder=\"--Choose your country--\"\r\n                                    onChange={(e) => setRoom((r) => ({ ...r, countryId: e.target.value, cityId: \"\" }))}\r\n                                >\r\n                                    {countries?.map(c => {\r\n                                        return <option value={c.id} key={c.countryName}>{c.countryName}</option>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl isRequired id=\"prop-city\">\r\n                                <FormLabel as=\"h2\" fontSize=\"md\">City</FormLabel>\r\n                                <Select variant=\"filled\" placeholder=\"--Choose your city--\"\r\n                                    onChange={(e) => {\r\n                                        setRoom((r) => ({ ...r, cityId: e.target.value }))\r\n                                    }}\r\n                                >\r\n                                    {resCities?.filter(ct => ct.countryId === room.countryId).map(c => {\r\n                                        return <option value={c.id} key={c.id}>{c.cityName}</option>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <Flex gridGap=\"2\" w=\"100%\" flexDir={{ base: 'column', lg: \"row\" }}>\r\n                                <FormControl isRequired id=\"prop-street\" flex=\"0 1 60%\">\r\n                                    <FormLabel as=\"h2\" fontSize=\"md\">Street Name</FormLabel>\r\n                                    <Input required variant=\"filled\" value={room.streetName}\r\n                                        onChange={(e) => { setRoom((r) => ({ ...r, streetName: e.target.value })) }}\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl isRequired id=\"prop-number\" flex=\"0 1 40%\">\r\n                                    <FormLabel as=\"h2\" fontSize=\"md\">Property's number</FormLabel>\r\n                                    <Input required variant=\"filled\" value={room.number}\r\n                                        onChange={(e) => { setRoom((r) => ({ ...r, number: e.target.value })) }}\r\n                                    />\r\n                                </FormControl>\r\n                            </Flex>\r\n                            <FormControl id=\"prop-add-note\">\r\n                                <FormLabel as=\"h2\" fontSize=\"md\">Notes to client<Box as=\"span\" fontStyle=\"oblique\" fontWeight=\"light\">(optional)</Box></FormLabel>\r\n                                <Input variant=\"filled\" value={room.addressDesc}\r\n                                    onChange={(e) => { setRoom((r) => ({ ...r, addressDesc: e.target.value })) }}\r\n                                />\r\n                            </FormControl>\r\n                        </VStack>\r\n                    </Box>\r\n                    <Divider borderColor=\"currentcolor\" />\r\n\r\n                    {/* Images */}\r\n                    <Box d={{ base: \"inline-block\", lg: \"flex\" }} flexDir=\"row\" w=\"100%\" fontWeight=\"medium\" justifyContent=\"space-between\">\r\n                        <Box as=\"h2\" fontSize=\"lg\" w={{ base: \"100%\", lg: \"30%\" }} mb=\"5\" flexWrap=\"wrap\">\r\n                            <Box>Images</Box>\r\n                            <Box as=\"span\" fontStyle=\"oblique\" fontWeight=\"light\">{\" (At least 5 images)\"}</Box>\r\n                        </Box>\r\n                        <Input required variant=\"ghost\" type=\"file\" justifySelf=\"flex-end\" multiple accept=\"image/*\" onChange={(e) => handleImagesInput(e)} />\r\n                    </Box>\r\n                    <Divider borderColor=\"currentcolor\" />\r\n\r\n                    {/* Services */}\r\n                    <Box d={{ base: \"inline-block\", lg: \"flex\" }} flexDir=\"row\" w=\"100%\" fontWeight=\"medium\">\r\n                        <Box as=\"h2\" fontSize=\"lg\" w={{ base: \"100%\", lg: \"30%\" }} mb=\"5\">Services</Box>\r\n                        <Box w=\"100%\" >\r\n                            <SimpleGrid minChildWidth=\"12em\" spacingX=\"5rem\" spacingY=\"2\">\r\n                                <Flex gridGap=\"2\" alignItems=\"center\">\r\n                                    <Box as=\"h2\" fontSize=\"md\">\r\n                                        Max Guests\r\n                                </Box>\r\n                                    <Spacer />\r\n                                    <IconButton aria-label=\"Minus\" size=\"sm\" icon={<FaMinus />}\r\n                                        isDisabled={room.maxGuest <= 0}\r\n                                        onClick={() => setRoom((r) => ({ ...r, maxGuest: r.maxGuest-- }))}\r\n                                    />\r\n                                    <Box as=\"h3\" fontSize=\"md\" w=\"3ch\" textAlign=\"center\">\r\n                                        {room.maxGuest}\r\n                                    </Box>\r\n                                    <IconButton aria-label=\"Plus\" size=\"sm\" icon={<FaPlus />}\r\n                                        isDisabled={room.maxGuest >= 10}\r\n                                        onClick={() => setRoom((r) => ({ ...r, maxGuest: r.maxGuest++ }))}\r\n                                    />\r\n                                </Flex>\r\n                                <ServiceDisplay name=\"Wifi\"\r\n                                    isOn={room.services.wifi}\r\n                                    toggle={(checked) => { setRoom((r) => ({ ...r, services: ({ ...r.services, wifi: checked }) })) }}\r\n                                />\r\n                                <ServiceDisplay name=\"Kitchen\"\r\n                                    isOn={room.services.kitchen}\r\n                                    toggle={(checked) => { setRoom((r) => ({ ...r, services: ({ ...r.services, kitchen: checked }) })) }}\r\n                                />\r\n                                <ServiceDisplay name=\"Breakfast\"\r\n                                    isOn={room.services.breakfast}\r\n                                    toggle={(checked) => { setRoom((r) => ({ ...r, services: ({ ...r.services, breakfast: checked }) })) }}\r\n                                />\r\n                                <ServiceDisplay name=\"Pet Allow\"\r\n                                    isOn={room.services.pet}\r\n                                    toggle={(checked) => { setRoom((r) => ({ ...r, services: ({ ...r.services, pet: checked }) })) }}\r\n                                />\r\n                                <ServiceDisplay name=\"Free Parking\"\r\n                                    isOn={room.services.parking}\r\n                                    toggle={(checked) => { setRoom((r) => ({ ...r, services: ({ ...r.services, parking: checked }) })) }}\r\n                                />\r\n                            </SimpleGrid>\r\n                        </Box>\r\n                    </Box>\r\n                    <Divider borderColor=\"currentcolor\" />\r\n\r\n                    {/* Pricing */}\r\n                    <Box d={{ base: \"inline-block\", lg: \"flex\" }} flexDir=\"row\" w=\"100%\" fontWeight=\"medium\">\r\n                        <Box as=\"h2\" fontSize=\"lg\" w={{ base: \"100%\", lg: \"30%\" }} mb=\"5\">Pricing ($)</Box>\r\n                        <VStack alignItems=\"start\" w=\"100%\">\r\n                            <ServiceDisplay isOn={room.refundPercent === 100 ? true : false}\r\n                                name=\"Allow full refund\" size=\"lg\"\r\n                                toggle={(checked) => { setRoom((r) => ({ ...r, refundPercent: checked ? 100 : 80 })) }}\r\n                            />\r\n                            {room.refundPercent !== 100 &&\r\n                                <Box>\r\n                                    Amount refund: {room.refundPercent}%\r\n                                </Box>\r\n                            }\r\n                            <Slider value={room.refundPercent} min={0} max={100} step={5} colorScheme=\"blue\"\r\n                                onChange={(percent) => { setRoom((r) => ({ ...r, refundPercent: percent })) }}>\r\n                                <SliderTrack>\r\n                                    <SliderFilledTrack />\r\n                                </SliderTrack>\r\n                                <SliderThumb boxSize={6} />\r\n                            </Slider>\r\n                            <FormControl isRequired id=\"prop-price-base\" isInvalid={room.basePrice === 0 ? true : false}>\r\n                                <FormLabel opacity={room.basePrice === 0 ? 0.4 : 1} as=\"h2\" fontSize=\"md\">Base price</FormLabel>\r\n                                <NumberInput value={room.basePrice}\r\n                                    onChange={(price) => { setRoom((r) => ({ ...r, basePrice: parseInt(price) | 0 })) }}\r\n                                >\r\n                                    <NumberInputField variant=\"filled\" required />\r\n                                </NumberInput>\r\n                            </FormControl>\r\n                            <FormControl isRequired id=\"prop-price-cleaning\">\r\n                                <FormLabel opacity={room.cleaningFee === 0 ? 0.4 : 1} as=\"h2\" fontSize=\"md\">Cleaning fee</FormLabel>\r\n                                <NumberInput value={room.cleaningFee}\r\n                                    onChange={(price) => { setRoom((r) => ({ ...r, cleaningFee: parseInt(price) | 0 })) }}\r\n                                >\r\n                                    <NumberInputField variant=\"filled\" required />\r\n                                </NumberInput>\r\n                            </FormControl>\r\n                            <FormControl isRequired id=\"prop-price-service\">\r\n                                <FormLabel opacity={room.serviceFee === 0 ? 0.4 : 1} as=\"h2\" fontSize=\"md\">Service fee</FormLabel>\r\n                                <NumberInput value={room.serviceFee}\r\n                                    onChange={(price) => { setRoom((r) => ({ ...r, serviceFee: parseInt(price) | 0 })) }}\r\n                                >\r\n                                    <NumberInputField variant=\"filled\" required />\r\n                                </NumberInput>\r\n                            </FormControl>\r\n                        </VStack>\r\n                    </Box>\r\n\r\n                    <Box>\r\n                        <Link as={RouterLink} to=\"/room/preview\" _hover={{ textStyle: \"none\" }} target=\"_blank\" onClick={() => localStorage.setItem(\"previewRoom\", JSON.stringify(room))}>\r\n                            <Button variant=\"solid\" mr=\"10\" colorScheme=\"green\">\r\n                                See a preview\r\n                            </Button>\r\n                        </Link>\r\n\r\n                        <Button variant=\"solid\" type=\"submit\" colorScheme=\"blue\" onClick={(e) => handlePublish(e)}>\r\n                            Confirm\r\n                        </Button>\r\n                    </Box>\r\n                </VStack>\r\n            </Box>\r\n        </chakra.form>\r\n    );\r\n}\r\n\r\ninterface ServiceDisplayProps {\r\n    name: string;\r\n    id?: string;\r\n    isOn: boolean;\r\n    toggle: (checked: boolean) => void;\r\n}\r\n\r\nconst ServiceDisplay: React.FC<ServiceDisplayProps & SwitchProps> = (props) =>\r\n    <FormControl display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" pr=\"2\">\r\n        <FormLabel htmlFor={\"service_\" + props.name} mb=\"0\" opacity={props.isOn ? 1 : 0.4}>\r\n            {props.name}\r\n        </FormLabel>\r\n        <Switch id={\"service_\" + props.name} isChecked={props.isOn}\r\n            {...props}\r\n            onChange={(e) => { props.toggle(e.target.checked) }} />\r\n    </FormControl>\r\n\r\nexport default PublishRoomPage;","import React from 'react'\r\n\r\nconst PreviewRoomPage = () => {\r\n    const [room, setRoom] = React.useState<any>();\r\n    console.log(room);\r\n\r\n    React.useEffect(() => {\r\n        const room = localStorage.getItem(\"previewRoom\");\r\n        console.log(room)\r\n        if (room) setRoom(JSON.parse(room));\r\n\r\n        return function cleanup() {\r\n            localStorage.removeItem(\"previewRoom\");\r\n        }\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        console.log(room);\r\n    }, [room])\r\n\r\n    return <>Hello</>\r\n}\r\n\r\nexport default PreviewRoomPage;","import { Alert, AlertDescription, AlertIcon, AlertTitle, Box, Button, Collapse, useDisclosure, useToast } from '@chakra-ui/react'\r\nimport React, { useContext } from 'react'\r\nimport { registerHost } from '../API'\r\nimport { AuthContext } from '../Contexts/AuthContext'\r\n\r\nconst RegisterHostPage = () => {\r\n    const auth = useContext(AuthContext);\r\n    const toast = useToast();\r\n    const alert = useDisclosure();\r\n\r\n    const handleRegisterClick = () => {\r\n        alert.onOpen();\r\n        registerHost().then(res => {\r\n            console.log(res);\r\n            if (res.status === 200) {\r\n                localStorage.setItem(\"token\", res.data.token);\r\n                auth.updateToken(res.data.token);\r\n                toast({\r\n                    description: \"Congrat! You are eligible as a new host!\",\r\n                    status: \"success\"\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            toast({\r\n                description: err,\r\n                status: \"error\"\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box d=\"flex\" flexDir=\"column\" gridGap=\"2\" justifyItems=\"center\" justifyContent=\"center\">\r\n            <Button onClick={() => handleRegisterClick()}\r\n                colorScheme=\"green\" w=\"30ch\"\r\n                isDisabled={auth.user?.roles.includes(\"Owner\")}\r\n                alignSelf=\"center\"\r\n            >\r\n                {auth.user?.roles.includes(\"Owner\") ? \"You are already a host!\" : \"Register to become a host!\"}\r\n            </Button>\r\n            <Collapse in={alert.isOpen}>\r\n                <SuccessAlert></SuccessAlert>\r\n            </Collapse>\r\n        </Box>\r\n    )\r\n}\r\n\r\nconst SuccessAlert = () => <Alert\r\n    status=\"success\"\r\n    variant=\"subtle\"\r\n    flexDirection=\"column\"\r\n    alignItems=\"center\"\r\n    justifyContent=\"center\"\r\n    textAlign=\"center\"\r\n    height=\"200px\"\r\n>\r\n    <AlertIcon boxSize=\"40px\" mr={0} />\r\n    <AlertTitle mt={4} mb={1} fontSize=\"lg\">\r\n        Application submitted!\r\n                </AlertTitle>\r\n    <AlertDescription maxWidth=\"sm\">\r\n        Thanks for submitting your application. Our team will get back to you soon.\r\n                </AlertDescription>\r\n</Alert>\r\n\r\nexport default RegisterHostPage;","import * as React from \"react\"\r\nimport {\r\n  ChakraProvider,\r\n  Box,\r\n  extendTheme,\r\n  Divider,\r\n  useBreakpointValue,\r\n} from \"@chakra-ui/react\"\r\nimport { HashRouter, Route, Switch, BrowserRouter, Redirect, RouteProps, useLocation, useHistory } from 'react-router-dom'\r\nimport HomePage from \"./Pages/HomePage\";\r\nimport SingleRoom from \"./Pages/SingleRoom\";\r\nimport ErrorPage from \"./Pages/ErrorPage\";\r\nimport RoomsPage from \"./Pages/RoomsPage\";\r\nimport \"./App.css\";\r\nimport { mode } from \"@chakra-ui/theme-tools\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Footer from \"./Components/NavComponents/Footer\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { AuthContext, AuthProvider } from \"./Contexts/AuthContext\";\r\nimport ProfilePage from \"./Pages/ProfilePage\";\r\nimport Navbar from \"./Components/NavComponents/Navbar\";\r\nimport PublishRoomPage from \"./Pages/PublishRoomPage\";\r\nimport LoginForm from \"./Components/LoginForm\";\r\nimport LoadingBar from \"react-top-loading-bar\";\r\nimport PreviewRoomPage from \"./Pages/PreviewRoomPage\";\r\nimport RegisterHostPage from \"./Pages/RegisterHostPage\";\r\nimport { axAuth } from \"./API\";\r\n// theme.components.Button.baseStyle.borderRadius = \"0\";\r\n\r\nconst myTheme = extendTheme({\r\n  config: {\r\n    initialColorMode: \"dark\"\r\n  },\r\n  components: {\r\n    Button: {\r\n      defaultProps: {\r\n      }\r\n    },\r\n  }\r\n})\r\n\r\nconst queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n\r\n    }\r\n  }\r\n});\r\n\r\n\r\nexport const App = () => {\r\n  const loadingRef = React.useRef<any>(null);\r\n  // loading bar will appear when a request is sended\r\n  // and disappear when get a response\r\n  // REMINDER: this is a fastest way to indicate top loading bar,\r\n  // but not in a very elegant way, should put it in a context and update manually in component\r\n  React.useEffect(() => {\r\n    loadingRef.current.complete();\r\n\r\n    axAuth.interceptors.request.use((config) => {\r\n      loadingRef.current.staticStart();\r\n      return config;\r\n    }, (e) => {\r\n      loadingRef.current.complete();\r\n      return Promise.reject(e);\r\n    })\r\n\r\n    axAuth.interceptors.response.use((config) => {\r\n      loadingRef.current.complete();\r\n      return config;\r\n    }, (e) => {\r\n      loadingRef.current.complete();\r\n      return Promise.reject(e);\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <HashRouter basename=\"/\">\r\n      <ChakraProvider theme={myTheme}>\r\n        <QueryClientProvider client={queryClient}>\r\n          <Box d=\"flex\" flexDir=\"column\" minH=\"100vh\">\r\n            <AuthProvider>\r\n              <ScrollToTop />\r\n              <Box flex=\"1\">\r\n                <LoadingBar color=\"#f11946\" ref={loadingRef}></LoadingBar>\r\n                <Switch>\r\n                  <Route exact path=\"/\" >\r\n                    <HomePage />\r\n                  </Route>\r\n\r\n                  <Route component={LoginPage} exact path=\"/login\"\r\n                    render={({ location }) =>\r\n                      <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\r\n                    }\r\n                  />\r\n                  <Box mx={{ base: \"10px\", md: \"50px\", lg: \"100px\" }} mt=\"5\">\r\n                    <Navbar></Navbar>\r\n                    <Switch>\r\n                      <Route exact path=\"/rooms/:slug\" component={SingleRoom} />\r\n                      <Route exact path=\"/rooms\" component={RoomsPage} />\r\n                      <Route exact path=\"/room/preview\" component={PreviewRoomPage} />\r\n                      <AuthRoute exact path=\"/profile\" component={ProfilePage}></AuthRoute>\r\n                      <RoleRoute roles={[\"Owner\"]} exact path=\"/user/publish\" component={PublishRoomPage}></RoleRoute>roles={[\"Owner\"]}\r\n                      <AuthRoute exact path=\"/user/register-host\" component={RegisterHostPage}></AuthRoute>\r\n                      <RoleRoute roles={[\"Admin\"]} exact path=\"/admin\"></RoleRoute>\r\n                      <Route component={ErrorPage} />\r\n                    </Switch>\r\n                  </Box>\r\n                </Switch>\r\n              </Box>\r\n            </AuthProvider>\r\n            <Divider mt=\"10\" />\r\n            <Footer mx={{ base: \"10px\", md: \"50px\", lg: \"100px\" }} />\r\n          </Box>\r\n\r\n        </QueryClientProvider>\r\n      </ChakraProvider>\r\n    </HashRouter>\r\n  )\r\n};\r\n\r\ninterface LocationState {\r\n  from: {\r\n    pathname: string;\r\n  };\r\n}\r\n\r\nconst LoginPage = () => {\r\n  const location = useLocation<LocationState>();\r\n  const auth = React.useContext(AuthContext);\r\n\r\n  let { from } = location.state || { from: { pathname: \"/\" } };\r\n  if (auth.user) return <Redirect to={from}></Redirect>\r\n\r\n  return (\r\n    <Box mx=\"20%\" mt=\"10\" flex=\"0\">\r\n      <Navbar />\r\n      <LoginForm isRegistering={false}></LoginForm>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst AuthRoute: React.FC<RouteProps> = ({ children, ...rest }) => {\r\n  let auth = React.useContext(AuthContext);\r\n  if (auth.user) return (<Route {...rest}>{children}</Route>)\r\n\r\n  else return (<Route {...rest}>\r\n    <Redirect to={{\r\n      pathname: \"/login\",\r\n      state: {\r\n        from: rest.path\r\n      }\r\n    }} />\r\n  </Route>)\r\n}\r\n\r\ntype RoleRouteProps = {\r\n  roles: AppRole[];\r\n}\r\n\r\nconst RoleRoute = (props: RoleRouteProps & RouteProps) => {\r\n  const { roles, children, ...rest } = props;\r\n  const auth = React.useContext(AuthContext);\r\n\r\n  if (!auth.user) return (<Route {...rest}>\r\n    <Redirect to={{\r\n      pathname: \"/login\",\r\n      state: {\r\n        from: rest.path\r\n      }\r\n    }} />\r\n  </Route>)\r\n\r\n  const ifContainsAll = (haystack?: string[] | string, needles?: string[]) => {\r\n    if (!haystack) return false;\r\n    if (!needles) return true;\r\n\r\n    for (const n of needles) {\r\n      if (!haystack.includes(n)) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  if (ifContainsAll(auth.user?.roles, roles)) return (<Route {...rest}>{children}</Route>)\r\n  else return (\r\n    <Route {...rest}>\r\n      <Redirect to={{\r\n        pathname: \"/error\",\r\n        state: {\r\n          message: \"You are not authorized\"\r\n        }\r\n      }}></Redirect>\r\n    </Route>\r\n  )\r\n}\r\n\r\nconst ScrollToTop = () => {\r\n  const { pathname } = useLocation();\r\n  React.useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname])\r\n\r\n  return null;\r\n}\r\n","import { ColorModeScript, theme } from \"@chakra-ui/react\"\r\nimport * as React from \"react\";\r\nimport ReactDOM from \"react-dom\"\r\nimport { App } from \"./App\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ColorModeScript initialColorMode={theme.config.initialColorMode} />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n)"],"sourceRoot":""}