[{"E:\\Repos\\hostel-chakra\\Hostel\\src\\index.tsx":"1","E:\\Repos\\hostel-chakra\\Hostel\\src\\reportWebVitals.ts":"2","E:\\Repos\\hostel-chakra\\Hostel\\src\\serviceWorker.ts":"3","E:\\Repos\\hostel-chakra\\Hostel\\src\\App.tsx":"4","E:\\Repos\\hostel-chakra\\Hostel\\src\\Pages\\SingleRoom.tsx":"5","E:\\Repos\\hostel-chakra\\Hostel\\src\\Pages\\ErrorPage.tsx":"6","E:\\Repos\\hostel-chakra\\Hostel\\src\\ColorModeSwitcher.tsx":"7","E:\\Repos\\hostel-chakra\\Hostel\\src\\Logo.tsx":"8","E:\\Repos\\hostel-chakra\\Hostel\\src\\Pages\\HomePage.tsx":"9","E:\\Repos\\hostel-chakra\\Hostel\\src\\Pages\\RoomsPage.tsx":"10","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\HomeComponents\\PropertyTypeList.tsx":"11","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\SearchBar.tsx":"12","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\Navbar.tsx":"13","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\FilterComponents\\RoomCardList.tsx":"14","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\PickRangeDay.tsx":"15","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\HomeComponents\\PropertyType.tsx":"16","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\PopDetail.tsx":"17","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\FilterComponents\\RoomCard.tsx":"18","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\Footer.tsx":"19"},{"size":862,"mtime":1612286281166,"results":"20","hashOfConfig":"21"},{"size":431,"mtime":1612286281167,"results":"22","hashOfConfig":"21"},{"size":5404,"mtime":1612286281167,"results":"23","hashOfConfig":"21"},{"size":1405,"mtime":1613435563432,"results":"24","hashOfConfig":"21"},{"size":2200,"mtime":1613438832215,"results":"25","hashOfConfig":"21"},{"size":173,"mtime":1612286281165,"results":"26","hashOfConfig":"21"},{"size":773,"mtime":1612286281164,"results":"27","hashOfConfig":"21"},{"size":614,"mtime":1612286281165,"results":"28","hashOfConfig":"21"},{"size":1187,"mtime":1613423994602,"results":"29","hashOfConfig":"21"},{"size":826,"mtime":1613436951407,"results":"30","hashOfConfig":"21"},{"size":1475,"mtime":1613423216593,"results":"31","hashOfConfig":"21"},{"size":3254,"mtime":1613423216596,"results":"32","hashOfConfig":"21"},{"size":1033,"mtime":1613423216594,"results":"33","hashOfConfig":"21"},{"size":954,"mtime":1613438749991,"results":"34","hashOfConfig":"21"},{"size":3505,"mtime":1613423216595,"results":"35","hashOfConfig":"21"},{"size":960,"mtime":1613423216593,"results":"36","hashOfConfig":"21"},{"size":3126,"mtime":1613423216595,"results":"37","hashOfConfig":"21"},{"size":3016,"mtime":1613438749997,"results":"38","hashOfConfig":"21"},{"size":690,"mtime":1613435526288,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"13hiuhw",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"E:\\Repos\\hostel-chakra\\Hostel\\src\\index.tsx",[],["86","87"],"E:\\Repos\\hostel-chakra\\Hostel\\src\\reportWebVitals.ts",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\serviceWorker.ts",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\App.tsx",["88"],"import * as React from \"react\"\r\nimport {\r\n  ChakraProvider,\r\n  Box,\r\n  extendTheme,\r\n} from \"@chakra-ui/react\"\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport HomePage from \"./Pages/HomePage\";\r\nimport SingleRoom from \"./Pages/SingleRoom\";\r\nimport ErrorPage from \"./Pages/ErrorPage\";\r\nimport RoomsPage from \"./Pages/RoomsPage\";\r\nimport \"./App.css\";\r\nimport { mode } from \"@chakra-ui/theme-tools\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Footer from \"./Components/NavComponents/Footer\";\r\n// theme.components.Button.baseStyle.borderRadius = \"0\";\r\n\r\nconst myTheme = extendTheme({\r\n  components: {\r\n    Button: {\r\n      defaultProps: {\r\n      }\r\n    },\r\n  }\r\n})\r\n\r\n\r\nexport const App = () => (\r\n  <Router>\r\n    <ChakraProvider theme={myTheme}>\r\n\r\n      <Box d=\"flex\" flexDir=\"column\" minH=\"100vh\">\r\n        <Box flex=\"1\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route exact path=\"/room/:slug\" component={SingleRoom} />\r\n            <Route exact path=\"/rooms/:slug\" component={RoomsPage} />\r\n            <Route exact path=\"/rooms/\" component={RoomsPage} />\r\n            <Route component={ErrorPage} />\r\n          </Switch>\r\n        </Box>\r\n\r\n        <Box flexShrink={0}>\r\n          <Footer />\r\n        </Box>\r\n      </Box>\r\n\r\n    </ChakraProvider>\r\n  </Router>\r\n)\r\n","E:\\Repos\\hostel-chakra\\Hostel\\src\\Pages\\SingleRoom.tsx",["89","90","91"],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Pages\\ErrorPage.tsx",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\ColorModeSwitcher.tsx",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Logo.tsx",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Pages\\HomePage.tsx",["92"],"import React from 'react'\r\nimport PropertyTypeList from '../Components/HomeComponents/PropertyTypeList'\r\nimport SearchBar from '../Components/NavComponents/SearchBar';\r\nimport { Box, DarkMode } from \"@chakra-ui/react\"\r\nimport BG from \"../Images/HomeBG.webp\";\r\nimport Navbar from '../Components/NavComponents/Navbar';\r\n\r\nconst px = \"10%\";\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <Box>\r\n            <Box minH={[\"50vh\", \"75vh\", \"85vh\"]} style={{ background: \"url('\" + BG + \"') center/cover no-repeat\" }}>\r\n                <Box px={px} pt=\"5\">\r\n                    <Navbar></Navbar>\r\n                    <SearchBar />\r\n                    <Box as=\"h1\" fontFamily=\"mono\" opacity=\"0.5\" fontWeight=\"bold\" fontSize={[\"3xl\", \"4xl\", \"6xl\", \"8xl\"]}\r\n                        position=\"relative\" mt={[\"5vh\", \"10vh\", \"20vh\", \"30vh\"]}>EXPLORE AROUND</Box>\r\n                </Box>\r\n            </Box>\r\n            <Box px={px} mt=\"10\">\r\n                <Box as=\"h2\" fontWeight=\"bold\" fontSize=\"4xl\" mb=\"5\">\r\n                    LIVE ANYWHERE\r\n                </Box>\r\n                <PropertyTypeList></PropertyTypeList>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\nexport default HomePage;","E:\\Repos\\hostel-chakra\\Hostel\\src\\Pages\\RoomsPage.tsx",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\HomeComponents\\PropertyTypeList.tsx",["93","94","95"],"import { Flex, Grid, Spacer } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport Slider, { Settings } from 'react-slick';\r\nimport PropertyType from './PropertyType';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nvar settings: Settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 1,\r\n    initialSlide: 0,\r\n    swipeToSlide: true,\r\n    responsive: [\r\n        {\r\n            breakpoint: 1024,\r\n            settings: {\r\n                slidesToShow: 4,\r\n                slidesToScroll: 1,\r\n                infinite: true,\r\n                dots: true\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 600,\r\n            settings: {\r\n                slidesToShow: 3,\r\n                slidesToScroll: 1,\r\n                initialSlide: 2\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 480,\r\n            settings: {\r\n                slidesToShow: 1,\r\n                slidesToScroll: 1\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\nconst PropertyTypeList = () => {\r\n    return (\r\n        <div>\r\n            <Slider {...settings}>\r\n                <PropertyType></PropertyType>\r\n                <PropertyType></PropertyType>\r\n                <PropertyType></PropertyType>\r\n                <PropertyType></PropertyType>\r\n                <PropertyType></PropertyType>\r\n            </Slider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PropertyTypeList;","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\SearchBar.tsx",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\Navbar.tsx",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\FilterComponents\\RoomCardList.tsx",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\PickRangeDay.tsx",["96"],"import { Box, Button, Flex } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport DayPicker from 'react-day-picker';\r\nimport { DateUtils } from \"react-day-picker\";\r\nimport 'react-day-picker/lib/style.css';\r\ntype PickRangeDayState = {\r\n    from?: Date;\r\n    to?: Date;\r\n    enteredTo?: Date; // keep track of the last day for mouseEnter\r\n}\r\n\r\ntype PickRangeDayProps = {\r\n    from?: Date,\r\n    to?: Date,\r\n    updateDate: (from?: Date, to?: Date) => void,\r\n}\r\n\r\nconst defaultDate: PickRangeDayState = {\r\n    from: undefined,\r\n    to: undefined,\r\n    enteredTo: undefined\r\n}\r\n\r\nconst PickRangeDay: React.FC<PickRangeDayProps> = ({ from, to, updateDate }) => {\r\n    const [state, setState] = React.useState<PickRangeDayState>({ from: from, to: to });\r\n\r\n    React.useEffect(() => {\r\n        updateDate(state.from, state.to);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [state.from, state.to]);\r\n\r\n    const isSelectingFirstDay = (day: Date, from?: Date, to?: Date) => {\r\n        const isBeforeFirstDay = from && DateUtils.isDayBefore(day, from);\r\n        const isRangeSelected = from && to;\r\n        return !from || isBeforeFirstDay || isRangeSelected;\r\n    }\r\n\r\n    const handleDayMouseEnter = (day: Date) => {\r\n        const { from, to } = state;\r\n        if (!isSelectingFirstDay(day, from, to)) {\r\n            setState(s => ({\r\n                ...s,\r\n                enteredTo: day,\r\n            }));\r\n        }\r\n    }\r\n\r\n    const handleDayClick = (day: Date) => {\r\n        const today = new Date(Date.now());\r\n        if (day < today) return;\r\n        const { from, to } = state;\r\n        if (from && to && day >= from && day <= to) {\r\n            handleResetClick();\r\n            return;\r\n        }\r\n        if (isSelectingFirstDay(day, from, to)) {\r\n            setState({\r\n                from: day,\r\n                to: undefined,\r\n                enteredTo: undefined,\r\n            });\r\n        } else {\r\n            setState(s => ({\r\n                ...s,\r\n                to: day,\r\n                enteredTo: day,\r\n            }));\r\n        }\r\n    }\r\n\r\n    const handleResetClick = () => {\r\n        setState(defaultDate);\r\n    }\r\n\r\n    const selectedDays = [state.from, { from: state.from, to: state.enteredTo }];\r\n\r\n    const disabledDays = {\r\n        before: new Date(Date.now())\r\n    }\r\n\r\n    const modifiers = {\r\n        start: state.from,\r\n        end: state.enteredTo,\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <DayPicker\r\n                numberOfMonths={2}\r\n                fromMonth={state.from}\r\n                modifiers={modifiers as any}\r\n                onDayClick={handleDayClick}\r\n                disabledDays={disabledDays}\r\n                onDayMouseEnter={handleDayMouseEnter}\r\n                selectedDays={selectedDays as any}>\r\n            </DayPicker>\r\n            <Flex justifyContent=\"center\" alignItems=\"center\">\r\n                {!state.from && !state.to && 'Please select the first day.'}\r\n                {state.from && !state.to && 'Please select the last day.'}\r\n                {state.from &&\r\n                    state.to &&\r\n                    `Selected from ${state.from.toLocaleDateString()} to\r\n                ${state.to.toLocaleDateString()}`}{' '}\r\n                {state.from && state.to && (\r\n                    <Button onClick={handleResetClick}>\r\n                        Reset\r\n                    </Button>\r\n                )}\r\n            </Flex>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PickRangeDay;","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\HomeComponents\\PropertyType.tsx",["97","98"],"import { Box, Flex, Image, Square, VStack } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PropertyType = () => {\r\n    return (\r\n        <Link to=\"/rooms\">\r\n            <VStack alignItems=\"start\" p=\"4\">\r\n                <Box maxW=\"sm\" maxH=\"sm\">\r\n                    <Image width=\"inherit\" height=\"inherit\" src=\"https://bit.ly/2Z4KKcF\" objectFit=\"cover\"></Image>\r\n                </Box>\r\n\r\n                <Box\r\n                    mt=\"1\"\r\n                    fontWeight=\"semibold\"\r\n                    as=\"h4\"\r\n                    lineHeight=\"tight\"\r\n                    isTruncated\r\n                >\r\n                    Apartment\r\n            </Box>\r\n                <Box>\r\n                    <Box as=\"span\" color=\"gray.500\" fontSize=\"md\">\r\n                        100+ rooms\r\n          </Box>\r\n                </Box>\r\n            </VStack>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default PropertyType;","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\PopDetail.tsx",["99","100"],"import { Box, Flex, VStack, Text, Spacer, Square, Button, StackDivider } from '@chakra-ui/react';\r\nimport React from 'react';\r\n\r\ntype PopDetailState = {\r\n    adult: number;\r\n    children: number;\r\n    bedRoom: number;\r\n}\r\n\r\ninterface PopDetailProps extends PopDetailState {\r\n    updatePeople: (adult: number, children: number, room: number) => void;\r\n}\r\n\r\nconst PopDetail: React.FC<PopDetailProps> = ({ adult, children, bedRoom, updatePeople }) => {\r\n    return (\r\n        <div>\r\n            <Box p=\"4\" style={{ backdropFilter: \"blur(5px)\" }}>\r\n                <VStack align=\"stretch\" spacing={4}>\r\n                    <Flex alignItems=\"center\">\r\n                        <Text mr=\"auto\" fontSize=\"md\">Adult</Text>\r\n                        <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                            <Button variant=\"ghost\" borderRadius=\"0\" disabled={adult <= 1 ? true : false}\r\n                                onClick={() => updatePeople(--adult, children, bedRoom)}>-</Button>\r\n                        </Square>\r\n                        <Text mx=\"4\" fontSize=\"md\">{adult}</Text>\r\n                        <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                            <Button variant=\"ghost\" borderRadius=\"0\"\r\n                                onClick={() => updatePeople(++adult, children, bedRoom)}>+</Button>\r\n                        </Square>\r\n                    </Flex>\r\n                    <Flex alignItems=\"center\">\r\n                        <Text mr=\"auto\" fontSize=\"md\">Children</Text>\r\n                        <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                            <Button variant=\"ghost\" borderRadius=\"0\" disabled={children <= 0 ? true : false}\r\n                                onClick={() => updatePeople(adult, --children, bedRoom)}>-</Button>\r\n                        </Square>\r\n                        <Text mx=\"4\" fontSize=\"md\">{children}</Text>\r\n                        <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                            <Button variant=\"ghost\" borderRadius=\"0\"\r\n                                onClick={() => updatePeople(adult, ++children, bedRoom)}>+</Button>\r\n                        </Square>\r\n                    </Flex>\r\n                    <Flex alignItems=\"center\">\r\n                        <Text mr=\"auto\" fontSize=\"md\">Room</Text>\r\n                        <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                            <Button variant=\"ghost\" borderRadius=\"0\" disabled={bedRoom <= 1 ? true : false}\r\n                                onClick={() => updatePeople(adult, children, --bedRoom)}>-</Button>\r\n                        </Square>\r\n                        <Text mx=\"4\" fontSize=\"md\">{bedRoom}</Text>\r\n                        <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                            <Button variant=\"ghost\" borderRadius=\"0\"\r\n                                onClick={() => updatePeople(adult, children, ++bedRoom)}>+</Button>\r\n                        </Square>\r\n                    </Flex>\r\n                </VStack>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopDetail;","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\FilterComponents\\RoomCard.tsx",["101"],"import { Badge, Box, Image } from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport { BsStar, BsStarFill } from 'react-icons/bs';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst defaultRoom: RoomCardType = {\r\n    id: \"random-id-12321\",\r\n    name: \"Crystal palace\",\r\n    thumbnailUrl: \"https://bit.ly/2Z4KKcF\",\r\n    thumbnailAlt: \"rear view house with pool\",\r\n    description: \"Best place in town\",\r\n    location: \"Dark side, the moon\",\r\n    rating: 4.5,\r\n    rateCounter: 23,\r\n    formattedPrice: \"2021.00$\",\r\n    services: [\"Pet\", \"Kitchen\", \"Breakfast\", \"Wifi\"]\r\n}\r\n\r\ntype RoomCardProps = {\r\n    room: RoomCardType;\r\n}\r\n\r\nconst RoomCard: React.FC<RoomCardProps> = ({ room, children }) => {\r\n    return (\r\n        <Link to={\"/room/\" + room.id}>\r\n            <Box overflow=\"hidden\" borderWidth=\"1px\" borderRadius=\"lg\">\r\n                <Image src={room.thumbnailUrl} alt={room.thumbnailAlt} />\r\n                <Box p=\"4\">\r\n                    <Box d=\"flex\" alignItems=\"baseline\">\r\n                        <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\r\n                            New\r\n                    </Badge>\r\n                        {room.services.map(s => {\r\n                            return (\r\n                                <Box\r\n                                    color=\"gray.500\"\r\n                                    fontWeight=\"semibold\"\r\n                                    letterSpacing=\"wide\"\r\n                                    fontSize=\"xs\"\r\n                                    textTransform=\"uppercase\"\r\n                                    ml=\"2\"\r\n                                    isTruncated\r\n                                >{s} {room.services[room.services.length - 1] !== s && <>&bull;</>} </Box>\r\n                            )\r\n                        })}\r\n                    </Box>\r\n\r\n                    <Box\r\n                        mt=\"1\"\r\n                        fontWeight=\"semibold\"\r\n                        as=\"h4\"\r\n                        lineHeight=\"tight\"\r\n                        isTruncated\r\n                    >\r\n                        {room.name}\r\n                    </Box>\r\n                    <Box\r\n                        as=\"h3\"\r\n                        lineHeight=\"tight\"\r\n                        isTruncated\r\n                    >\r\n                        {room.description}\r\n                    </Box>\r\n                    <Box d='flex' justifyContent=\"space-between\">\r\n                        <Box as=\"h4\" fontSize=\"3xl\">\r\n                            {room.formattedPrice}\r\n                        </Box>\r\n\r\n                        <Box d=\"flex\" alignItems=\"center\">\r\n                            {Array(5).fill(\"\").map((_, i) => {\r\n                                return (i < room.rating - 1 ? <BsStarFill colorRendering=\"teal.400\" /> : <BsStar />)\r\n                            })}\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default RoomCard;","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\Footer.tsx",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":13,"column":10,"nodeType":"108","messageId":"109","endLine":13,"endColumn":14},{"ruleId":"106","severity":1,"message":"110","line":15,"column":6,"nodeType":"108","messageId":"109","endLine":15,"endColumn":21},{"ruleId":"106","severity":1,"message":"111","line":19,"column":7,"nodeType":"108","messageId":"109","endLine":19,"endColumn":18},{"ruleId":"106","severity":1,"message":"112","line":23,"column":13,"nodeType":"108","messageId":"109","endLine":23,"endColumn":17},{"ruleId":"106","severity":1,"message":"113","line":4,"column":15,"nodeType":"108","messageId":"109","endLine":4,"endColumn":23},{"ruleId":"106","severity":1,"message":"114","line":1,"column":10,"nodeType":"108","messageId":"109","endLine":1,"endColumn":14},{"ruleId":"106","severity":1,"message":"115","line":1,"column":16,"nodeType":"108","messageId":"109","endLine":1,"endColumn":20},{"ruleId":"106","severity":1,"message":"116","line":1,"column":22,"nodeType":"108","messageId":"109","endLine":1,"endColumn":28},{"ruleId":"106","severity":1,"message":"117","line":1,"column":10,"nodeType":"108","messageId":"109","endLine":1,"endColumn":13},{"ruleId":"106","severity":1,"message":"114","line":1,"column":15,"nodeType":"108","messageId":"109","endLine":1,"endColumn":19},{"ruleId":"106","severity":1,"message":"118","line":1,"column":28,"nodeType":"108","messageId":"109","endLine":1,"endColumn":34},{"ruleId":"106","severity":1,"message":"116","line":1,"column":35,"nodeType":"108","messageId":"109","endLine":1,"endColumn":41},{"ruleId":"106","severity":1,"message":"119","line":1,"column":59,"nodeType":"108","messageId":"109","endLine":1,"endColumn":71},{"ruleId":"106","severity":1,"message":"120","line":6,"column":7,"nodeType":"108","messageId":"109","endLine":6,"endColumn":32},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"@typescript-eslint/no-unused-vars","'mode' is defined but never used.","Identifier","unusedVar","'SingleRoomProps' is defined but never used.","'GetRoomById' is assigned a value but never used.","'slug' is assigned a value but never used.","'DarkMode' is defined but never used.","'Flex' is defined but never used.","'Grid' is defined but never used.","'Spacer' is defined but never used.","'Box' is defined but never used.","'Square' is defined but never used.","'StackDivider' is defined but never used.","'defaultRoom' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]