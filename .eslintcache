[{"E:\\Repos\\hostel-chakra\\Hostel\\src\\index.tsx":"1","E:\\Repos\\hostel-chakra\\Hostel\\src\\reportWebVitals.ts":"2","E:\\Repos\\hostel-chakra\\Hostel\\src\\serviceWorker.ts":"3","E:\\Repos\\hostel-chakra\\Hostel\\src\\App.tsx":"4","E:\\Repos\\hostel-chakra\\Hostel\\src\\Pages\\SingleRoom.tsx":"5","E:\\Repos\\hostel-chakra\\Hostel\\src\\Pages\\ErrorPage.tsx":"6","E:\\Repos\\hostel-chakra\\Hostel\\src\\Logo.tsx":"7","E:\\Repos\\hostel-chakra\\Hostel\\src\\ColorModeSwitcher.tsx":"8","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\Navbar.tsx":"9","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\SearchBar.tsx":"10","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\PickRangeDay.tsx":"11","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\PopDetail.tsx":"12","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\HomeComponents\\PropertyTypeList.tsx":"13","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\HomeComponents\\PropertyType.tsx":"14","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\FilterComponents\\RoomCardList.tsx":"15","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\FilterComponents\\RoomCard.tsx":"16","E:\\Repos\\hostel-chakra\\Hostel\\src\\Pages\\HomePage.tsx":"17","E:\\Repos\\hostel-chakra\\Hostel\\src\\Pages\\RoomsPage.tsx":"18"},{"size":862,"mtime":1612286281166,"results":"19","hashOfConfig":"20"},{"size":431,"mtime":1612286281167,"results":"21","hashOfConfig":"20"},{"size":5404,"mtime":1612286281167,"results":"22","hashOfConfig":"20"},{"size":1275,"mtime":1613393875851,"results":"23","hashOfConfig":"20"},{"size":332,"mtime":1612884979500,"results":"24","hashOfConfig":"20"},{"size":173,"mtime":1612286281165,"results":"25","hashOfConfig":"20"},{"size":614,"mtime":1612286281165,"results":"26","hashOfConfig":"20"},{"size":773,"mtime":1612286281164,"results":"27","hashOfConfig":"20"},{"size":1033,"mtime":1612884549917,"results":"28","hashOfConfig":"20"},{"size":3254,"mtime":1613391680932,"results":"29","hashOfConfig":"20"},{"size":3505,"mtime":1613391784265,"results":"30","hashOfConfig":"20"},{"size":3126,"mtime":1613391587974,"results":"31","hashOfConfig":"20"},{"size":1475,"mtime":1612866386056,"results":"32","hashOfConfig":"20"},{"size":960,"mtime":1612965002985,"results":"33","hashOfConfig":"20"},{"size":613,"mtime":1613398816458,"results":"34","hashOfConfig":"20"},{"size":1926,"mtime":1613398667047,"results":"35","hashOfConfig":"20"},{"size":1187,"mtime":1613393859488,"results":"36","hashOfConfig":"20"},{"size":826,"mtime":1613393875901,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"13hiuhw",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Repos\\hostel-chakra\\Hostel\\src\\index.tsx",[],["79","80"],"E:\\Repos\\hostel-chakra\\Hostel\\src\\reportWebVitals.ts",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\serviceWorker.ts",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\App.tsx",["81"],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Pages\\SingleRoom.tsx",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Pages\\ErrorPage.tsx",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Logo.tsx",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\ColorModeSwitcher.tsx",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\Navbar.tsx",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\SearchBar.tsx",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\PickRangeDay.tsx",["82"],"import { Box, Button, Flex } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport DayPicker from 'react-day-picker';\r\nimport { DateUtils } from \"react-day-picker\";\r\nimport 'react-day-picker/lib/style.css';\r\ntype PickRangeDayState = {\r\n    from?: Date;\r\n    to?: Date;\r\n    enteredTo?: Date; // keep track of the last day for mouseEnter\r\n}\r\n\r\ntype PickRangeDayProps = {\r\n    from?: Date,\r\n    to?: Date,\r\n    updateDate: (from?: Date, to?: Date) => void,\r\n}\r\n\r\nconst defaultDate: PickRangeDayState = {\r\n    from: undefined,\r\n    to: undefined,\r\n    enteredTo: undefined\r\n}\r\n\r\nconst PickRangeDay: React.FC<PickRangeDayProps> = ({ from, to, updateDate }) => {\r\n    const [state, setState] = React.useState<PickRangeDayState>({ from: from, to: to });\r\n\r\n    React.useEffect(() => {\r\n        updateDate(state.from, state.to);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [state.from, state.to]);\r\n\r\n    const isSelectingFirstDay = (day: Date, from?: Date, to?: Date) => {\r\n        const isBeforeFirstDay = from && DateUtils.isDayBefore(day, from);\r\n        const isRangeSelected = from && to;\r\n        return !from || isBeforeFirstDay || isRangeSelected;\r\n    }\r\n\r\n    const handleDayMouseEnter = (day: Date) => {\r\n        const { from, to } = state;\r\n        if (!isSelectingFirstDay(day, from, to)) {\r\n            setState(s => ({\r\n                ...s,\r\n                enteredTo: day,\r\n            }));\r\n        }\r\n    }\r\n\r\n    const handleDayClick = (day: Date) => {\r\n        const today = new Date(Date.now());\r\n        if (day < today) return;\r\n        const { from, to } = state;\r\n        if (from && to && day >= from && day <= to) {\r\n            handleResetClick();\r\n            return;\r\n        }\r\n        if (isSelectingFirstDay(day, from, to)) {\r\n            setState({\r\n                from: day,\r\n                to: undefined,\r\n                enteredTo: undefined,\r\n            });\r\n        } else {\r\n            setState(s => ({\r\n                ...s,\r\n                to: day,\r\n                enteredTo: day,\r\n            }));\r\n        }\r\n    }\r\n\r\n    const handleResetClick = () => {\r\n        setState(defaultDate);\r\n    }\r\n\r\n    const selectedDays = [state.from, { from: state.from, to: state.enteredTo }];\r\n\r\n    const disabledDays = {\r\n        before: new Date(Date.now())\r\n    }\r\n\r\n    const modifiers = {\r\n        start: state.from,\r\n        end: state.enteredTo,\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <DayPicker\r\n                numberOfMonths={2}\r\n                fromMonth={state.from}\r\n                modifiers={modifiers as any}\r\n                onDayClick={handleDayClick}\r\n                disabledDays={disabledDays}\r\n                onDayMouseEnter={handleDayMouseEnter}\r\n                selectedDays={selectedDays as any}>\r\n            </DayPicker>\r\n            <Flex justifyContent=\"center\" alignItems=\"center\">\r\n                {!state.from && !state.to && 'Please select the first day.'}\r\n                {state.from && !state.to && 'Please select the last day.'}\r\n                {state.from &&\r\n                    state.to &&\r\n                    `Selected from ${state.from.toLocaleDateString()} to\r\n                ${state.to.toLocaleDateString()}`}{' '}\r\n                {state.from && state.to && (\r\n                    <Button onClick={handleResetClick}>\r\n                        Reset\r\n                    </Button>\r\n                )}\r\n            </Flex>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PickRangeDay;","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\PopDetail.tsx",["83","84"],"import { Box, Flex, VStack, Text, Spacer, Square, Button, StackDivider } from '@chakra-ui/react';\r\nimport React from 'react';\r\n\r\ntype PopDetailState = {\r\n    adult: number;\r\n    children: number;\r\n    bedRoom: number;\r\n}\r\n\r\ninterface PopDetailProps extends PopDetailState {\r\n    updatePeople: (adult: number, children: number, room: number) => void;\r\n}\r\n\r\nconst PopDetail: React.FC<PopDetailProps> = ({ adult, children, bedRoom, updatePeople }) => {\r\n    return (\r\n        <div>\r\n            <Box p=\"4\" style={{ backdropFilter: \"blur(5px)\" }}>\r\n                <VStack align=\"stretch\" spacing={4}>\r\n                    <Flex alignItems=\"center\">\r\n                        <Text mr=\"auto\" fontSize=\"md\">Adult</Text>\r\n                        <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                            <Button variant=\"ghost\" borderRadius=\"0\" disabled={adult <= 1 ? true : false}\r\n                                onClick={() => updatePeople(--adult, children, bedRoom)}>-</Button>\r\n                        </Square>\r\n                        <Text mx=\"4\" fontSize=\"md\">{adult}</Text>\r\n                        <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                            <Button variant=\"ghost\" borderRadius=\"0\"\r\n                                onClick={() => updatePeople(++adult, children, bedRoom)}>+</Button>\r\n                        </Square>\r\n                    </Flex>\r\n                    <Flex alignItems=\"center\">\r\n                        <Text mr=\"auto\" fontSize=\"md\">Children</Text>\r\n                        <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                            <Button variant=\"ghost\" borderRadius=\"0\" disabled={children <= 0 ? true : false}\r\n                                onClick={() => updatePeople(adult, --children, bedRoom)}>-</Button>\r\n                        </Square>\r\n                        <Text mx=\"4\" fontSize=\"md\">{children}</Text>\r\n                        <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                            <Button variant=\"ghost\" borderRadius=\"0\"\r\n                                onClick={() => updatePeople(adult, ++children, bedRoom)}>+</Button>\r\n                        </Square>\r\n                    </Flex>\r\n                    <Flex alignItems=\"center\">\r\n                        <Text mr=\"auto\" fontSize=\"md\">Room</Text>\r\n                        <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                            <Button variant=\"ghost\" borderRadius=\"0\" disabled={bedRoom <= 1 ? true : false}\r\n                                onClick={() => updatePeople(adult, children, --bedRoom)}>-</Button>\r\n                        </Square>\r\n                        <Text mx=\"4\" fontSize=\"md\">{bedRoom}</Text>\r\n                        <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                            <Button variant=\"ghost\" borderRadius=\"0\"\r\n                                onClick={() => updatePeople(adult, children, ++bedRoom)}>+</Button>\r\n                        </Square>\r\n                    </Flex>\r\n                </VStack>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopDetail;","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\HomeComponents\\PropertyTypeList.tsx",["85","86","87"],"import { Flex, Grid, Spacer } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport Slider, { Settings } from 'react-slick';\r\nimport PropertyType from './PropertyType';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nvar settings: Settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 1,\r\n    initialSlide: 0,\r\n    swipeToSlide: true,\r\n    responsive: [\r\n        {\r\n            breakpoint: 1024,\r\n            settings: {\r\n                slidesToShow: 4,\r\n                slidesToScroll: 1,\r\n                infinite: true,\r\n                dots: true\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 600,\r\n            settings: {\r\n                slidesToShow: 3,\r\n                slidesToScroll: 1,\r\n                initialSlide: 2\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 480,\r\n            settings: {\r\n                slidesToShow: 1,\r\n                slidesToScroll: 1\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\nconst PropertyTypeList = () => {\r\n    return (\r\n        <div>\r\n            <Slider {...settings}>\r\n                <PropertyType></PropertyType>\r\n                <PropertyType></PropertyType>\r\n                <PropertyType></PropertyType>\r\n                <PropertyType></PropertyType>\r\n                <PropertyType></PropertyType>\r\n            </Slider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PropertyTypeList;","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\HomeComponents\\PropertyType.tsx",["88","89"],"import { Box, Flex, Image, Square, VStack } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PropertyType = () => {\r\n    return (\r\n        <Link to=\"/rooms\">\r\n            <VStack alignItems=\"start\" p=\"4\">\r\n                <Box maxW=\"sm\" maxH=\"sm\">\r\n                    <Image width=\"inherit\" height=\"inherit\" src=\"https://bit.ly/2Z4KKcF\" objectFit=\"cover\"></Image>\r\n                </Box>\r\n\r\n                <Box\r\n                    mt=\"1\"\r\n                    fontWeight=\"semibold\"\r\n                    as=\"h4\"\r\n                    lineHeight=\"tight\"\r\n                    isTruncated\r\n                >\r\n                    Apartment\r\n            </Box>\r\n                <Box>\r\n                    <Box as=\"span\" color=\"gray.500\" fontSize=\"md\">\r\n                        100+ rooms\r\n          </Box>\r\n                </Box>\r\n            </VStack>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default PropertyType;","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\FilterComponents\\RoomCardList.tsx",["90","91","92"],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\FilterComponents\\RoomCard.tsx",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Pages\\HomePage.tsx",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Pages\\RoomsPage.tsx",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":13,"column":10,"nodeType":"99","messageId":"100","endLine":13,"endColumn":14},{"ruleId":"97","severity":1,"message":"101","line":1,"column":10,"nodeType":"99","messageId":"100","endLine":1,"endColumn":13},{"ruleId":"97","severity":1,"message":"102","line":1,"column":35,"nodeType":"99","messageId":"100","endLine":1,"endColumn":41},{"ruleId":"97","severity":1,"message":"103","line":1,"column":59,"nodeType":"99","messageId":"100","endLine":1,"endColumn":71},{"ruleId":"97","severity":1,"message":"104","line":1,"column":10,"nodeType":"99","messageId":"100","endLine":1,"endColumn":14},{"ruleId":"97","severity":1,"message":"105","line":1,"column":16,"nodeType":"99","messageId":"100","endLine":1,"endColumn":20},{"ruleId":"97","severity":1,"message":"102","line":1,"column":22,"nodeType":"99","messageId":"100","endLine":1,"endColumn":28},{"ruleId":"97","severity":1,"message":"104","line":1,"column":15,"nodeType":"99","messageId":"100","endLine":1,"endColumn":19},{"ruleId":"97","severity":1,"message":"106","line":1,"column":28,"nodeType":"99","messageId":"100","endLine":1,"endColumn":34},{"ruleId":"97","severity":1,"message":"101","line":1,"column":10,"nodeType":"99","messageId":"100","endLine":1,"endColumn":13},{"ruleId":"97","severity":1,"message":"104","line":1,"column":15,"nodeType":"99","messageId":"100","endLine":1,"endColumn":19},{"ruleId":"97","severity":1,"message":"105","line":1,"column":21,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"@typescript-eslint/no-unused-vars","'mode' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","'Spacer' is defined but never used.","'StackDivider' is defined but never used.","'Flex' is defined but never used.","'Grid' is defined but never used.","'Square' is defined but never used.","no-global-assign","no-unsafe-negation"]