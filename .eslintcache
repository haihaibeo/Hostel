[{"E:\\Repos\\hostel-chakra\\Hostel\\src\\index.tsx":"1","E:\\Repos\\hostel-chakra\\Hostel\\src\\reportWebVitals.ts":"2","E:\\Repos\\hostel-chakra\\Hostel\\src\\serviceWorker.ts":"3","E:\\Repos\\hostel-chakra\\Hostel\\src\\App.tsx":"4","E:\\Repos\\hostel-chakra\\Hostel\\src\\Pages\\SingleRoom.tsx":"5","E:\\Repos\\hostel-chakra\\Hostel\\src\\Pages\\ErrorPage.tsx":"6","E:\\Repos\\hostel-chakra\\Hostel\\src\\ColorModeSwitcher.tsx":"7","E:\\Repos\\hostel-chakra\\Hostel\\src\\Logo.tsx":"8","E:\\Repos\\hostel-chakra\\Hostel\\src\\Pages\\HomePage.tsx":"9","E:\\Repos\\hostel-chakra\\Hostel\\src\\Pages\\RoomsPage.tsx":"10","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\HomeComponents\\PropertyTypeList.tsx":"11","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\SearchBar.tsx":"12","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\Navbar.tsx":"13","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\FilterComponents\\RoomCardList.tsx":"14","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\PickRangeDay.tsx":"15","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\HomeComponents\\PropertyType.tsx":"16","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\PopDetail.tsx":"17","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\FilterComponents\\RoomCard.tsx":"18","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\Footer.tsx":"19","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\SingleRoomComponents\\MyRoomBadge.tsx":"20"},{"size":862,"mtime":1612286281166,"results":"21","hashOfConfig":"22"},{"size":431,"mtime":1612286281167,"results":"23","hashOfConfig":"22"},{"size":5404,"mtime":1612286281167,"results":"24","hashOfConfig":"22"},{"size":1405,"mtime":1613435563432,"results":"25","hashOfConfig":"22"},{"size":11881,"mtime":1613603039569,"results":"26","hashOfConfig":"22"},{"size":173,"mtime":1612286281165,"results":"27","hashOfConfig":"22"},{"size":773,"mtime":1612286281164,"results":"28","hashOfConfig":"22"},{"size":614,"mtime":1612286281165,"results":"29","hashOfConfig":"22"},{"size":1187,"mtime":1613423994602,"results":"30","hashOfConfig":"22"},{"size":826,"mtime":1613436951407,"results":"31","hashOfConfig":"22"},{"size":1475,"mtime":1613423216593,"results":"32","hashOfConfig":"22"},{"size":3254,"mtime":1613423216596,"results":"33","hashOfConfig":"22"},{"size":1033,"mtime":1613423216594,"results":"34","hashOfConfig":"22"},{"size":954,"mtime":1613438749991,"results":"35","hashOfConfig":"22"},{"size":3883,"mtime":1613602468750,"results":"36","hashOfConfig":"22"},{"size":960,"mtime":1613423216593,"results":"37","hashOfConfig":"22"},{"size":3126,"mtime":1613423216595,"results":"38","hashOfConfig":"22"},{"size":3020,"mtime":1613593253449,"results":"39","hashOfConfig":"22"},{"size":690,"mtime":1613435526288,"results":"40","hashOfConfig":"22"},{"size":1847,"mtime":1613599095669,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"13hiuhw",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Repos\\hostel-chakra\\Hostel\\src\\index.tsx",[],["88","89"],"E:\\Repos\\hostel-chakra\\Hostel\\src\\reportWebVitals.ts",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\serviceWorker.ts",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\App.tsx",["90"],"import * as React from \"react\"\r\nimport {\r\n  ChakraProvider,\r\n  Box,\r\n  extendTheme,\r\n} from \"@chakra-ui/react\"\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport HomePage from \"./Pages/HomePage\";\r\nimport SingleRoom from \"./Pages/SingleRoom\";\r\nimport ErrorPage from \"./Pages/ErrorPage\";\r\nimport RoomsPage from \"./Pages/RoomsPage\";\r\nimport \"./App.css\";\r\nimport { mode } from \"@chakra-ui/theme-tools\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Footer from \"./Components/NavComponents/Footer\";\r\n// theme.components.Button.baseStyle.borderRadius = \"0\";\r\n\r\nconst myTheme = extendTheme({\r\n  components: {\r\n    Button: {\r\n      defaultProps: {\r\n      }\r\n    },\r\n  }\r\n})\r\n\r\n\r\nexport const App = () => (\r\n  <Router>\r\n    <ChakraProvider theme={myTheme}>\r\n\r\n      <Box d=\"flex\" flexDir=\"column\" minH=\"100vh\">\r\n        <Box flex=\"1\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route exact path=\"/room/:slug\" component={SingleRoom} />\r\n            <Route exact path=\"/rooms/:slug\" component={RoomsPage} />\r\n            <Route exact path=\"/rooms/\" component={RoomsPage} />\r\n            <Route component={ErrorPage} />\r\n          </Switch>\r\n        </Box>\r\n\r\n        <Box flexShrink={0}>\r\n          <Footer />\r\n        </Box>\r\n      </Box>\r\n\r\n    </ChakraProvider>\r\n  </Router>\r\n)\r\n","E:\\Repos\\hostel-chakra\\Hostel\\src\\Pages\\SingleRoom.tsx",["91","92","93","94","95"],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Pages\\ErrorPage.tsx",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\ColorModeSwitcher.tsx",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Logo.tsx",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Pages\\HomePage.tsx",["96"],"import React from 'react'\r\nimport PropertyTypeList from '../Components/HomeComponents/PropertyTypeList'\r\nimport SearchBar from '../Components/NavComponents/SearchBar';\r\nimport { Box, DarkMode } from \"@chakra-ui/react\"\r\nimport BG from \"../Images/HomeBG.webp\";\r\nimport Navbar from '../Components/NavComponents/Navbar';\r\n\r\nconst px = \"10%\";\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <Box>\r\n            <Box minH={[\"50vh\", \"75vh\", \"85vh\"]} style={{ background: \"url('\" + BG + \"') center/cover no-repeat\" }}>\r\n                <Box px={px} pt=\"5\">\r\n                    <Navbar></Navbar>\r\n                    <SearchBar />\r\n                    <Box as=\"h1\" fontFamily=\"mono\" opacity=\"0.5\" fontWeight=\"bold\" fontSize={[\"3xl\", \"4xl\", \"6xl\", \"8xl\"]}\r\n                        position=\"relative\" mt={[\"5vh\", \"10vh\", \"20vh\", \"30vh\"]}>EXPLORE AROUND</Box>\r\n                </Box>\r\n            </Box>\r\n            <Box px={px} mt=\"10\">\r\n                <Box as=\"h2\" fontWeight=\"bold\" fontSize=\"4xl\" mb=\"5\">\r\n                    LIVE ANYWHERE\r\n                </Box>\r\n                <PropertyTypeList></PropertyTypeList>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\nexport default HomePage;","E:\\Repos\\hostel-chakra\\Hostel\\src\\Pages\\RoomsPage.tsx",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\HomeComponents\\PropertyTypeList.tsx",["97","98","99"],"import { Flex, Grid, Spacer } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport Slider, { Settings } from 'react-slick';\r\nimport PropertyType from './PropertyType';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nvar settings: Settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 1,\r\n    initialSlide: 0,\r\n    swipeToSlide: true,\r\n    responsive: [\r\n        {\r\n            breakpoint: 1024,\r\n            settings: {\r\n                slidesToShow: 4,\r\n                slidesToScroll: 1,\r\n                infinite: true,\r\n                dots: true\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 600,\r\n            settings: {\r\n                slidesToShow: 3,\r\n                slidesToScroll: 1,\r\n                initialSlide: 2\r\n            }\r\n        },\r\n        {\r\n            breakpoint: 480,\r\n            settings: {\r\n                slidesToShow: 1,\r\n                slidesToScroll: 1\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\nconst PropertyTypeList = () => {\r\n    return (\r\n        <div>\r\n            <Slider {...settings}>\r\n                <PropertyType></PropertyType>\r\n                <PropertyType></PropertyType>\r\n                <PropertyType></PropertyType>\r\n                <PropertyType></PropertyType>\r\n                <PropertyType></PropertyType>\r\n            </Slider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PropertyTypeList;","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\SearchBar.tsx",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\Navbar.tsx",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\FilterComponents\\RoomCardList.tsx",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\PickRangeDay.tsx",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\HomeComponents\\PropertyType.tsx",["100","101"],"import { Box, Flex, Image, Square, VStack } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PropertyType = () => {\r\n    return (\r\n        <Link to=\"/rooms\">\r\n            <VStack alignItems=\"start\" p=\"4\">\r\n                <Box maxW=\"sm\" maxH=\"sm\">\r\n                    <Image width=\"inherit\" height=\"inherit\" src=\"https://bit.ly/2Z4KKcF\" objectFit=\"cover\"></Image>\r\n                </Box>\r\n\r\n                <Box\r\n                    mt=\"1\"\r\n                    fontWeight=\"semibold\"\r\n                    as=\"h4\"\r\n                    lineHeight=\"tight\"\r\n                    isTruncated\r\n                >\r\n                    Apartment\r\n            </Box>\r\n                <Box>\r\n                    <Box as=\"span\" color=\"gray.500\" fontSize=\"md\">\r\n                        100+ rooms\r\n          </Box>\r\n                </Box>\r\n            </VStack>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default PropertyType;","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\PopDetail.tsx",["102","103"],"import { Box, Flex, VStack, Text, Spacer, Square, Button, StackDivider } from '@chakra-ui/react';\r\nimport React from 'react';\r\n\r\ntype PopDetailState = {\r\n    adult: number;\r\n    children: number;\r\n    bedRoom: number;\r\n}\r\n\r\ninterface PopDetailProps extends PopDetailState {\r\n    updatePeople: (adult: number, children: number, room: number) => void;\r\n}\r\n\r\nconst PopDetail: React.FC<PopDetailProps> = ({ adult, children, bedRoom, updatePeople }) => {\r\n    return (\r\n        <div>\r\n            <Box p=\"4\" style={{ backdropFilter: \"blur(5px)\" }}>\r\n                <VStack align=\"stretch\" spacing={4}>\r\n                    <Flex alignItems=\"center\">\r\n                        <Text mr=\"auto\" fontSize=\"md\">Adult</Text>\r\n                        <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                            <Button variant=\"ghost\" borderRadius=\"0\" disabled={adult <= 1 ? true : false}\r\n                                onClick={() => updatePeople(--adult, children, bedRoom)}>-</Button>\r\n                        </Square>\r\n                        <Text mx=\"4\" fontSize=\"md\">{adult}</Text>\r\n                        <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                            <Button variant=\"ghost\" borderRadius=\"0\"\r\n                                onClick={() => updatePeople(++adult, children, bedRoom)}>+</Button>\r\n                        </Square>\r\n                    </Flex>\r\n                    <Flex alignItems=\"center\">\r\n                        <Text mr=\"auto\" fontSize=\"md\">Children</Text>\r\n                        <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                            <Button variant=\"ghost\" borderRadius=\"0\" disabled={children <= 0 ? true : false}\r\n                                onClick={() => updatePeople(adult, --children, bedRoom)}>-</Button>\r\n                        </Square>\r\n                        <Text mx=\"4\" fontSize=\"md\">{children}</Text>\r\n                        <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                            <Button variant=\"ghost\" borderRadius=\"0\"\r\n                                onClick={() => updatePeople(adult, ++children, bedRoom)}>+</Button>\r\n                        </Square>\r\n                    </Flex>\r\n                    <Flex alignItems=\"center\">\r\n                        <Text mr=\"auto\" fontSize=\"md\">Room</Text>\r\n                        <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                            <Button variant=\"ghost\" borderRadius=\"0\" disabled={bedRoom <= 1 ? true : false}\r\n                                onClick={() => updatePeople(adult, children, --bedRoom)}>-</Button>\r\n                        </Square>\r\n                        <Text mx=\"4\" fontSize=\"md\">{bedRoom}</Text>\r\n                        <Square border=\"1px\" borderColor=\"yellow.400\">\r\n                            <Button variant=\"ghost\" borderRadius=\"0\"\r\n                                onClick={() => updatePeople(adult, children, ++bedRoom)}>+</Button>\r\n                        </Square>\r\n                    </Flex>\r\n                </VStack>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopDetail;","E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\FilterComponents\\RoomCard.tsx",["104"],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\NavComponents\\Footer.tsx",[],"E:\\Repos\\hostel-chakra\\Hostel\\src\\Components\\SingleRoomComponents\\MyRoomBadge.tsx",["105"],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":13,"column":10,"nodeType":"112","messageId":"113","endLine":13,"endColumn":14},{"ruleId":"110","severity":1,"message":"114","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":18},{"ruleId":"110","severity":1,"message":"115","line":9,"column":8,"nodeType":"112","messageId":"113","endLine":9,"endColumn":17},{"ruleId":"110","severity":1,"message":"116","line":22,"column":6,"nodeType":"112","messageId":"113","endLine":22,"endColumn":21},{"ruleId":"110","severity":1,"message":"117","line":41,"column":7,"nodeType":"112","messageId":"113","endLine":41,"endColumn":18},{"ruleId":"110","severity":1,"message":"118","line":45,"column":13,"nodeType":"112","messageId":"113","endLine":45,"endColumn":17},{"ruleId":"110","severity":1,"message":"119","line":4,"column":15,"nodeType":"112","messageId":"113","endLine":4,"endColumn":23},{"ruleId":"110","severity":1,"message":"120","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":14},{"ruleId":"110","severity":1,"message":"121","line":1,"column":16,"nodeType":"112","messageId":"113","endLine":1,"endColumn":20},{"ruleId":"110","severity":1,"message":"122","line":1,"column":22,"nodeType":"112","messageId":"113","endLine":1,"endColumn":28},{"ruleId":"110","severity":1,"message":"120","line":1,"column":15,"nodeType":"112","messageId":"113","endLine":1,"endColumn":19},{"ruleId":"110","severity":1,"message":"123","line":1,"column":28,"nodeType":"112","messageId":"113","endLine":1,"endColumn":34},{"ruleId":"110","severity":1,"message":"122","line":1,"column":35,"nodeType":"112","messageId":"113","endLine":1,"endColumn":41},{"ruleId":"110","severity":1,"message":"124","line":1,"column":59,"nodeType":"112","messageId":"113","endLine":1,"endColumn":71},{"ruleId":"110","severity":1,"message":"125","line":6,"column":7,"nodeType":"112","messageId":"113","endLine":6,"endColumn":32},{"ruleId":"110","severity":1,"message":"126","line":1,"column":37,"nodeType":"112","messageId":"113","endLine":1,"endColumn":43},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"@typescript-eslint/no-unused-vars","'mode' is defined but never used.","Identifier","unusedVar","'userInfo' is defined but never used.","'SearchBar' is defined but never used.","'SingleRoomProps' is defined but never used.","'GetRoomById' is assigned a value but never used.","'slug' is assigned a value but never used.","'DarkMode' is defined but never used.","'Flex' is defined but never used.","'Grid' is defined but never used.","'Spacer' is defined but never used.","'Square' is defined but never used.","'StackDivider' is defined but never used.","'defaultRoom' is assigned a value but never used.","'Center' is defined but never used.","no-global-assign","no-unsafe-negation"]